{"ast":null,"code":"var _jsxFileName = \"/home/paula/Documents/Practica/git/user_interface/src/components/InferenceUI/InferenceUI.js\";\nimport './InferenceUI.css';\nimport { Container, Button, Modal, ModalHeader, ModalBody, ModalFooter, Progress, Spinner } from 'reactstrap';\nimport React, { useState } from 'react'; //import io from 'socket.io-client';\n\nimport \"react-responsive-carousel/lib/styles/carousel.min.css\";\nvar almostStreaming = false;\nvar timeStartPressed;\nvar streaming;\nvar countdownFrom = 1;\nvar CSHiddenBtn;\n\nclass WebcamStream extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isVideoLoading: true\n    };\n    this.videoTag = React.createRef();\n    this.canvasPreview = React.createRef();\n    this.selectVideoSrc = React.createRef();\n    this.tick = this.tick.bind(this);\n  }\n\n  componentDidMount() {\n    navigator.mediaDevices.enumerateDevices().then(deviceInfos => {\n      for (let i = 0; i !== deviceInfos.length; ++i) {\n        const deviceInfo = deviceInfos[i];\n        const option = document.createElement('option');\n        option.value = deviceInfo.deviceId;\n\n        if (deviceInfo.kind === 'videoinput') {\n          option.text = deviceInfo.label || 'camera ' + (this.selectVideoSrc.current.length + 1);\n          this.selectVideoSrc.current.appendChild(option);\n        }\n      }\n    }).then(navigator.mediaDevices.getUserMedia({\n      video: {\n        facingMode: \"environment\"\n      }\n    }).then(stream => {\n      this.videoTag.current.srcObject = stream;\n      requestAnimationFrame(this.tick);\n      window.stream = stream;\n    }));\n  }\n\n  tick() {\n    const video = this.videoTag.current;\n    const checkVideoState = setInterval(() => {\n      if (video.readyState === video.HAVE_ENOUGH_DATA) {\n        clearInterval(checkVideoState);\n        this.setState({\n          isVideoLoading: false\n        });\n        const canvasPreviewElement = this.canvasPreview.current;\n        const canvasPreview = canvasPreviewElement.getContext(\"2d\");\n        canvasPreviewElement.height = video.videoHeight;\n        canvasPreviewElement.width = video.videoWidth;\n        canvasPreview.drawImage(video, 0, 0, canvasPreviewElement.width, canvasPreviewElement.height);\n\n        if (almostStreaming) {\n          canvasPreview.font = \"200px Arial\";\n          countdown(countdownFrom, canvasPreview, this);\n        }\n\n        requestAnimationFrame(this.tick);\n      }\n    }, 50);\n  }\n\n  render() {\n    const {\n      isVideoLoading\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"video\", {\n      ref: this.videoTag,\n      width: \"400\",\n      height: \"400\",\n      autoPlay: true,\n      style: {\n        display: \"none\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }\n    }), !isVideoLoading && /*#__PURE__*/React.createElement(\"canvas\", {\n      ref: this.canvasPreview,\n      id: \"canvasPreview\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 29\n      }\n    }), isVideoLoading && /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 28\n      }\n    }, \"Please wait while we load the video stream.\"), /*#__PURE__*/React.createElement(\"div\", {\n      id: \"videoSelectDiv\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(\"select\", {\n      ref: this.selectVideoSrc,\n      style: {\n        width: 300\n      },\n      id: \"videoSelect\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 6\n      }\n    }), /*#__PURE__*/React.createElement(Button, {\n      color: \"primary\",\n      onClick: () => {\n        console.log(this.props);\n        document.getElementById(\"videoSelectDiv\").remove();\n        this.props.handler(\"OnConnection\");\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 6\n      }\n    }, \"Ok\")));\n  }\n\n}\n\nfunction countdown(seconds, canvas, el) {\n  let context = canvas;\n  let countdown = seconds - Math.trunc((-timeStartPressed + Date.now()) / 1000);\n  context.beginPath();\n  context.arc(320, 240, 130, 0, 2 * Math.PI);\n  context.fillStyle = \"rgba(255, 255, 255, 0.8)\";\n  ;\n  context.fill();\n  context.beginPath();\n  context.fillStyle = \"black\";\n\n  if (countdown >= 10) {\n    context.fillText(countdown.toString(10), 200, 315);\n  } else if (countdown >= 1) {\n    context.fillText(countdown.toString(10), 270, 308, 100);\n  }\n\n  context.fill();\n\n  if (countdown < 1) {\n    almostStreaming = false;\n    streaming = true;\n    el.props.handler(\"Streaming\");\n  }\n}\n\nvar slidesData = [];\n\nvar Carousel = require('react-responsive-carousel').Carousel;\n\nconst ModalDiagnosis = props => {\n  const {\n    className\n  } = props;\n  const [modal, setModal] = useState(true);\n\n  const toggle = () => {\n    setModal(!modal);\n    props.handler();\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Modal, {\n    isOpen: modal,\n    toggle: toggle,\n    className: className,\n    size: 'xl',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(ModalHeader, {\n    toggle: toggle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 9\n    }\n  }, \"Modal title\"), /*#__PURE__*/React.createElement(ModalBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 6\n    }\n  }), /*#__PURE__*/React.createElement(Spinner, {\n    color: \"info\",\n    style: {\n      position: 'absolute',\n      margin: 'auto'\n    },\n    size: 'xl',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 6\n    }\n  }))));\n};\n\nconst ModalScreenshots = props => {\n  const {\n    className\n  } = props;\n  const [modal, setModal] = useState(true);\n\n  const toggle = () => {\n    setModal(!modal);\n    props.handler();\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Modal, {\n    isOpen: modal,\n    toggle: toggle,\n    className: className,\n    size: 'xl',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(ModalHeader, {\n    toggle: toggle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 9\n    }\n  }, \"Modal title\"), /*#__PURE__*/React.createElement(ModalBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Carousel, {\n    showArrows: true,\n    selectedItem: 0,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 9\n    }\n  }, slidesData.map(slide => /*#__PURE__*/React.createElement(\"div\", {\n    key: 0,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    className: \"slick-slide-image\",\n    src: slide.src,\n    alt: \"Error\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 15\n    }\n  }))))), /*#__PURE__*/React.createElement(ModalFooter, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 9\n    }\n  })));\n};\n\nclass Screenshots extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      lastScreenshotID: 0,\n      galleryImages: [],\n      modalOn: false\n    };\n\n    this.captureScreenshot = async () => {\n      var canvas = document.querySelector(\"#canvasPreview\");\n      var imgAsDataURL = canvas.toDataURL(\"image/jpeg\", 1);\n      let newSlidesData = [{\n        src: imgAsDataURL\n      }];\n      slidesData = slidesData.concat(newSlidesData);\n      await this.setState({\n        lastScreenshotID: this.state.lastScreenshotID + 1\n      });\n      let btnsCarousel = document.getElementsByClassName(\"control-arrow\");\n      document.querySelector(\".carousel-slider\").style.display = 'none';\n      let thumbs = document.getElementsByClassName(\"thumb\");\n\n      thumbs[thumbs.length - 1].onclick = async () => {\n        if (this.props.currentState.showModalScreenshots) {\n          this.props.handler(\"Screenshots\");\n          this.state.modalOn = true;\n        }\n      };\n\n      try {\n        btnsCarousel[2].style.backgroundColor = 'black';\n        btnsCarousel[3].style.backgroundColor = 'black';\n      } catch {}\n    };\n  }\n\n  componentDidMount() {\n    CSHiddenBtn = document.querySelector(\"#BtnCaptureScreenshot\");\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 4\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      color: \"primary\",\n      id: \"BtnCaptureScreenshot\",\n      onClick: () => this.captureScreenshot(),\n      style: {\n        display: 'none'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 5\n      }\n    }, \"Capture Screenshot\"), this.state.modalOn && /*#__PURE__*/React.createElement(ModalScreenshots, {\n      handler: () => {\n        this.setState({\n          modalOn: false\n        });\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 237,\n        columnNumber: 28\n      }\n    }), /*#__PURE__*/React.createElement(Carousel, {\n      showArrows: true,\n      selectedItem: this.state.lastScreenshotID,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 238,\n        columnNumber: 9\n      }\n    }, slidesData.map(slide => /*#__PURE__*/React.createElement(\"div\", {\n      key: this.state.lastScreenshotID,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 240,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      className: \"slick-slide-image\",\n      src: slide.src,\n      alt: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 241,\n        columnNumber: 15\n      }\n    })))));\n  }\n\n}\n\nfunction startStopFunction(btn) {\n  if (btn.props.currentState.textMainBtn.localeCompare(\"Start\") === 0) {\n    btn.props.handler(\"Countdown\");\n    startFunction(btn);\n    return;\n  }\n\n  btn.props.handler(\"StopStream\"); //stopFunction();\n}\n\nfunction startFunction(btn) {\n  almostStreaming = true;\n  timeStartPressed = Date.now();\n}\n\nclass Diagnosis extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      modalOn: false\n    };\n  }\n\n  render() {\n    if (this.props.currentState.showModalDiagnosis) {\n      this.setState({\n        modalOn: true\n      });\n    }\n\n    console.log(\"ass\" + this.props.currentState.showModalDianosis);\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 279,\n        columnNumber: 4\n      }\n    }, this.state.modalOn && /*#__PURE__*/React.createElement(ModalDiagnosis, {\n      handler: () => {\n        this.setState({\n          modalOn: false\n        });\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 280,\n        columnNumber: 28\n      }\n    }));\n  }\n\n}\n\nclass ComponentsMain extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 295,\n        columnNumber: 4\n      }\n    }, this.props.currentState.showStartBtn && /*#__PURE__*/React.createElement(Button, {\n      color: \"primary\",\n      onClick: () => startStopFunction(this),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 296,\n        columnNumber: 45\n      }\n    }, this.props.currentState.textMainBtn), this.props.currentState.showCaptureBtn && /*#__PURE__*/React.createElement(Button, {\n      color: \"primary\",\n      disabled: this.props.currentState.disableBtnCapture,\n      onClick: () => CSHiddenBtn.click(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 297,\n        columnNumber: 47\n      }\n    }, \"Capture Screenshot\"), this.props.currentState.showProgressBar && /*#__PURE__*/React.createElement(Progress, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 298,\n        columnNumber: 48\n      }\n    }));\n  }\n\n}\n\nclass InferenceUI extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      current: \"SelectingSource\",\n      textMainBtn: \"Start\",\n      showStartBtn: false,\n      showCaptureBtn: false,\n      showVideoSelect: false,\n      showProgressBar: false,\n      showModalScreenshots: false,\n      //if requested\n      showModalDiagnosis: false,\n      disableBtnCapture: false\n    };\n  }\n\n  async handler(nextState) {\n    await this.setState({\n      current: nextState\n    });\n    this.showWeas();\n  }\n\n  showWeas() {\n    console.log(\"estado en switch: \");\n    console.log(this.state.current);\n\n    switch (this.state.current) {\n      case 'OnConnection':\n        this.setState({\n          textMainBtn: \"Start\",\n          showStartBtn: true,\n          showCaptureBtn: true,\n          showProgressBar: false,\n          showModalScreenshots: true,\n          showModalDiagnosis: false,\n          disableBtnCapture: false\n        });\n        break;\n\n      case 'Countdown':\n        this.setState({\n          textMainBtn: \"Stop\",\n          disableBtnCapture: true,\n          showModalScreenshots: false\n        });\n        break;\n\n      case 'Streaming':\n        this.setState({\n          textMainBtn: \"Stop\",\n          showProgressBar: true,\n          showModalScreenshots: false,\n          showModalScreenshots: false,\n          disableBtnCapture: false\n        });\n        break;\n\n      case 'StopStream':\n        this.setState({\n          textMainBtn: \"Start\",\n          showModalDiagnosis: true,\n          showModalScreenshots: true\n        });\n        break;\n\n      case 'Screenshots':\n        this.setState({\n          showModalScreenshots: true\n        });\n        break;\n\n      default:\n        console.log('State not defined');\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(Container, {\n      id: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 375,\n        columnNumber: 6\n      }\n    }, /*#__PURE__*/React.createElement(WebcamStream, {\n      id: \"WebcamStream\",\n      handler: nextState => this.handler(nextState),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 376,\n        columnNumber: 7\n      }\n    }), /*#__PURE__*/React.createElement(ComponentsMain, {\n      currentState: this.state,\n      handler: nextState => this.handler(nextState),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 377,\n        columnNumber: 7\n      }\n    }), /*#__PURE__*/React.createElement(Screenshots, {\n      currentState: this.state,\n      handler: nextState => this.handler(nextState),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 378,\n        columnNumber: 7\n      }\n    }), /*#__PURE__*/React.createElement(Diagnosis, {\n      currentState: this.state,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 379,\n        columnNumber: 7\n      }\n    }));\n  }\n\n}\n\nexport default InferenceUI;","map":{"version":3,"sources":["/home/paula/Documents/Practica/git/user_interface/src/components/InferenceUI/InferenceUI.js"],"names":["Container","Button","Modal","ModalHeader","ModalBody","ModalFooter","Progress","Spinner","React","useState","almostStreaming","timeStartPressed","streaming","countdownFrom","CSHiddenBtn","WebcamStream","Component","constructor","props","state","isVideoLoading","videoTag","createRef","canvasPreview","selectVideoSrc","tick","bind","componentDidMount","navigator","mediaDevices","enumerateDevices","then","deviceInfos","i","length","deviceInfo","option","document","createElement","value","deviceId","kind","text","label","current","appendChild","getUserMedia","video","facingMode","stream","srcObject","requestAnimationFrame","window","checkVideoState","setInterval","readyState","HAVE_ENOUGH_DATA","clearInterval","setState","canvasPreviewElement","getContext","height","videoHeight","width","videoWidth","drawImage","font","countdown","render","display","console","log","getElementById","remove","handler","seconds","canvas","el","context","Math","trunc","Date","now","beginPath","arc","PI","fillStyle","fill","fillText","toString","slidesData","Carousel","require","ModalDiagnosis","className","modal","setModal","toggle","position","margin","ModalScreenshots","map","slide","src","Screenshots","lastScreenshotID","galleryImages","modalOn","captureScreenshot","querySelector","imgAsDataURL","toDataURL","newSlidesData","concat","btnsCarousel","getElementsByClassName","style","thumbs","onclick","currentState","showModalScreenshots","backgroundColor","startStopFunction","btn","textMainBtn","localeCompare","startFunction","Diagnosis","showModalDiagnosis","showModalDianosis","ComponentsMain","showStartBtn","showCaptureBtn","disableBtnCapture","click","showProgressBar","InferenceUI","showVideoSelect","nextState","showWeas"],"mappings":"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","sourcesContent":["import './InferenceUI.css';\nimport {Container, Button, Modal, ModalHeader, ModalBody, ModalFooter, Progress, Spinner\n    } from 'reactstrap';\nimport React, {useState}from 'react';\n//import io from 'socket.io-client';\n\nimport \"react-responsive-carousel/lib/styles/carousel.min.css\";\n\nvar almostStreaming = false;\nvar timeStartPressed;\nvar streaming;\nvar countdownFrom = 1;\nvar CSHiddenBtn;\nclass WebcamStream extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isVideoLoading: true\n    };\n\n    this.videoTag = React.createRef();\n    this.canvasPreview = React.createRef();\n\t\tthis.selectVideoSrc = React.createRef();\n    this.tick = this.tick.bind(this);\n  }\n  componentDidMount() {\n    navigator.mediaDevices\n\t\t.enumerateDevices()\n\t\t.then( deviceInfos => {\n\t\t\t\tfor (let i = 0; i !== deviceInfos.length; ++i) {\n\t\t\t\t\tconst deviceInfo = deviceInfos[i];\n\t\t\t\t\tconst option = document.createElement('option');\n\t\t\t\t\toption.value = deviceInfo.deviceId;\n\t\t\t\t\tif (deviceInfo.kind === 'videoinput') {\n\t\t\t\t\t\toption.text = deviceInfo.label || 'camera ' +\n\t\t\t\t\t\t\t(this.selectVideoSrc.current.length + 1);\n\t\t\t\t\t\tthis.selectVideoSrc.current.appendChild(option);\n\t\t\t\t\t} \n\t\t\t\t}\n\t\t})\t\t\t\t \n\t\t.then(navigator.mediaDevices\n\n      .getUserMedia({ video: { facingMode: \"environment\" } })\n      .then(stream => {\n        this.videoTag.current.srcObject = stream;\n        requestAnimationFrame(this.tick);\n        window.stream = stream;\n      })\n\t\t);\n  }\n\n\n  tick() {\n    const video = this.videoTag.current;\n\n    const checkVideoState = setInterval(() => {\n      if (video.readyState === video.HAVE_ENOUGH_DATA) {\n        clearInterval(checkVideoState);\n\n        this.setState({ isVideoLoading: false });\n\n          const canvasPreviewElement = this.canvasPreview.current;\n          const canvasPreview = canvasPreviewElement.getContext(\"2d\");\n\n          canvasPreviewElement.height = video.videoHeight;\n          canvasPreviewElement.width = video.videoWidth;\n          canvasPreview.drawImage(\n            video,\n            0,\n            0,\n            canvasPreviewElement.width,\n            canvasPreviewElement.height\n          );\n\t\t\t\t\tif(almostStreaming){\n\t\t\t\t\t\tcanvasPreview.font = \"200px Arial\"\n\t\t\t\t\t\tcountdown(countdownFrom,canvasPreview,this);\n\t\t\t\t\t}\n        requestAnimationFrame(this.tick);\n      }\n    }, 50);\n  }\n\n  render() {\n    const { isVideoLoading } = this.state;\n\n    return (\n      <div>\n        <video\n          ref={this.videoTag}\n          width=\"400\"\n          height=\"400\"\n          autoPlay\n          style={{ display: \"none\" }}\n        />\n\n        {!isVideoLoading && <canvas ref={this.canvasPreview} id=\"canvasPreview\" />}\n\n        {isVideoLoading && <p>Please wait while we load the video stream.</p>}\n\t\t\t\t<div id=\"videoSelectDiv\">\n\t\t\t\t\t<select ref={this.selectVideoSrc}\n\t\t\t\t\t\t\t\t\tstyle={{width: 300 }}\n\t\t\t\t\t\t\t\t\tid=\"videoSelect\"\n\t\t\t\t\t\t\t\n\t\t\t\t\t/>\n\t\t\t\t\t<Button color='primary' onClick={()=>{\n\t\t\t\t\t\t\t\t\t\tconsole.log(this.props);\n\t\t\t\t\t\t\t\t\t\tdocument.getElementById(\"videoSelectDiv\").remove();\n\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\tthis.props.handler(\"OnConnection\");\n\t\t\t\t\t}}>Ok</Button>\n\t\t\t\t</div>\n\n      </div>\n    );\n  }\n}\n\nfunction countdown(seconds,canvas,el){\n\t\n\tlet context = canvas;\t\n\tlet countdown = seconds - Math.trunc((-timeStartPressed + Date.now())/1000);\n  context.beginPath();\n  context.arc(320, 240, 130, 0, 2 * Math.PI);\n  context.fillStyle = \"rgba(255, 255, 255, 0.8)\";;\n  context.fill();\n  context.beginPath();\n  context.fillStyle = \"black\";\n  if(countdown >= 10){\n    context.fillText(countdown.toString(10),200,315);\n  }else if(countdown >= 1){\n    context.fillText(countdown.toString(10),270,308,100);\n  }\n\n  context.fill();\n  if (countdown <  1){\n    almostStreaming = false;\n    streaming = true;\n\t\tel.props.handler(\"Streaming\");\n  }\n\t\n}\nvar slidesData = [];\nvar Carousel = require('react-responsive-carousel').Carousel;\nconst ModalDiagnosis= (props) => {\n  const {\n    className\n  } = props;\n\n  const [modal, setModal] = useState(true);\n\n  const toggle = () => {\n  \tsetModal(!modal);\n\t\tprops.handler();\n\t}\n  return (\n    <div>\n      <Modal isOpen={modal} toggle={toggle} className={className} size={'xl'}>\n        <ModalHeader toggle={toggle}>Modal title</ModalHeader>\n        <ModalBody>\n\t\t\t\t\t<h1></h1>\n\t\t\t\t\t<Spinner color=\"info\" style={{ position: 'absolute',margin: 'auto' }} size={'xl'}/>\n        </ModalBody>\n      </Modal>\n    </div>\n  );\n}\n\nconst ModalScreenshots = (props) => {\n  const {\n    className,\n\t\n  } = props;\n  const [modal, setModal] = useState(true);\n\n  const toggle = () => {\n    setModal(!modal); \n\t\tprops.handler();\n  }\n  \n  return (\n    <div>\n      <Modal isOpen={modal} toggle={toggle} className={className} size={'xl'}>\n        <ModalHeader toggle={toggle}>Modal title</ModalHeader>\n        <ModalBody>\n        <Carousel showArrows={true} selectedItem={0} >\n          {slidesData.map((slide) =>\n            <div key={0}>\n              <img className=\"slick-slide-image\" src={slide.src} alt='Error' />\n            </div>\n          )}\n        </Carousel>\n        </ModalBody>\n        <ModalFooter>\n        </ModalFooter>\n      </Modal>\n    </div>\n  );\n}\nclass Screenshots extends React.Component{\n\tstate = {\n\t\tlastScreenshotID: 0,\n    galleryImages: [], \n\t\tmodalOn: false\n\t}\n\n\tcaptureScreenshot = async () => {\n\t\tvar canvas = document.querySelector(\"#canvasPreview\");\n\t\tvar imgAsDataURL = canvas.toDataURL(\"image/jpeg\",1);\n    let newSlidesData = [{src: imgAsDataURL}];\n\t\tslidesData = slidesData.concat(newSlidesData);\n\t\tawait this.setState({lastScreenshotID: this.state.lastScreenshotID+1});\n\t\tlet btnsCarousel = document.getElementsByClassName(\"control-arrow\");\n\t\tdocument.querySelector(\".carousel-slider\").style.display = 'none';\n\t  let thumbs = document.getElementsByClassName(\"thumb\");\n\t\tthumbs[thumbs.length-1].onclick = async() => {\n\t\t\tif(this.props.currentState.showModalScreenshots){\n\t\t\t\tthis.props.handler(\"Screenshots\")\n\t\t\t\tthis.state.modalOn = true;\n\t\t\t}\n\t\t};\t\n\t\ttry{\n\t\t\tbtnsCarousel[2].style.backgroundColor= 'black';\n\t\t\tbtnsCarousel[3].style.backgroundColor= 'black';\n\t\t}\n\t\tcatch{\n\t\t\n\t\t}\n\n}\n\tcomponentDidMount() {\n    CSHiddenBtn = document.querySelector(\"#BtnCaptureScreenshot\");\n\t}\n\trender(){\n    return(\n\t\t\t<div>\n\t\t\t\t<button color=\"primary\" id=\"BtnCaptureScreenshot\" onClick={() => this.captureScreenshot()} style={{display: 'none'}}>Capture Screenshot</button>\n\t\t\t\t{this.state.modalOn && <ModalScreenshots handler={()=>{this.setState({modalOn:false})}}/>}\n        <Carousel showArrows={true} selectedItem={this.state.lastScreenshotID} >\n          {slidesData.map((slide) =>\n            <div key={this.state.lastScreenshotID}>\n              <img className=\"slick-slide-image\" src={slide.src} alt='' />\n            </div>\n          )}\n        </Carousel>\n\t\t\t</div>\n    );\n\t}\n\n}\nfunction startStopFunction(btn){\n  if (btn.props.currentState.textMainBtn.localeCompare(\"Start\") === 0){\n\t\tbtn.props.handler(\"Countdown\");\n    startFunction(btn);\n    return;\n  }\n\tbtn.props.handler(\"StopStream\");\n  //stopFunction();\n}\nfunction startFunction(btn){\n\t\n\talmostStreaming = true;\n\ttimeStartPressed = Date.now();\n\n}\nclass Diagnosis extends React.Component{\n\tconstructor(props){\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tmodalOn: false\n\t\t}\n\t}\n\n\trender(){\n\t\tif(this.props.currentState.showModalDiagnosis){\n\t\t\tthis.setState({modalOn: true});\n\t\t}\n\t\tconsole.log(\"ass\" + this.props.currentState.showModalDianosis);\n\t\treturn(\n\t\t\t<div>\n\t\t\t\t{this.state.modalOn && <ModalDiagnosis handler={()=>{this.setState({modalOn:false})}}/>}\n\t\t\t</div>\n\t\t);\n\t}\n}\nclass ComponentsMain extends React.Component{\n\tconstructor(props){\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t}\n\t}\n  \n\n\trender(){\n\t\treturn(\n\t\t\t<div>\n\t\t\t{this.props.currentState.showStartBtn && <Button color=\"primary\" onClick={() => startStopFunction(this)}>{this.props.currentState.textMainBtn}</Button>}\n\t\t\t{this.props.currentState.showCaptureBtn && <Button color=\"primary\" disabled={this.props.currentState.disableBtnCapture}  onClick={() => CSHiddenBtn.click()}>{\"Capture Screenshot\"}</Button>}\n\t\t\t{this.props.currentState.showProgressBar && <Progress/>}\n\t\t\t</div>\n\t\t);\n\t}\n}\nclass InferenceUI extends React.Component {\n    constructor(props){\n        super(props);\n        this.state = {\n      \t\tcurrent: \"SelectingSource\",\n\t\t\t\t\ttextMainBtn: \"Start\",\n\t\t\t\t\tshowStartBtn: false,\n\t\t\t\t\tshowCaptureBtn: false,\n\t\t\t\t\tshowVideoSelect: false,\n\t\t\t\t\tshowProgressBar: false,\n\t\t\t\t\tshowModalScreenshots: false, //if requested\n\t\t\t\t\tshowModalDiagnosis: false,\n\t\t\t\t\tdisableBtnCapture: false,\n        }\n    }\n   \n\t\tasync handler(nextState){\n\t\t\tawait this.setState({current: nextState});\n\t\t\tthis.showWeas();\n\t\t} \n\n  \tshowWeas(){\n\t\tconsole.log(\"estado en switch: \");\n\t\tconsole.log(this.state.current);\n\t\t\t\n    \tswitch(this.state.current){\n      \tcase 'OnConnection':\n        \tthis.setState({\n          \ttextMainBtn: \"Start\",\n\t\t\t\t\t\tshowStartBtn: true,\n\t\t\t\t\t\tshowCaptureBtn: true,\n\t\t\t\t\t\tshowProgressBar: false,\n\t\t\t\t\t\tshowModalScreenshots: true, \n\t\t\t\t\t\tshowModalDiagnosis: false,\n\t\t\t\t\t\tdisableBtnCapture: false\n\t\t\t\t\t});\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'Countdown':\n\t\t\t\t\tthis.setState({\n\t\t\t\t\t\ttextMainBtn: \"Stop\",\n\t\t\t\t\t\tdisableBtnCapture: true,\n\t\t\t\t\t\tshowModalScreenshots: false \n\t\t\t\t\t});\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'Streaming':\n\t\t\t\t\tthis.setState({\n\t\t\t\t\t\ttextMainBtn: \"Stop\",\n\t\t\t\t\t\tshowProgressBar: true,\n\t\t\t\t\t\tshowModalScreenshots: false,\n\t\t\t\t\t\tshowModalScreenshots: false ,\n\t\t\t\t\t\tdisableBtnCapture: false \n\t\t\t\t\t});\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'StopStream':\n\t\t\t\t\tthis.setState({\n\t\t\t\t\t\ttextMainBtn: \"Start\",\n\t\t\t\t\t\tshowModalDiagnosis: true,\n\t\t\t\t\t\tshowModalScreenshots: true \n\t\t\t\t\t});\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'Screenshots':\n\t\t\t\t\tthis.setState({\n\t\t\t\t\t\tshowModalScreenshots: true,\n\t\t\t\t\t});\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tconsole.log('State not defined');\n\n\t\t\t}\n\t\t}\n    render() {\n      return (\n\t\t\t\t\t<Container id=\"container\">\n\t\t\t\t\t\t<WebcamStream id=\"WebcamStream\" handler={(nextState)=>this.handler(nextState)}/>\n\t\t\t\t\t\t<ComponentsMain currentState={this.state} handler={(nextState)=>this.handler(nextState)}/> \n\t\t\t\t\t\t<Screenshots currentState={this.state} handler={(nextState)=>this.handler(nextState)}/>\n\t\t\t\t\t\t<Diagnosis currentState={this.state} />\n\t\t\t\t</Container>\n\t\n        );\n        \n    }\n}\n\nexport default InferenceUI;\n"]},"metadata":{},"sourceType":"module"}