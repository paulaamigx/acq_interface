{"ast":null,"code":"var _jsxFileName = \"/home/paula/Documents/Practica/git/user_interface/src/components/InferenceUI/InferenceUI.js\";\nimport './InferenceUI.css';\nimport { Container, Button } from 'reactstrap';\nimport React, { useState, useEffect } from 'react'; //import io from 'socket.io-client';\n\nimport Gallery from 'react-grid-gallery';\nimport Slider from \"react-slick\";\nimport \"slick-carousel/slick/slick.css\";\nimport \"slick-carousel/slick/slick-theme.css\";\nvar almostStreaming = false;\nvar timeStartPressed;\nvar streaming;\nvar screenshots = new Map();\n\nclass WebcamStream extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isVideoLoading: true\n    };\n    this.videoTag = React.createRef();\n    this.canvasPreview = React.createRef();\n    this.selectVideoSrc = React.createRef();\n    this.tick = this.tick.bind(this);\n  }\n\n  componentDidMount() {\n    navigator.mediaDevices.enumerateDevices().then(deviceInfos => {\n      for (let i = 0; i !== deviceInfos.length; ++i) {\n        const deviceInfo = deviceInfos[i];\n        const option = document.createElement('option');\n        option.value = deviceInfo.deviceId;\n\n        if (deviceInfo.kind === 'videoinput') {\n          option.text = deviceInfo.label || 'camera ' + (this.selectVideoSrc.current.length + 1);\n          this.selectVideoSrc.current.appendChild(option);\n        }\n      }\n    }).then(navigator.mediaDevices.getUserMedia({\n      video: {\n        facingMode: \"environment\"\n      }\n    }).then(stream => {\n      this.videoTag.current.srcObject = stream;\n      requestAnimationFrame(this.tick);\n      window.stream = stream;\n    }));\n  }\n\n  tick() {\n    const video = this.videoTag.current;\n    const checkVideoState = setInterval(() => {\n      if (video.readyState === video.HAVE_ENOUGH_DATA) {\n        clearInterval(checkVideoState);\n        this.setState({\n          isVideoLoading: false\n        });\n        const canvasPreviewElement = this.canvasPreview.current;\n        const canvasPreview = canvasPreviewElement.getContext(\"2d\");\n        canvasPreviewElement.height = video.videoHeight;\n        canvasPreviewElement.width = video.videoWidth;\n        canvasPreview.drawImage(video, 0, 0, canvasPreviewElement.width, canvasPreviewElement.height);\n\n        if (almostStreaming) {\n          canvasPreview.font = \"200px Arial\";\n          countdown(5, canvasPreview);\n        }\n\n        requestAnimationFrame(this.tick);\n      }\n    }, 50);\n  }\n\n  render() {\n    const {\n      isVideoLoading\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"video\", {\n      ref: this.videoTag,\n      width: \"400\",\n      height: \"400\",\n      autoPlay: true,\n      style: {\n        display: \"none\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }\n    }), !isVideoLoading && /*#__PURE__*/React.createElement(\"canvas\", {\n      ref: this.canvasPreview,\n      id: \"canvasPreview\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 29\n      }\n    }), isVideoLoading && /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 28\n      }\n    }, \"Please wait while we load the video stream.\"), /*#__PURE__*/React.createElement(\"select\", {\n      ref: this.selectVideoSrc,\n      style: {\n        width: 300\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 5\n      }\n    }));\n  }\n\n}\n\nfunction countdown(seconds, canvas) {\n  let context = canvas;\n  let countdown = seconds - Math.trunc((-timeStartPressed + Date.now()) / 1000);\n  context.beginPath();\n  context.arc(320, 240, 130, 0, 2 * Math.PI);\n  context.fillStyle = \"rgba(255, 255, 255, 0.8)\";\n  ;\n  context.fill();\n  context.beginPath();\n  context.fillStyle = \"black\";\n\n  if (countdown >= 10) {\n    context.fillText(countdown.toString(10), 200, 315);\n  } else if (countdown >= 1) {\n    context.fillText(countdown.toString(10), 270, 308, 100);\n  }\n\n  context.fill();\n\n  if (countdown < 1) {\n    almostStreaming = false;\n    streaming = true;\n  }\n}\n\nfunction startStopFunction(btn) {\n  if (btn.state.text.localeCompare(\"Start\") === 0) {\n    startFunction();\n    btn.setState({\n      text: \"Stop\"\n    });\n    return;\n  } //stopFunction();\n\n}\n\nfunction startFunction() {\n  almostStreaming = true;\n  timeStartPressed = Date.now();\n}\n\nvar slidesData = [];\n\nfunction Slideees() {\n  const [nav1, setNav1] = useState(null);\n  const [nav2, setNav2] = useState(null);\n  const [slider1, setSlider1] = useState(null);\n  const [slider2, setSlider2] = useState(null);\n  useEffect(() => {\n    setNav1(slider1);\n    setNav2(slider2);\n  });\n  const settingsMain = {\n    slidesToShow: 1,\n    slidesToScroll: 1,\n    arrows: false,\n    fade: true,\n    asNavFor: '.slider-nav'\n  };\n  const settingsThumbs = {\n    slidesToShow: 3,\n    slidesToScroll: 1,\n    asNavFor: '.slider-for',\n    dots: true,\n    centerMode: true,\n    swipeToSlide: true,\n    focusOnSelect: true,\n    centerPadding: '10px'\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"slider-wrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Slider, Object.assign({}, settingsMain, {\n    asNavFor: nav2,\n    ref: slider => setSlider1(slider),\n    arrows: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 9\n    }\n  }), slidesData.map(slide => /*#__PURE__*/React.createElement(\"div\", {\n    className: \"slick-slide\",\n    key: slide.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    className: \"slick-slide-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 15\n    }\n  }, slide.title), /*#__PURE__*/React.createElement(\"img\", {\n    className: \"slick-slide-image\",\n    src: slide.src,\n    alt: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    className: \"slick-slide-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 15\n    }\n  }, slide.label)))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"thumbnail-slider-wrap\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Slider, Object.assign({}, settingsThumbs, {\n    asNavFor: nav1,\n    ref: slider => setSlider2(slider),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 11\n    }\n  }), slidesData.map(slide => /*#__PURE__*/React.createElement(\"div\", {\n    className: \"slick-slide\",\n    key: slide.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    className: \"slick-slide-image\",\n    src: slide.src,\n    alt: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 17\n    }\n  })))))));\n}\n\nclass Screenshots extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      lastScreenshotID: 0,\n      galleryImages: [],\n      slidesData: []\n    };\n\n    this.captureScreenshot = async () => {\n      await this.setState({\n        lastScreenshotID: this.state.lastScreenshotID + 1\n      });\n      var canvas = document.querySelector(\"#canvasPreview\");\n      var imgAsDataURL = canvas.toDataURL(\"image/jpeg\", 1);\n      let newSlidesData = [{\n        id: 1,\n        title: 'ss'.concat(this.state.lastScreenshotID),\n        label: 'rr',\n        src: imgAsDataURL\n      }];\n      slidesData = slidesData.concat(newSlidesData);\n      var aaaa = document.querySelector(\".slick-next\");\n      console.log(aaaa);\n\n      try {\n        aaaa.width = 100;\n      } catch (e) {\n        console.log(e);\n      } //await screenshots.set(this.state.lastScreenshotID, imgAsDataURL);\n\n      /* \n       let json1 = [{src: imgAsDataURL, thumbnail: imgAsDataURL, thumbnailWidth: canvas.width/5, thumbnailHeight: canvas.height/5, caption: 'Captura '.concat(this.state.lastScreenshotID)}];\n       let aaa = this.state.galleryImages.concat(json1);\n       await this.setState({galleryImages: aaa});\n      */\n\n    };\n  }\n\n  //////////////////\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 262,\n        columnNumber: 4\n      }\n    }, this.props.render({\n      captureScreenshot: this.captureScreenshot\n    }), /*#__PURE__*/React.createElement(Slideees, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 266,\n        columnNumber: 4\n      }\n    }));\n  }\n\n}\n\nclass Buttons extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      text: \"Start\"\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 282,\n        columnNumber: 4\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      color: \"primary\",\n      onClick: () => startStopFunction(this),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 283,\n        columnNumber: 4\n      }\n    }, this.state.text));\n  }\n\n}\n\nclass InferenceUI extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(Container, {\n      id: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 299,\n        columnNumber: 6\n      }\n    }, /*#__PURE__*/React.createElement(WebcamStream, {\n      id: \"asa\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 300,\n        columnNumber: 7\n      }\n    }), /*#__PURE__*/React.createElement(Buttons, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 301,\n        columnNumber: 7\n      }\n    }), /*#__PURE__*/React.createElement(Screenshots, {\n      render: ({\n        captureScreenshot\n      }) => /*#__PURE__*/React.createElement(Button, {\n        color: \"primary\",\n        onClick: () => captureScreenshot(),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 303,\n          columnNumber: 8\n        }\n      }, \"Capture Screenshot\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 302,\n        columnNumber: 7\n      }\n    }));\n  }\n\n}\n\nexport default InferenceUI;","map":{"version":3,"sources":["/home/paula/Documents/Practica/git/user_interface/src/components/InferenceUI/InferenceUI.js"],"names":["Container","Button","React","useState","useEffect","Gallery","Slider","almostStreaming","timeStartPressed","streaming","screenshots","Map","WebcamStream","Component","constructor","props","state","isVideoLoading","videoTag","createRef","canvasPreview","selectVideoSrc","tick","bind","componentDidMount","navigator","mediaDevices","enumerateDevices","then","deviceInfos","i","length","deviceInfo","option","document","createElement","value","deviceId","kind","text","label","current","appendChild","getUserMedia","video","facingMode","stream","srcObject","requestAnimationFrame","window","checkVideoState","setInterval","readyState","HAVE_ENOUGH_DATA","clearInterval","setState","canvasPreviewElement","getContext","height","videoHeight","width","videoWidth","drawImage","font","countdown","render","display","seconds","canvas","context","Math","trunc","Date","now","beginPath","arc","PI","fillStyle","fill","fillText","toString","startStopFunction","btn","localeCompare","startFunction","slidesData","Slideees","nav1","setNav1","nav2","setNav2","slider1","setSlider1","slider2","setSlider2","settingsMain","slidesToShow","slidesToScroll","arrows","fade","asNavFor","settingsThumbs","dots","centerMode","swipeToSlide","focusOnSelect","centerPadding","slider","map","slide","id","title","src","Screenshots","lastScreenshotID","galleryImages","captureScreenshot","querySelector","imgAsDataURL","toDataURL","newSlidesData","concat","aaaa","console","log","e","Buttons","InferenceUI"],"mappings":"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","sourcesContent":["import './InferenceUI.css';\nimport {Container, Button\n    } from 'reactstrap';\nimport React,{ useState, useEffect } from 'react';\n//import io from 'socket.io-client';\nimport Gallery from 'react-grid-gallery';\n\nimport Slider from \"react-slick\";\n\nimport \"slick-carousel/slick/slick.css\";\nimport \"slick-carousel/slick/slick-theme.css\";\n\nvar almostStreaming = false;\nvar timeStartPressed;\nvar streaming;\nvar screenshots = new Map();\nclass WebcamStream extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isVideoLoading: true\n    };\n\n    this.videoTag = React.createRef();\n    this.canvasPreview = React.createRef();\n\t\tthis.selectVideoSrc = React.createRef();\n    this.tick = this.tick.bind(this);\n  }\n  componentDidMount() {\n    navigator.mediaDevices\n\t\t.enumerateDevices()\n\t\t.then( deviceInfos => {\n\t\t\t\tfor (let i = 0; i !== deviceInfos.length; ++i) {\n\t\t\t\t\tconst deviceInfo = deviceInfos[i];\n\t\t\t\t\tconst option = document.createElement('option');\n\t\t\t\t\toption.value = deviceInfo.deviceId;\n\t\t\t\t\tif (deviceInfo.kind === 'videoinput') {\n\t\t\t\t\t\toption.text = deviceInfo.label || 'camera ' +\n\t\t\t\t\t\t\t(this.selectVideoSrc.current.length + 1);\n\t\t\t\t\t\tthis.selectVideoSrc.current.appendChild(option);\n\t\t\t\t\t} \n\t\t\t\t}\n\t\t})\t\t\t\t \n\t\t.then(navigator.mediaDevices\n\n      .getUserMedia({ video: { facingMode: \"environment\" } })\n      .then(stream => {\n        this.videoTag.current.srcObject = stream;\n        requestAnimationFrame(this.tick);\n        window.stream = stream;\n      })\n\t\t);\n  }\n\n\n  tick() {\n    const video = this.videoTag.current;\n\n    const checkVideoState = setInterval(() => {\n      if (video.readyState === video.HAVE_ENOUGH_DATA) {\n        clearInterval(checkVideoState);\n\n        this.setState({ isVideoLoading: false });\n\n          const canvasPreviewElement = this.canvasPreview.current;\n          const canvasPreview = canvasPreviewElement.getContext(\"2d\");\n\n          canvasPreviewElement.height = video.videoHeight;\n          canvasPreviewElement.width = video.videoWidth;\n          canvasPreview.drawImage(\n            video,\n            0,\n            0,\n            canvasPreviewElement.width,\n            canvasPreviewElement.height\n          );\n\t\t\t\t\tif(almostStreaming){\n\t\t\t\t\t\tcanvasPreview.font = \"200px Arial\"\n\t\t\t\t\t\tcountdown(5,canvasPreview);\n\t\t\t\t\t}\n        requestAnimationFrame(this.tick);\n      }\n    }, 50);\n  }\n\n  render() {\n    const { isVideoLoading } = this.state;\n\n    return (\n      <div>\n        <video\n          ref={this.videoTag}\n          width=\"400\"\n          height=\"400\"\n          autoPlay\n          style={{ display: \"none\" }}\n        />\n\n        {!isVideoLoading && <canvas ref={this.canvasPreview} id=\"canvasPreview\" />}\n\n        {isVideoLoading && <p>Please wait while we load the video stream.</p>}\n\t\t\t\t<select ref={this.selectVideoSrc}\n\t\t\t\t\t\t\t\tstyle={{width: 300 }}\n\t\t\t\t/>\n\n      </div>\n    );\n  }\n}\n\nfunction countdown(seconds,canvas){\n\t\n\tlet context = canvas;\t\n\tlet countdown = seconds - Math.trunc((-timeStartPressed + Date.now())/1000);\n  context.beginPath();\n  context.arc(320, 240, 130, 0, 2 * Math.PI);\n  context.fillStyle = \"rgba(255, 255, 255, 0.8)\";;\n  context.fill();\n  context.beginPath();\n  context.fillStyle = \"black\";\n  if(countdown >= 10){\n    context.fillText(countdown.toString(10),200,315);\n  }else if(countdown >= 1){\n    context.fillText(countdown.toString(10),270,308,100);\n  }\n\n  context.fill();\n  if (countdown <  1){\n    almostStreaming = false;\n    streaming = true;\n    \n  }\n\t\n}\nfunction startStopFunction(btn){\n  if (btn.state.text.localeCompare(\"Start\") === 0){\n    startFunction();\n\t\tbtn.setState({text:\"Stop\"});\n    return;\n  }\n  //stopFunction();\n}\nfunction startFunction(){\n\talmostStreaming = true;\n\ttimeStartPressed = Date.now();\n\n}\nvar slidesData = [];\nfunction Slideees() {\n  const [nav1, setNav1] = useState(null);\n  const [nav2, setNav2] = useState(null);\n  const [slider1, setSlider1] = useState(null);\n  const [slider2, setSlider2] = useState(null);\n\n  useEffect(() => {\n\n    setNav1(slider1);\n    setNav2(slider2);\n\n  });\n\n\n  const settingsMain = {\n    slidesToShow: 1,\n    slidesToScroll: 1,\n    arrows: false,\n    fade: true,\n    asNavFor: '.slider-nav'\n  };\n\n  const settingsThumbs = {\n    slidesToShow: 3,\n    slidesToScroll: 1,\n    asNavFor: '.slider-for',\n    dots: true,\n    centerMode: true,\n    swipeToSlide: true,\n    focusOnSelect: true,\n    centerPadding: '10px'\n  };\n\n\n  return (\n\n    <div className=\"App\">\n\n      <div className=\"slider-wrapper\">\n\n        <Slider\n          {...settingsMain}\n          asNavFor={nav2}\n          ref={slider => (setSlider1(slider))}\n\t\t\t\t\tarrows = {true}\n        >\n\n          {slidesData.map((slide) =>\n\n            <div className=\"slick-slide\" key={slide.id}>\n              <h2 className=\"slick-slide-title\">{slide.title}</h2>\n              <img className=\"slick-slide-image\" src={slide.src} alt='' />\n              <label className=\"slick-slide-label\">{slide.label}</label>\n            </div>\n\n          )}\n\n        </Slider>\n        <div className=\"thumbnail-slider-wrap\">\n          <Slider\n            {...settingsThumbs}\n            asNavFor={nav1}\n            ref={slider => (setSlider2(slider))}>\n\n            {slidesData.map((slide) =>\n\n              <div className=\"slick-slide\" key={slide.id}>\n                <img className=\"slick-slide-image\" src={slide.src} alt='' />\n              </div>\n\n            )}\n\n          </Slider>\n        </div>\n      </div>\n\n    </div>\n  );\n}\nclass Screenshots extends React.Component{\n\tstate = {\n\t\tlastScreenshotID: 0,\n    galleryImages: [], \n\t\tslidesData: []\n\t}\n\n\tcaptureScreenshot = async () => {\n\t\tawait this.setState({lastScreenshotID: this.state.lastScreenshotID+1});\n\t\tvar canvas = document.querySelector(\"#canvasPreview\");\n\t\tvar imgAsDataURL = canvas.toDataURL(\"image/jpeg\",1);\n\n\t\tlet newSlidesData = [{id: 1, title: 'ss'.concat(this.state.lastScreenshotID), label: 'rr', src: imgAsDataURL}];\n\t\tslidesData = slidesData.concat(newSlidesData);\n\t\tvar aaaa = document.querySelector(\".slick-next\");\n\t\tconsole.log(aaaa);\n\t\ttry{\n\t\t\taaaa.width = 100;\n\t\t}\n\t\tcatch(e){\n\t\t\tconsole.log(e);\n\t\t}\n\t\t//await screenshots.set(this.state.lastScreenshotID, imgAsDataURL);\n   /* \n    let json1 = [{src: imgAsDataURL, thumbnail: imgAsDataURL, thumbnailWidth: canvas.width/5, thumbnailHeight: canvas.height/5, caption: 'Captura '.concat(this.state.lastScreenshotID)}];\n    let aaa = this.state.galleryImages.concat(json1);\n    await this.setState({galleryImages: aaa});\n\t\t*/\n\t};\n\n  //////////////////\n\n\trender(){\n\t\treturn(\n\t\t\t<div>\n\t\t\t\t{this.props.render({\n\t\t\t\t\tcaptureScreenshot: this.captureScreenshot \t\t\t\t\n\t\t\t\t})}\n\t\t\t<Slideees/>\n\t\t\t</div>\n\t\t);\n\t}\n\n}\nclass Buttons extends React.Component{\n\tconstructor(props){\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\ttext: \"Start\",\n\t\t}\n\t}\n\n\trender(){\n\t\treturn(\n\t\t\t<div>\n\t\t\t<Button color=\"primary\" onClick={() => startStopFunction(this)}>{this.state.text}</Button>\n\t\t\t</div>\n\t\t);\n\t}\n}\nclass InferenceUI extends React.Component {\n    constructor(props){\n        super(props);\n        this.state = {\n\n        }\n    }\n    \n\n    render() {\n      return (\n\t\t\t\t\t<Container id=\"container\">\n\t\t\t\t\t\t<WebcamStream id=\"asa\"/>\n\t\t\t\t\t\t<Buttons/>\n\t\t\t\t\t\t<Screenshots render= {({captureScreenshot}) => (\t\n\t\t\t\t\t\t\t<Button color=\"primary\" onClick={() => captureScreenshot()}>Capture Screenshot</Button>\n\t\t\t\t\t\t)}\n\t\t\t\t\t\t/>\n\t\t\t\t</Container>\n\t\n        );\n        \n    }\n}\n\nexport default InferenceUI;\n"]},"metadata":{},"sourceType":"module"}