{"ast":null,"code":"var _jsxFileName = \"/home/paula/Documents/Practica/git/user_interface/src/components/InferenceUI/ElementsMain.js\";\nimport { Container, Button, Progress } from 'reactstrap';\nimport React from 'react';\n\nclass ElementsMain extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 13\n      }\n    }, this.props.currentState.showStartBtn && /*#__PURE__*/React.createElement(Button, {\n      color: \"primary\",\n      onClick: () => startStopFunction(this),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 54\n      }\n    }, this.props.currentState.textMainBtn), this.props.currentState.showCaptureBtn && /*#__PURE__*/React.createElement(Button, {\n      color: \"primary\",\n      disabled: this.props.currentState.disableBtnCapture,\n      onClick: () => this.props.captureScreenshot(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 56\n      }\n    }, \"Capture Screenshot\"), this.props.currentState.showProgressBar && /*#__PURE__*/React.createElement(Progress, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 57\n      }\n    }));\n  }\n\n}\n\nfunction startStopFunction(btn) {\n  if (btn.props.currentState.textMainBtn.localeCompare(\"Start\") === 0) {\n    btn.props.handler(\"Countdown\");\n    startFunction(btn);\n    return;\n  }\n\n  btn.props.handler(\"StopStream\"); //stopFunction();\n}\n\nfunction startFunction(btn) {\n  btn.props.currentState.almostStreaming = true; //btn.props.timeStartPressed = Date.now();\n}\n\nexport default ElementsMain;","map":{"version":3,"sources":["/home/paula/Documents/Practica/git/user_interface/src/components/InferenceUI/ElementsMain.js"],"names":["Container","Button","Progress","React","ElementsMain","Component","constructor","props","state","render","currentState","showStartBtn","startStopFunction","textMainBtn","showCaptureBtn","disableBtnCapture","captureScreenshot","showProgressBar","btn","localeCompare","handler","startFunction","almostStreaming"],"mappings":";AAAA,SAAQA,SAAR,EAAmBC,MAAnB,EAA2BC,QAA3B,QACO,YADP;AAEA,OAAOC,KAAP,MAAkB,OAAlB;;AAGA,MAAMC,YAAN,SAA2BD,KAAK,CAACE,SAAjC,CAA0C;AACtCC,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa,EAAb;AAEH;;AAGDC,EAAAA,MAAM,GAAE;AACJ,wBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC,KAAKF,KAAL,CAAWG,YAAX,CAAwBC,YAAxB,iBAAwC,oBAAC,MAAD;AAAQ,MAAA,KAAK,EAAC,SAAd;AAAwB,MAAA,OAAO,EAAE,MAAMC,iBAAiB,CAAC,IAAD,CAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAiE,KAAKL,KAAL,CAAWG,YAAX,CAAwBG,WAAzF,CADzC,EAEC,KAAKN,KAAL,CAAWG,YAAX,CAAwBI,cAAxB,iBAA0C,oBAAC,MAAD;AAAQ,MAAA,KAAK,EAAC,SAAd;AAAwB,MAAA,QAAQ,EAAE,KAAKP,KAAL,CAAWG,YAAX,CAAwBK,iBAA1D;AAA8E,MAAA,OAAO,EAAE,MAAM,KAAKR,KAAL,CAAWS,iBAAX,EAA7F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA8H,oBAA9H,CAF3C,EAGC,KAAKT,KAAL,CAAWG,YAAX,CAAwBO,eAAxB,iBAA2C,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAH5C,CADJ;AAOH;;AAhBqC;;AAkB1C,SAASL,iBAAT,CAA2BM,GAA3B,EAA+B;AAC3B,MAAIA,GAAG,CAACX,KAAJ,CAAUG,YAAV,CAAuBG,WAAvB,CAAmCM,aAAnC,CAAiD,OAAjD,MAA8D,CAAlE,EAAoE;AAC9DD,IAAAA,GAAG,CAACX,KAAJ,CAAUa,OAAV,CAAkB,WAAlB;AACJC,IAAAA,aAAa,CAACH,GAAD,CAAb;AACA;AACD;;AACCA,EAAAA,GAAG,CAACX,KAAJ,CAAUa,OAAV,CAAkB,YAAlB,EANyB,CAO3B;AACD;;AACD,SAASC,aAAT,CAAuBH,GAAvB,EAA2B;AAEvBA,EAAAA,GAAG,CAACX,KAAJ,CAAUG,YAAV,CAAuBY,eAAvB,GAAyC,IAAzC,CAFuB,CAGzB;AAED;;AAKD,eAAelB,YAAf","sourcesContent":["import {Container, Button, Progress\n} from 'reactstrap';\nimport React from 'react';\n\n\nclass ElementsMain extends React.Component{\n    constructor(props){\n        super(props);\n        this.state = {\n        }\n    }\n  \n\n    render(){\n        return(\n            <div>\n            {this.props.currentState.showStartBtn && <Button color=\"primary\" onClick={() => startStopFunction(this)}>{this.props.currentState.textMainBtn}</Button>}\n            {this.props.currentState.showCaptureBtn && <Button color=\"primary\" disabled={this.props.currentState.disableBtnCapture}  onClick={() => this.props.captureScreenshot()}>{\"Capture Screenshot\"}</Button>}\n            {this.props.currentState.showProgressBar && <Progress/>}\n            </div>\n        );\n    }\n}\nfunction startStopFunction(btn){\n    if (btn.props.currentState.textMainBtn.localeCompare(\"Start\") === 0){\n          btn.props.handler(\"Countdown\");\n      startFunction(btn);\n      return;\n    }\n      btn.props.handler(\"StopStream\");\n    //stopFunction();\n  }\n  function startFunction(btn){\n      \n      btn.props.currentState.almostStreaming = true;\n    //btn.props.timeStartPressed = Date.now();\n  \n  }\n\n  \n\n\n  export default ElementsMain;"]},"metadata":{},"sourceType":"module"}