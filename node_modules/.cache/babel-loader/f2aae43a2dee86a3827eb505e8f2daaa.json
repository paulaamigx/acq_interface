{"ast":null,"code":"import { jsPDF } from \"jspdf\";\nimport foto from './aa.jpg';\nexport function changeDiagnosisImgOnModal(dir, indx, setIndx) {\n  if (dir.localeCompare('right') === 0) {\n    if (indx < 4) {\n      indx++;\n      document.getElementById('d_modalImg').src = document.getElementById('diagnosisImg' + indx).src;\n      document.getElementById('d_modalImgTag').innerHTML = document.getElementById('d_ImgTag' + indx).innerHTML;\n      setIndx(indx);\n    }\n  } else if (dir.localeCompare('left') === 0) {\n    if (indx > 1) {\n      indx--;\n      document.getElementById('d_modalImg').src = document.getElementById('diagnosisImg' + indx).src;\n      document.getElementById('d_modalImgTag').innerHTML = document.getElementById('d_ImgTag' + indx).innerHTML;\n      setIndx(indx);\n    }\n  }\n}\nexport async function makeReport(setPdfSrc, reportReady) {\n  document.body.style.cursor = 'wait';\n  document.getElementById('btnMakeReport').innerHTML = 'Generando...';\n  var pdf = new jsPDF('p', 'pt', 'a4');\n  let report = document.getElementById('ReportPage');\n  document.getElementById('r_obsBox').innerHTML = document.getElementById('diagnosisBox3').value;\n  document.getElementById('r_diagnosisBox').innerHTML = document.getElementById('diagnosisBox2').value;\n  pdf.html(report, {\n    callback: function (pdf) {\n      setPdfSrc(pdf.output('datauristring'));\n      console.log(reportReady);\n      reportReady();\n      document.body.style.cursor = 'default';\n      document.getElementById('btnMakeReport').innerHTML = 'Generar Informe';\n    }\n  });\n}\n\nfunction sleep(ms) {\n  return new Promise(resolve => setTimeout(resolve, ms));\n}\n\nexport default {\n  changeDiagnosisImgOnModal,\n  makeReport\n};","map":{"version":3,"sources":["/home/paula/Documentos/Simbiotica/git/user_interface/src/components/InferenceUI/SidePanel/Diagnosis/functions.js"],"names":["jsPDF","foto","changeDiagnosisImgOnModal","dir","indx","setIndx","localeCompare","document","getElementById","src","innerHTML","makeReport","setPdfSrc","reportReady","body","style","cursor","pdf","report","value","html","callback","output","console","log","sleep","ms","Promise","resolve","setTimeout"],"mappings":"AAAA,SAASA,KAAT,QAAsB,OAAtB;AACA,OAAOC,IAAP,MAAiB,UAAjB;AAEA,OAAO,SAASC,yBAAT,CAAmCC,GAAnC,EAAuCC,IAAvC,EAA6CC,OAA7C,EAAqD;AAC1D,MAAGF,GAAG,CAACG,aAAJ,CAAkB,OAAlB,MAA6B,CAAhC,EAAkC;AAChC,QAAGF,IAAI,GAAG,CAAV,EAAY;AACVA,MAAAA,IAAI;AACJG,MAAAA,QAAQ,CAACC,cAAT,CAAwB,YAAxB,EAAsCC,GAAtC,GAA4CF,QAAQ,CAACC,cAAT,CAAwB,iBAAeJ,IAAvC,EAA6CK,GAAzF;AACAF,MAAAA,QAAQ,CAACC,cAAT,CAAwB,eAAxB,EAAyCE,SAAzC,GAAqDH,QAAQ,CAACC,cAAT,CAAwB,aAAWJ,IAAnC,EAAyCM,SAA9F;AACAL,MAAAA,OAAO,CAACD,IAAD,CAAP;AACD;AACF,GAPD,MAQK,IAAGD,GAAG,CAACG,aAAJ,CAAkB,MAAlB,MAA4B,CAA/B,EAAiC;AACpC,QAAGF,IAAI,GAAG,CAAV,EAAY;AACVA,MAAAA,IAAI;AACJG,MAAAA,QAAQ,CAACC,cAAT,CAAwB,YAAxB,EAAsCC,GAAtC,GAA4CF,QAAQ,CAACC,cAAT,CAAwB,iBAAeJ,IAAvC,EAA6CK,GAAzF;AACAF,MAAAA,QAAQ,CAACC,cAAT,CAAwB,eAAxB,EAAyCE,SAAzC,GAAqDH,QAAQ,CAACC,cAAT,CAAwB,aAAWJ,IAAnC,EAAyCM,SAA9F;AACAL,MAAAA,OAAO,CAACD,IAAD,CAAP;AACD;AACF;AACF;AAED,OAAO,eAAeO,UAAf,CAA0BC,SAA1B,EAAqCC,WAArC,EAAiD;AACtDN,EAAAA,QAAQ,CAACO,IAAT,CAAcC,KAAd,CAAoBC,MAApB,GAA6B,MAA7B;AACAT,EAAAA,QAAQ,CAACC,cAAT,CAAwB,eAAxB,EAAyCE,SAAzC,GAAqD,cAArD;AACA,MAAIO,GAAG,GAAG,IAAIjB,KAAJ,CAAU,GAAV,EAAe,IAAf,EAAqB,IAArB,CAAV;AACA,MAAIkB,MAAM,GAAGX,QAAQ,CAACC,cAAT,CAAwB,YAAxB,CAAb;AACAD,EAAAA,QAAQ,CAACC,cAAT,CAAwB,UAAxB,EAAoCE,SAApC,GAAgDH,QAAQ,CAACC,cAAT,CAAwB,eAAxB,EAAyCW,KAAzF;AACAZ,EAAAA,QAAQ,CAACC,cAAT,CAAwB,gBAAxB,EAA0CE,SAA1C,GAAsDH,QAAQ,CAACC,cAAT,CAAwB,eAAxB,EAAyCW,KAA/F;AACAF,EAAAA,GAAG,CAACG,IAAJ,CAASF,MAAT,EAAgB;AACLG,IAAAA,QAAQ,EAAE,UAASJ,GAAT,EAAa;AACtBL,MAAAA,SAAS,CAACK,GAAG,CAACK,MAAJ,CAAW,eAAX,CAAD,CAAT;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYX,WAAZ;AACAA,MAAAA,WAAW;AACXN,MAAAA,QAAQ,CAACO,IAAT,CAAcC,KAAd,CAAoBC,MAApB,GAA6B,SAA7B;AACAT,MAAAA,QAAQ,CAACC,cAAT,CAAwB,eAAxB,EAAyCE,SAAzC,GAAqD,iBAArD;AACA;AAPI,GAAhB;AASD;;AAED,SAASe,KAAT,CAAeC,EAAf,EAAmB;AACjB,SAAO,IAAIC,OAAJ,CAAYC,OAAO,IAAIC,UAAU,CAACD,OAAD,EAAUF,EAAV,CAAjC,CAAP;AACC;;AAEH,eAAe;AAACxB,EAAAA,yBAAD;AAA4BS,EAAAA;AAA5B,CAAf","sourcesContent":["import { jsPDF } from \"jspdf\";\nimport foto from './aa.jpg'\n\nexport function changeDiagnosisImgOnModal(dir,indx, setIndx){\n  if(dir.localeCompare('right')===0){\n    if(indx < 4){\n      indx++;\n      document.getElementById('d_modalImg').src = document.getElementById('diagnosisImg'+indx).src;\n      document.getElementById('d_modalImgTag').innerHTML = document.getElementById('d_ImgTag'+indx).innerHTML;\n      setIndx(indx);\n    }\n  }\n  else if(dir.localeCompare('left')===0){\n    if(indx > 1){\n      indx--;\n      document.getElementById('d_modalImg').src = document.getElementById('diagnosisImg'+indx).src;\n      document.getElementById('d_modalImgTag').innerHTML = document.getElementById('d_ImgTag'+indx).innerHTML;\n      setIndx(indx);\n    }\n  }\n}\n\nexport async function makeReport(setPdfSrc, reportReady){\n  document.body.style.cursor = 'wait';\n  document.getElementById('btnMakeReport').innerHTML = 'Generando...';\n  var pdf = new jsPDF('p', 'pt', 'a4');\n  let report = document.getElementById('ReportPage');\n  document.getElementById('r_obsBox').innerHTML = document.getElementById('diagnosisBox3').value;\n  document.getElementById('r_diagnosisBox').innerHTML = document.getElementById('diagnosisBox2').value;\n  pdf.html(report,{\n             callback: function(pdf){\n              setPdfSrc(pdf.output('datauristring'));\n              console.log(reportReady);\n              reportReady();\n              document.body.style.cursor = 'default';\n              document.getElementById('btnMakeReport').innerHTML = 'Generar Informe';\n             }\n           });\n}\n\nfunction sleep(ms) {\n  return new Promise(resolve => setTimeout(resolve, ms));\n  }\n\nexport default {changeDiagnosisImgOnModal, makeReport};\n"]},"metadata":{},"sourceType":"module"}