{"ast":null,"code":"var _jsxFileName = \"/home/paula/Documents/Practica/git/user_interface/src/components/InferenceUI/Diagnosis.js\";\nimport { Modal, ModalHeader, ModalBody, ModalFooter, Spinner, TabContent, TabPane, Nav, NavItem, NavLink, Card, Button, CardTitle, CardText, Row, Col } from 'reactstrap';\nimport React, { useState } from 'react';\nimport classnames from 'classnames';\n\nclass Diagnosis extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 4\n      }\n    }, this.props.currentState.showModalDiagnosis && /*#__PURE__*/React.createElement(ModalDiagnosis, {\n      handlerSuper: () => {\n        this.props.handler(\"OnConnection\");\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 52\n      }\n    }));\n  }\n\n}\n\nconst ModalDiagnosis = props => {\n  const {\n    className\n  } = props;\n  const [modal, setModal] = useState(true);\n\n  const toggle = () => {\n    setModal(!modal);\n    props.handlerSuper();\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Modal, {\n    isOpen: modal,\n    toggle: toggle,\n    className: className,\n    size: 'xl',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(ModalBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Example, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 6\n    }\n  }), /*#__PURE__*/React.createElement(Spinner, {\n    color: \"info\",\n    style: {\n      position: 'absolute',\n      margin: 'auto'\n    },\n    size: 'xl',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 6\n    }\n  }))));\n};\n\nconst Example = props => {\n  const [activeTab, setActiveTab] = useState('1');\n\n  const toggle = tab => {\n    if (activeTab !== tab) setActiveTab(tab);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Nav, {\n    tabs: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(NavItem, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(NavLink, {\n    className: classnames({\n      active: activeTab === '1'\n    }),\n    onClick: () => {\n      toggle('1');\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 11\n    }\n  }, \"Tab1\")), /*#__PURE__*/React.createElement(NavItem, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(NavLink, {\n    className: classnames({\n      active: activeTab === '2'\n    }),\n    onClick: () => {\n      toggle('2');\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 11\n    }\n  }, \"More Tabs\"))), /*#__PURE__*/React.createElement(TabContent, {\n    activeTab: activeTab,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(TabPane, {\n    tabId: \"1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    sm: \"12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 15\n    }\n  }, \"Tab 1 Contents\")))), /*#__PURE__*/React.createElement(TabPane, {\n    tabId: \"2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    sm: \"6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    body: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(CardTitle, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 17\n    }\n  }, \"Special Title Treatment\"), /*#__PURE__*/React.createElement(CardText, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 17\n    }\n  }, \"With supporting text below as a natural lead-in to additional content.\"), /*#__PURE__*/React.createElement(Button, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 17\n    }\n  }, \"Go somewhere\"))), /*#__PURE__*/React.createElement(Col, {\n    sm: \"6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    body: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(CardTitle, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 17\n    }\n  }, \"Special Title Treatment\"), /*#__PURE__*/React.createElement(CardText, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 17\n    }\n  }, \"With supporting text below as a natural lead-in to additional content.\"), /*#__PURE__*/React.createElement(Button, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 17\n    }\n  }, \"Go somewhere\")))))));\n};\n\nexport default Diagnosis;","map":{"version":3,"sources":["/home/paula/Documents/Practica/git/user_interface/src/components/InferenceUI/Diagnosis.js"],"names":["Modal","ModalHeader","ModalBody","ModalFooter","Spinner","TabContent","TabPane","Nav","NavItem","NavLink","Card","Button","CardTitle","CardText","Row","Col","React","useState","classnames","Diagnosis","Component","constructor","props","state","render","currentState","showModalDiagnosis","handler","ModalDiagnosis","className","modal","setModal","toggle","handlerSuper","position","margin","Example","activeTab","setActiveTab","tab","active"],"mappings":"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","sourcesContent":["import { Modal, ModalHeader, ModalBody, ModalFooter, Spinner,TabContent, TabPane, Nav, NavItem, NavLink, Card, Button, CardTitle, CardText, Row, Col } from 'reactstrap';\nimport React, {useState} from 'react';\nimport classnames from 'classnames';\nclass Diagnosis extends React.Component{\n\tconstructor(props){\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t}\n\t\t\n\t}\n\n\trender(){\n\t\treturn(\n\t\t\t<div>\n\t\t\t\t{this.props.currentState.showModalDiagnosis && <ModalDiagnosis handlerSuper={()=>{this.props.handler(\"OnConnection\")}}/>}\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nconst ModalDiagnosis= (props) => {\n  const {\n    className\n  } = props;\n\n  const [modal, setModal] = useState(true);\n\n  const toggle = () => {\n  \tsetModal(!modal);\n\t\tprops.handlerSuper();\n\t}\n  return (\n    <div>\n      <Modal isOpen={modal} toggle={toggle} className={className} size={'xl'}>\n        <ModalBody>\n\t\t\t\t\t<Example/>\n\t\t\t\t\t<Spinner color=\"info\" style={{ position: 'absolute',margin: 'auto' }} size={'xl'}/>\n        </ModalBody>\n      </Modal>\n    </div>\n  );\n}\nconst Example = (props) => {\n  const [activeTab, setActiveTab] = useState('1');\n\n  const toggle = tab => {\n    if(activeTab !== tab) setActiveTab(tab);\n  }\n\n  return (\n    <div>\n      <Nav tabs>\n        <NavItem>\n          <NavLink\n            className={classnames({ active: activeTab === '1' })}\n            onClick={() => { toggle('1'); }}\n          >\n            Tab1\n          </NavLink>\n        </NavItem>\n        <NavItem>\n          <NavLink\n            className={classnames({ active: activeTab === '2' })}\n            onClick={() => { toggle('2'); }}\n          >\n            More Tabs\n          </NavLink>\n        </NavItem>\n      </Nav>\n      <TabContent activeTab={activeTab}>\n        <TabPane tabId=\"1\">\n          <Row>\n            <Col sm=\"12\">\n              <h4>Tab 1 Contents</h4>\n            </Col>\n          </Row>\n        </TabPane>\n        <TabPane tabId=\"2\">\n          <Row>\n            <Col sm=\"6\">\n              <Card body>\n                <CardTitle>Special Title Treatment</CardTitle>\n                <CardText>With supporting text below as a natural lead-in to additional content.</CardText>\n                <Button>Go somewhere</Button>\n              </Card>\n            </Col>\n            <Col sm=\"6\">\n              <Card body>\n                <CardTitle>Special Title Treatment</CardTitle>\n                <CardText>With supporting text below as a natural lead-in to additional content.</CardText>\n                <Button>Go somewhere</Button>\n              </Card>\n            </Col>\n          </Row>\n        </TabPane>\n      </TabContent>\n    </div>\n  );\n}\nexport default Diagnosis;\n"]},"metadata":{},"sourceType":"module"}