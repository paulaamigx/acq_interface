{"ast":null,"code":"var _jsxFileName = \"/home/paula/Documents/Practica/git/user_interface/src/components/InferenceUI/InferenceUI.js\";\nimport './InferenceUI.css';\nimport { Container, Row, Col } from 'reactstrap';\nimport React from 'react'; //import io from 'socket.io-client';\n\nimport WebcamStream from './WebcamStream.js';\nimport Screenshots from './Screenshots.js';\nimport Diagnosis from './Diagnosis.js';\nimport ElementsMain from './ElementsMain.js';\nimport \"react-responsive-carousel/lib/styles/carousel.min.css\";\n\nclass InferenceUI extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      current: \"SelectingSource\",\n      textMainBtn: \"Empezar\",\n      showStartBtn: false,\n      showCaptureBtn: false,\n      showVideoSelect: false,\n      showProgressBar: false,\n      enabledModalScreenshots: false,\n      //if requested\n      showModalDiagnosis: false,\n      disableBtnCapture: false,\n      streaming: false,\n      almostStreaming: false,\n      timeStartPressed: 0,\n      triggerCaptureScreenshot: false,\n      showAlert: false,\n      progress: 0,\n      fullScreen: false\n    };\n    this.childScreenshots = React.createRef();\n    this.childWebcamStream = React.createRef();\n    this.childElementsMain = React.createRef();\n    this.countdownFrom = 1;\n    this.alertTimeout = null;\n    this.videoThumbnail = null;\n  }\n\n  async handler(nextState) {\n    await this.setState({\n      current: nextState\n    });\n    console.log(\"estado en switch: \" + this.state.current);\n    await this.setState(manageStates(this.state.current));\n  }\n\n  captureScreenshot() {\n    this.childScreenshots.current.captureScreenshot();\n  }\n\n  mirrorPreview() {\n    this.childWebcamStream.current.mirror();\n  }\n\n  changeProgress(val) {\n    this.setState({\n      progress: val\n    });\n  }\n\n  openNMAlert() {\n    this.childElementsMain.current.setState({\n      openNMAlert: true\n    }); //      this.childElementsMain.current.stopFunction(); \n  }\n\n  async startRecording() {\n    this.childWebcamStream.current.startRecording();\n  }\n\n  async stopRecording() {\n    await this.childWebcamStream.current.stopRecording();\n  }\n\n  getVideoThumbnail(img) {\n    this.videoThumbnail = img;\n  }\n\n  getScreenshots() {\n    return this.childScreenshots.current.getScreenshots();\n  }\n\n  downloadHandler(media) {\n    if (media.localeCompare(\"video\") === 0) {\n      this.childWebcamStream.current.downloadVideo();\n    } else if (media.localeCompare(\"screenshots\") === 0) {\n      console.log(\"in\");\n      this.childScreenshots.current.download();\n    }\n  }\n\n  changeStateProp(string) {\n    this.setState(string);\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(Container, {\n      fluid: true,\n      id: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 6\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 15\n      }\n    })), /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 8\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      sm: \"12\",\n      md: {\n        size: 6,\n        offset: 3\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(WebcamStream, {\n      id: \"WebcamStream\",\n      currentState: this.state,\n      handler: nextState => this.handler(nextState),\n      changeStateProp: string => this.changeStateProp(string),\n      countdownFrom: this.countdownFrom,\n      ref: this.childWebcamStream,\n      getVideoThumbnail: img => this.getVideoThumbnail(img),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(ElementsMain, {\n      currentState: this.state,\n      handler: nextState => this.handler(nextState),\n      startRecording: () => this.startRecording(),\n      stopRecording: () => this.stopRecording(),\n      captureScreenshot: () => this.captureScreenshot(),\n      fromServer: (signal, val) => fromServer(this, signal, val),\n      ref: this.childElementsMain,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(Screenshots, {\n      currentState: this.state,\n      handler: nextState => this.handler(nextState),\n      ref: this.childScreenshots,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(Diagnosis, {\n      currentState: this.state,\n      handler: nextState => this.handler(nextState),\n      thumbnail: this.videoThumbnail,\n      getScreenshots: () => this.getScreenshots(),\n      downloadHandler: media => this.downloadHandler(media),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 15\n      }\n    }))));\n  }\n\n}\n\nfunction fromServer(el, signal, val) {\n  //element, signal and valuue if necessary\n  if (signal.localeCompare(\"blur\") === 0) {\n    if (el.state.showAlert) {\n      clearTimeout(el.alertTimeout);\n      el.alertTimeout = setTimeout(function () {\n        el.setState({\n          showAlert: false\n        });\n      }, 5000);\n    } else {\n      el.setState({\n        showAlert: true\n      });\n      el.alertTimeout = setTimeout(function () {\n        el.setState({\n          showAlert: false\n        });\n      }, 5000);\n    }\n  } else if (signal.localeCompare(\"progress\") === 0) {\n    el.changeProgress(val);\n  } else if (signal.localeCompare(\"NM\") === 0) {\n    el.openNMAlert();\n  }\n}\n\nfunction manageStates(state) {\n  var flags = {};\n\n  switch (state) {\n    case 'OnConnection':\n      flags = {\n        textMainBtn: \"Empezar\",\n        showStartBtn: true,\n        showCaptureBtn: true,\n        showProgressBar: false,\n        enabledModalScreenshots: true,\n        //if requested\n        showModalDiagnosis: false,\n        disableBtnCapture: false,\n        streaming: false,\n        almostStreaming: false\n      };\n      break;\n\n    case 'Countdown':\n      flags = {\n        textMainBtn: \"Finalizar\",\n        showStartBtn: true,\n        showCaptureBtn: true,\n        showProgressBar: true,\n        enabledModalScreenshots: false,\n        showModalDiagnosis: false,\n        disableBtnCapture: true,\n        streaming: false,\n        almostStreaming: true,\n        timeStartPressed: Date.now()\n      };\n      break;\n\n    case 'Streaming':\n      flags = {\n        textMainBtn: \"Finalizar\",\n        showStartBtn: true,\n        showCaptureBtn: true,\n        showProgressBar: true,\n        enabledModalScreenshots: false,\n        showModalDiagnosis: false,\n        disableBtnCapture: false,\n        streaming: true,\n        almostStreaming: false\n      };\n      break;\n\n    case 'StopStream':\n      flags = {\n        textMainBtn: \"Empezar\",\n        showStartBtn: true,\n        showCaptureBtn: true,\n        showProgressBar: true,\n        enabledModalScreenshots: true,\n        showModalDiagnosis: true,\n        disableBtnCapture: false,\n        streaming: false,\n        almostStreaming: false\n      };\n      break;\n\n    default:\n      console.log('State not defined');\n  }\n\n  return flags;\n}\n\nexport default InferenceUI;","map":{"version":3,"sources":["/home/paula/Documents/Practica/git/user_interface/src/components/InferenceUI/InferenceUI.js"],"names":["Container","Row","Col","React","WebcamStream","Screenshots","Diagnosis","ElementsMain","InferenceUI","Component","constructor","props","state","current","textMainBtn","showStartBtn","showCaptureBtn","showVideoSelect","showProgressBar","enabledModalScreenshots","showModalDiagnosis","disableBtnCapture","streaming","almostStreaming","timeStartPressed","triggerCaptureScreenshot","showAlert","progress","fullScreen","childScreenshots","createRef","childWebcamStream","childElementsMain","countdownFrom","alertTimeout","videoThumbnail","handler","nextState","setState","console","log","manageStates","captureScreenshot","mirrorPreview","mirror","changeProgress","val","openNMAlert","startRecording","stopRecording","getVideoThumbnail","img","getScreenshots","downloadHandler","media","localeCompare","downloadVideo","download","changeStateProp","string","render","size","offset","signal","fromServer","el","clearTimeout","setTimeout","flags","Date","now"],"mappings":"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","sourcesContent":["import './InferenceUI.css';\nimport {Container, Row,Col\n    } from 'reactstrap';\nimport React from 'react';\n//import io from 'socket.io-client';\nimport WebcamStream from './WebcamStream.js'\nimport Screenshots from './Screenshots.js'\nimport Diagnosis from './Diagnosis.js'\nimport ElementsMain from './ElementsMain.js'\n\nimport \"react-responsive-carousel/lib/styles/carousel.min.css\";\n\n\n\nclass InferenceUI extends React.Component {\n    constructor(props){\n        super(props);\n        this.state = {\n      \t\tcurrent: \"SelectingSource\",\n\n\t\t\t\t\ttextMainBtn: \"Empezar\",\n\t\t\t\t\tshowStartBtn: false,\n\t\t\t\t\tshowCaptureBtn: false,\n\t\t\t\t\tshowVideoSelect: false,\n\t\t\t\t\tshowProgressBar: false,\n\t\t\t\t\tenabledModalScreenshots: false, //if requested\n\t\t\t\t\tshowModalDiagnosis: false,\n\t\t\t\t\tdisableBtnCapture: false,\n\n          streaming: false,\n          almostStreaming: false,          \n\n\t\t\t\t\ttimeStartPressed: 0,\n\n\t\t\t\t\ttriggerCaptureScreenshot: false,\n          showAlert: false,\n\n          progress: 0,\n\n          fullScreen: false\n        }\n\t\t\tthis.childScreenshots = React.createRef();\n\t\t\tthis.childWebcamStream = React.createRef();\n\t\t\tthis.childElementsMain = React.createRef();\n\t\t\tthis.countdownFrom = 1;\n      this.alertTimeout = null;\n      this.videoThumbnail = null;\n    }\n\n\t\tasync handler(nextState){\n\t\t\tawait this.setState({current: nextState});\n\t\t  console.log(\"estado en switch: \" + this.state.current);\n      await this.setState(manageStates(this.state.current));\n\t\t}\n\n\t\tcaptureScreenshot(){\n\t\t\tthis.childScreenshots.current.captureScreenshot();\n\t\t}\n    mirrorPreview(){\n      this.childWebcamStream.current.mirror();\n    }\n    changeProgress(val){\n      this.setState({progress: val});\n    }\n    openNMAlert(){\n      this.childElementsMain.current.setState({openNMAlert: true}); \n//      this.childElementsMain.current.stopFunction(); \n    }\n    async startRecording(){\n      this.childWebcamStream.current.startRecording(); \n    }\n    async stopRecording(){\n      await this.childWebcamStream.current.stopRecording(); \n    }\n    getVideoThumbnail(img){\n      this.videoThumbnail = img;\n    }\n    getScreenshots(){\n      return this.childScreenshots.current.getScreenshots();\n    }\n    downloadHandler(media){\n      if(media.localeCompare(\"video\")===0){\n        this.childWebcamStream.current.downloadVideo();\n    }\n    else if(media.localeCompare(\"screenshots\")===0){\n      console.log(\"in\");\n      this.childScreenshots.current.download();\n    }\n  }\n  changeStateProp(string){\n    this.setState(string);\n  }\n  render() {\n      return (\n\t\t\t\t\t<Container fluid id=\"container\">\n            <Row>\n              <Col></Col>\n            </Row>\n\t\t\t\t\t  <Row>\t\n              <Col sm=\"12\" md={{ size: 6, offset: 3}}>\n              <WebcamStream id=\"WebcamStream\" \n                            currentState={this.state} \n                            handler={(nextState)=>this.handler(nextState)} \n                            changeStateProp={(string)=>this.changeStateProp(string)}\n                            countdownFrom={this.countdownFrom} \n                            ref={this.childWebcamStream}\n                            getVideoThumbnail={(img)=>this.getVideoThumbnail(img)}/>\n              <ElementsMain currentState={this.state} \n                            handler={(nextState)=>this.handler(nextState)} \n                            startRecording={()=>this.startRecording()} \n                            stopRecording={()=>this.stopRecording()} \n                            captureScreenshot={()=>this.captureScreenshot()} \n                            fromServer={(signal,val)=>fromServer(this,signal,val)} \n                            ref={this.childElementsMain}/> \n              <Screenshots  currentState={this.state} \n                            handler={(nextState)=>this.handler(nextState)} \n                            ref={this.childScreenshots} />\n              <Diagnosis    currentState={this.state} \n                            handler={(nextState)=>this.handler(nextState)}\n                            thumbnail={this.videoThumbnail}\n                            getScreenshots={()=>this.getScreenshots()}\n                            downloadHandler={(media)=>this.downloadHandler(media)}/>\n              </Col>\n            </Row>\n\t\t\t\t  </Container>\n\t\n        );\n        \n    }\n}\nfunction fromServer(el,signal,val){ //element, signal and valuue if necessary\n  if(signal.localeCompare(\"blur\") === 0){\n    if(el.state.showAlert){\n      clearTimeout(el.alertTimeout);\n      el.alertTimeout = setTimeout(function(){el.setState({showAlert: false})},5000)\n    }\n    else{\n      el.setState({showAlert: true});\n      el.alertTimeout = setTimeout(function(){el.setState({showAlert: false})},5000)\n    }\n  }\n  else if(signal.localeCompare(\"progress\") === 0){\n    el.changeProgress(val);\n  }\n  \n  else if(signal.localeCompare(\"NM\") === 0){\n    el.openNMAlert();\n  }\n\n}\nfunction manageStates(state){\n\tvar flags = {};\n\tswitch(state){\n\t\tcase 'OnConnection':\n\t\t  flags={\n\t\t\t\t  textMainBtn: \"Empezar\",\n\t\t\t\t  showStartBtn: true,\n\t\t\t\t  showCaptureBtn: true,\n\t\t\t\t  showProgressBar: false,\n\t\t\t\t  enabledModalScreenshots: true, //if requested\n\t\t\t\t  showModalDiagnosis: false,\n\t\t\t\t  disableBtnCapture: false,\n  \n\t\t\t\t  streaming: false,\n\t\t\t\t  almostStreaming: false,          \n\t\t\t  };\n\t\t\t  break;\n\t\t  case 'Countdown':\n\t\t\t  flags={\n\t\t\t\t  textMainBtn: \"Finalizar\",\n\t\t\t\t  showStartBtn: true,\n\t\t\t\t  showCaptureBtn: true,\n\t\t\t\t  showProgressBar: true,\n\t\t\t\t  enabledModalScreenshots: false, \n\t\t\t\t  showModalDiagnosis: false,\n\t\t\t\t  disableBtnCapture: true,\n  \n\t\t\t\t  streaming: false,\n\t\t\t\t  almostStreaming: true,          \n\t\t\t\t  \n\t\t\t\t  timeStartPressed: Date.now()\n\t\t\t\t  };\n\t\t\t\t  break;\n\t\t  case 'Streaming':\n\t\t\t  flags={\n\t\t\t\t  textMainBtn: \"Finalizar\",\n\t\t\t\t  showStartBtn: true,\n\t\t\t\t  showCaptureBtn: true,\n\t\t\t\t  showProgressBar: true,\n\t\t\t\t  enabledModalScreenshots: false,\n\t\t\t\t  showModalDiagnosis: false,\n\t\t\t\t  disableBtnCapture: false,\n  \n\t\t\t\t  streaming: true,\n\t\t\t\t  almostStreaming: false,          \n  \n\t\t\t  };\n\t\t\t  break;\n\t\t  case 'StopStream':\n\t\t\t  flags={\n\t\t\t\t  textMainBtn: \"Empezar\",\n\t\t\t\t  showStartBtn: true,\n\t\t\t\t  showCaptureBtn: true,\n\t\t\t\t  showProgressBar: true,\n\t\t\t\t  enabledModalScreenshots: true, \n\t\t\t\t  showModalDiagnosis: true,\n\t\t\t\t  disableBtnCapture: false,\n  \n\t\t\t\t  streaming: false,\n\t\t\t\t  almostStreaming: false,          \n\t\t\t  };\n\t\t\t  break;\n\t\t  default:\n\t\t\t  console.log('State not defined');\n  \n\t  }\n\treturn flags;\n  }\nexport default InferenceUI;\n"]},"metadata":{},"sourceType":"module"}