{"ast":null,"code":"import { jsPDF } from \"jspdf\";\nimport foto from './aa.jpg';\nexport function changeDiagnosisImgOnModal(dir, indx, setIndx) {\n  if (dir.localeCompare('right') === 0) {\n    if (indx < 4) {\n      indx++;\n      document.getElementById('d_modalImg').src = document.getElementById('diagnosisImg' + indx).src;\n      document.getElementById('d_modalImgTag').innerHTML = document.getElementById('d_ImgTag' + indx).innerHTML;\n      setIndx(indx);\n    }\n  } else if (dir.localeCompare('left') === 0) {\n    if (indx > 1) {\n      indx--;\n      document.getElementById('d_modalImg').src = document.getElementById('diagnosisImg' + indx).src;\n      document.getElementById('d_modalImgTag').innerHTML = document.getElementById('d_ImgTag' + indx).innerHTML;\n      setIndx(indx);\n    }\n  }\n}\nexport async function makeReport(setPdfSrc) {\n  var pdf = new jsPDF('p', 'pt', 'a4');\n  let reportDiv = document.getElementById('ReportDiv');\n  const quality = 1; // Higher the better but larger file\n\n  html2canvas(reportDiv, {\n    scale: quality\n  }).then(canvas => {\n    const pdf = new jsPDF('p', 'mm', 'a4');\n    pdf.addImage(canvas.toDataURL('image/png'), 'PNG', 0, 0, 211, 298);\n    pdf.save(filename);\n    setPdfSrc(pdf.output('datauristring'));\n  });\n  /*\n  pdf.html(reportDiv,{\n           callback: function(pdf){\n            console.log('done'); \n            setPdfSrc(pdf.output('datauristring'));\n           }\n           });\n           */\n}\n\nfunction sleep(ms) {\n  return new Promise(resolve => setTimeout(resolve, ms));\n}\n\nexport default {\n  changeDiagnosisImgOnModal,\n  makeReport\n};","map":{"version":3,"sources":["/home/paula/Documentos/Simbiotica/git/user_interface/src/components/InferenceUI/SidePanel/Diagnosis/functions.js"],"names":["jsPDF","foto","changeDiagnosisImgOnModal","dir","indx","setIndx","localeCompare","document","getElementById","src","innerHTML","makeReport","setPdfSrc","pdf","reportDiv","quality","html2canvas","scale","then","canvas","addImage","toDataURL","save","filename","output","sleep","ms","Promise","resolve","setTimeout"],"mappings":"AAAA,SAASA,KAAT,QAAsB,OAAtB;AACA,OAAOC,IAAP,MAAiB,UAAjB;AAEA,OAAO,SAASC,yBAAT,CAAmCC,GAAnC,EAAuCC,IAAvC,EAA6CC,OAA7C,EAAqD;AAC1D,MAAGF,GAAG,CAACG,aAAJ,CAAkB,OAAlB,MAA6B,CAAhC,EAAkC;AAChC,QAAGF,IAAI,GAAG,CAAV,EAAY;AACVA,MAAAA,IAAI;AACJG,MAAAA,QAAQ,CAACC,cAAT,CAAwB,YAAxB,EAAsCC,GAAtC,GAA4CF,QAAQ,CAACC,cAAT,CAAwB,iBAAeJ,IAAvC,EAA6CK,GAAzF;AACAF,MAAAA,QAAQ,CAACC,cAAT,CAAwB,eAAxB,EAAyCE,SAAzC,GAAqDH,QAAQ,CAACC,cAAT,CAAwB,aAAWJ,IAAnC,EAAyCM,SAA9F;AACAL,MAAAA,OAAO,CAACD,IAAD,CAAP;AACD;AACF,GAPD,MAQK,IAAGD,GAAG,CAACG,aAAJ,CAAkB,MAAlB,MAA4B,CAA/B,EAAiC;AACpC,QAAGF,IAAI,GAAG,CAAV,EAAY;AACVA,MAAAA,IAAI;AACJG,MAAAA,QAAQ,CAACC,cAAT,CAAwB,YAAxB,EAAsCC,GAAtC,GAA4CF,QAAQ,CAACC,cAAT,CAAwB,iBAAeJ,IAAvC,EAA6CK,GAAzF;AACAF,MAAAA,QAAQ,CAACC,cAAT,CAAwB,eAAxB,EAAyCE,SAAzC,GAAqDH,QAAQ,CAACC,cAAT,CAAwB,aAAWJ,IAAnC,EAAyCM,SAA9F;AACAL,MAAAA,OAAO,CAACD,IAAD,CAAP;AACD;AACF;AACF;AAED,OAAO,eAAeO,UAAf,CAA0BC,SAA1B,EAAoC;AACzC,MAAIC,GAAG,GAAG,IAAIb,KAAJ,CAAU,GAAV,EAAe,IAAf,EAAqB,IAArB,CAAV;AACA,MAAIc,SAAS,GAAGP,QAAQ,CAACC,cAAT,CAAwB,WAAxB,CAAhB;AACE,QAAMO,OAAO,GAAG,CAAhB,CAHuC,CAGrB;;AAClBC,EAAAA,WAAW,CAACF,SAAD,EACP;AAAEG,IAAAA,KAAK,EAAEF;AAAT,GADO,CAAX,CAEEG,IAFF,CAEOC,MAAM,IAAI;AACb,UAAMN,GAAG,GAAG,IAAIb,KAAJ,CAAU,GAAV,EAAe,IAAf,EAAqB,IAArB,CAAZ;AACAa,IAAAA,GAAG,CAACO,QAAJ,CAAaD,MAAM,CAACE,SAAP,CAAiB,WAAjB,CAAb,EAA4C,KAA5C,EAAmD,CAAnD,EAAsD,CAAtD,EAAyD,GAAzD,EAA8D,GAA9D;AACAR,IAAAA,GAAG,CAACS,IAAJ,CAASC,QAAT;AACAX,IAAAA,SAAS,CAACC,GAAG,CAACW,MAAJ,CAAW,eAAX,CAAD,CAAT;AACH,GAPD;AAQF;;;;;;;;AAQD;;AAED,SAASC,KAAT,CAAeC,EAAf,EAAmB;AACjB,SAAO,IAAIC,OAAJ,CAAYC,OAAO,IAAIC,UAAU,CAACD,OAAD,EAAUF,EAAV,CAAjC,CAAP;AACC;;AAEH,eAAe;AAACxB,EAAAA,yBAAD;AAA4BS,EAAAA;AAA5B,CAAf","sourcesContent":["import { jsPDF } from \"jspdf\";\nimport foto from './aa.jpg'\n\nexport function changeDiagnosisImgOnModal(dir,indx, setIndx){\n  if(dir.localeCompare('right')===0){\n    if(indx < 4){\n      indx++;\n      document.getElementById('d_modalImg').src = document.getElementById('diagnosisImg'+indx).src;\n      document.getElementById('d_modalImgTag').innerHTML = document.getElementById('d_ImgTag'+indx).innerHTML;\n      setIndx(indx);\n    }\n  }\n  else if(dir.localeCompare('left')===0){\n    if(indx > 1){\n      indx--;\n      document.getElementById('d_modalImg').src = document.getElementById('diagnosisImg'+indx).src;\n      document.getElementById('d_modalImgTag').innerHTML = document.getElementById('d_ImgTag'+indx).innerHTML;\n      setIndx(indx);\n    }\n  }\n}\n\nexport async function makeReport(setPdfSrc){\n  var pdf = new jsPDF('p', 'pt', 'a4');\n  let reportDiv = document.getElementById('ReportDiv');\n    const quality = 1 // Higher the better but larger file\n    html2canvas(reportDiv,\n        { scale: quality }\n    ).then(canvas => {\n        const pdf = new jsPDF('p', 'mm', 'a4');\n        pdf.addImage(canvas.toDataURL('image/png'), 'PNG', 0, 0, 211, 298);\n        pdf.save(filename);\n        setPdfSrc(pdf.output('datauristring'));\n    });\n  /*\n  pdf.html(reportDiv,{\n           callback: function(pdf){\n            console.log('done'); \n            setPdfSrc(pdf.output('datauristring'));\n           }\n           });\n           */\n}\n\nfunction sleep(ms) {\n  return new Promise(resolve => setTimeout(resolve, ms));\n  }\n\nexport default {changeDiagnosisImgOnModal, makeReport};\n"]},"metadata":{},"sourceType":"module"}