{"ast":null,"code":"var _jsxFileName = \"/home/paula/Documents/Practica/git/user_interface/src/components/InferenceUI/InferenceUI.js\";\nimport './InferenceUI.css';\nimport { Container, Button, Modal, ModalHeader, ModalBody, ModalFooter, Progress, Spinner } from 'reactstrap';\nimport React, { useState } from 'react'; //import io from 'socket.io-client';\n\nimport WebcamStream from './WebcamStream.js';\nimport \"react-responsive-carousel/lib/styles/carousel.min.css\";\nvar almostStreaming = false;\nvar timeStartPressed;\nvar streaming;\nvar countdownFrom = 1;\nvar CSHiddenBtn;\n\nfunction countdown(seconds, canvas, el) {\n  let context = canvas;\n  let countdown = seconds - Math.trunc((-timeStartPressed + Date.now()) / 1000);\n  context.beginPath();\n  context.arc(320, 240, 130, 0, 2 * Math.PI);\n  context.fillStyle = \"rgba(255, 255, 255, 0.8)\";\n  ;\n  context.fill();\n  context.beginPath();\n  context.fillStyle = \"black\";\n\n  if (countdown >= 10) {\n    context.fillText(countdown.toString(10), 200, 315);\n  } else if (countdown >= 1) {\n    context.fillText(countdown.toString(10), 270, 308, 100);\n  }\n\n  context.fill();\n\n  if (countdown < 1) {\n    almostStreaming = false;\n    streaming = true;\n    el.props.handler(\"Streaming\");\n  }\n}\n\nvar slidesData = [];\n\nvar Carousel = require('react-responsive-carousel').Carousel;\n\nconst ModalDiagnosis = props => {\n  const {\n    className\n  } = props;\n  const [modal, setModal] = useState(true);\n\n  const toggle = () => {\n    setModal(!modal);\n    props.handlerSuper();\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Modal, {\n    isOpen: modal,\n    toggle: toggle,\n    className: className,\n    size: 'xl',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(ModalHeader, {\n    toggle: toggle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }\n  }, \"Modal title\"), /*#__PURE__*/React.createElement(ModalBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 6\n    }\n  }), /*#__PURE__*/React.createElement(Spinner, {\n    color: \"info\",\n    style: {\n      position: 'absolute',\n      margin: 'auto'\n    },\n    size: 'xl',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 6\n    }\n  }))));\n};\n\nconst ModalScreenshots = props => {\n  const {\n    className\n  } = props;\n  const [modal, setModal] = useState(true);\n\n  const toggle = () => {\n    setModal(!modal);\n    props.handler();\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Modal, {\n    isOpen: modal,\n    toggle: toggle,\n    className: className,\n    size: 'xl',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(ModalHeader, {\n    toggle: toggle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 9\n    }\n  }, \"Modal title\"), /*#__PURE__*/React.createElement(ModalBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Carousel, {\n    showArrows: true,\n    selectedItem: 0,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 9\n    }\n  }, slidesData.map(slide => /*#__PURE__*/React.createElement(\"div\", {\n    key: 0,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    className: \"slick-slide-image\",\n    src: slide.src,\n    alt: \"Error\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 15\n    }\n  }))))), /*#__PURE__*/React.createElement(ModalFooter, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 9\n    }\n  })));\n};\n\nclass Screenshots extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      lastScreenshotID: 0,\n      galleryImages: [],\n      modalOn: false\n    };\n\n    this.captureScreenshot = async () => {\n      var canvas = document.querySelector(\"#canvasPreview\");\n      var imgAsDataURL = canvas.toDataURL(\"image/jpeg\", 1);\n      let newSlidesData = [{\n        src: imgAsDataURL\n      }];\n      slidesData = slidesData.concat(newSlidesData);\n      await this.setState({\n        lastScreenshotID: this.state.lastScreenshotID + 1\n      });\n      let btnsCarousel = document.getElementsByClassName(\"control-arrow\");\n      document.querySelector(\".carousel-slider\").style.display = 'none';\n      let thumbs = document.getElementsByClassName(\"thumb\");\n\n      thumbs[thumbs.length - 1].onclick = async () => {\n        if (this.props.currentState.showModalScreenshots) {\n          this.props.handler(\"Screenshots\");\n          this.state.modalOn = true;\n        }\n      };\n\n      try {\n        btnsCarousel[2].style.backgroundColor = 'black';\n        btnsCarousel[3].style.backgroundColor = 'black';\n      } catch {}\n    };\n  }\n\n  componentDidMount() {\n    CSHiddenBtn = document.querySelector(\"#BtnCaptureScreenshot\");\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 4\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      color: \"primary\",\n      id: \"BtnCaptureScreenshot\",\n      onClick: () => this.captureScreenshot(),\n      style: {\n        display: 'none'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 5\n      }\n    }, \"Capture Screenshot\"), this.state.modalOn && /*#__PURE__*/React.createElement(ModalScreenshots, {\n      handler: () => {\n        this.setState({\n          modalOn: false\n        });\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 28\n      }\n    }), /*#__PURE__*/React.createElement(Carousel, {\n      showArrows: true,\n      selectedItem: this.state.lastScreenshotID,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 9\n      }\n    }, slidesData.map(slide => /*#__PURE__*/React.createElement(\"div\", {\n      key: this.state.lastScreenshotID,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      className: \"slick-slide-image\",\n      src: slide.src,\n      alt: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 15\n      }\n    })))));\n  }\n\n}\n\nfunction startStopFunction(btn) {\n  if (btn.props.currentState.textMainBtn.localeCompare(\"Start\") === 0) {\n    btn.props.handler(\"Countdown\");\n    startFunction(btn);\n    return;\n  }\n\n  btn.props.handler(\"StopStream\"); //stopFunction();\n}\n\nfunction startFunction(btn) {\n  almostStreaming = true;\n  timeStartPressed = Date.now();\n}\n\nclass Diagnosis extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 4\n      }\n    }, this.props.currentState.showModalDiagnosis && /*#__PURE__*/React.createElement(ModalDiagnosis, {\n      handlerSuper: () => {\n        this.props.handler(\"closeDiagnosis\");\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 52\n      }\n    }));\n  }\n\n}\n\nclass ComponentsMain extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 4\n      }\n    }, this.props.currentState.showStartBtn && /*#__PURE__*/React.createElement(Button, {\n      color: \"primary\",\n      onClick: () => startStopFunction(this),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 45\n      }\n    }, this.props.currentState.textMainBtn), this.props.currentState.showCaptureBtn && /*#__PURE__*/React.createElement(Button, {\n      color: \"primary\",\n      disabled: this.props.currentState.disableBtnCapture,\n      onClick: () => CSHiddenBtn.click(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 47\n      }\n    }, \"Capture Screenshot\"), this.props.currentState.showProgressBar && /*#__PURE__*/React.createElement(Progress, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 48\n      }\n    }));\n  }\n\n}\n\nclass InferenceUI extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      current: \"SelectingSource\",\n      textMainBtn: \"Start\",\n      showStartBtn: false,\n      showCaptureBtn: false,\n      showVideoSelect: false,\n      showProgressBar: false,\n      showModalScreenshots: false,\n      //if requested\n      showModalDiagnosis: false,\n      disableBtnCapture: false\n    };\n  }\n\n  async handler(nextState) {\n    await this.setState({\n      current: nextState\n    });\n    this.showWeas();\n  }\n\n  showWeas() {\n    console.log(\"estado en switch: \");\n    console.log(this.state.current);\n\n    switch (this.state.current) {\n      case 'OnConnection':\n        this.setState({\n          textMainBtn: \"Start\",\n          showStartBtn: true,\n          showCaptureBtn: true,\n          showProgressBar: false,\n          showModalScreenshots: true,\n          showModalDiagnosis: false,\n          disableBtnCapture: false\n        });\n        break;\n\n      case 'Countdown':\n        this.setState({\n          textMainBtn: \"Stop\",\n          disableBtnCapture: true,\n          showModalScreenshots: false\n        });\n        break;\n\n      case 'Streaming':\n        this.setState({\n          textMainBtn: \"Stop\",\n          showProgressBar: true,\n          showModalScreenshots: false,\n          showModalScreenshots: false,\n          disableBtnCapture: false\n        });\n        break;\n\n      case 'StopStream':\n        this.setState({\n          textMainBtn: \"Start\",\n          showModalDiagnosis: true,\n          showModalScreenshots: true\n        });\n        break;\n\n      case 'Screenshots':\n        this.setState({\n          showModalScreenshots: true\n        });\n        break;\n\n      case 'closeDiagnosis':\n        this.setState({\n          showModalDiagnosis: false\n        });\n        break;\n\n      default:\n        console.log('State not defined');\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(Container, {\n      id: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 274,\n        columnNumber: 6\n      }\n    }, /*#__PURE__*/React.createElement(WebcamStream, {\n      id: \"WebcamStream\",\n      handler: nextState => this.handler(nextState),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 275,\n        columnNumber: 7\n      }\n    }), /*#__PURE__*/React.createElement(ComponentsMain, {\n      currentState: this.state,\n      handler: nextState => this.handler(nextState),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 276,\n        columnNumber: 7\n      }\n    }), /*#__PURE__*/React.createElement(Screenshots, {\n      currentState: this.state,\n      handler: nextState => this.handler(nextState),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 277,\n        columnNumber: 7\n      }\n    }), /*#__PURE__*/React.createElement(Diagnosis, {\n      currentState: this.state,\n      handler: nextState => this.handler(nextState),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 278,\n        columnNumber: 7\n      }\n    }));\n  }\n\n}\n\nexport default InferenceUI;","map":{"version":3,"sources":["/home/paula/Documents/Practica/git/user_interface/src/components/InferenceUI/InferenceUI.js"],"names":["Container","Button","Modal","ModalHeader","ModalBody","ModalFooter","Progress","Spinner","React","useState","WebcamStream","almostStreaming","timeStartPressed","streaming","countdownFrom","CSHiddenBtn","countdown","seconds","canvas","el","context","Math","trunc","Date","now","beginPath","arc","PI","fillStyle","fill","fillText","toString","props","handler","slidesData","Carousel","require","ModalDiagnosis","className","modal","setModal","toggle","handlerSuper","position","margin","ModalScreenshots","map","slide","src","Screenshots","Component","state","lastScreenshotID","galleryImages","modalOn","captureScreenshot","document","querySelector","imgAsDataURL","toDataURL","newSlidesData","concat","setState","btnsCarousel","getElementsByClassName","style","display","thumbs","length","onclick","currentState","showModalScreenshots","backgroundColor","componentDidMount","render","startStopFunction","btn","textMainBtn","localeCompare","startFunction","Diagnosis","constructor","showModalDiagnosis","ComponentsMain","showStartBtn","showCaptureBtn","disableBtnCapture","click","showProgressBar","InferenceUI","current","showVideoSelect","nextState","showWeas","console","log"],"mappings":";AAAA,OAAO,mBAAP;AACA,SAAQA,SAAR,EAAmBC,MAAnB,EAA2BC,KAA3B,EAAkCC,WAAlC,EAA+CC,SAA/C,EAA0DC,WAA1D,EAAuEC,QAAvE,EAAiFC,OAAjF,QACW,YADX;AAEA,OAAOC,KAAP,IAAeC,QAAf,QAA6B,OAA7B,C,CACA;;AACA,OAAOC,YAAP,MAAyB,mBAAzB;AACA,OAAO,uDAAP;AAEA,IAAIC,eAAe,GAAG,KAAtB;AACA,IAAIC,gBAAJ;AACA,IAAIC,SAAJ;AACA,IAAIC,aAAa,GAAG,CAApB;AACA,IAAIC,WAAJ;;AAGA,SAASC,SAAT,CAAmBC,OAAnB,EAA2BC,MAA3B,EAAkCC,EAAlC,EAAqC;AAEpC,MAAIC,OAAO,GAAGF,MAAd;AACA,MAAIF,SAAS,GAAGC,OAAO,GAAGI,IAAI,CAACC,KAAL,CAAW,CAAC,CAACV,gBAAD,GAAoBW,IAAI,CAACC,GAAL,EAArB,IAAiC,IAA5C,CAA1B;AACCJ,EAAAA,OAAO,CAACK,SAAR;AACAL,EAAAA,OAAO,CAACM,GAAR,CAAY,GAAZ,EAAiB,GAAjB,EAAsB,GAAtB,EAA2B,CAA3B,EAA8B,IAAIL,IAAI,CAACM,EAAvC;AACAP,EAAAA,OAAO,CAACQ,SAAR,GAAoB,0BAApB;AAA+C;AAC/CR,EAAAA,OAAO,CAACS,IAAR;AACAT,EAAAA,OAAO,CAACK,SAAR;AACAL,EAAAA,OAAO,CAACQ,SAAR,GAAoB,OAApB;;AACA,MAAGZ,SAAS,IAAI,EAAhB,EAAmB;AACjBI,IAAAA,OAAO,CAACU,QAAR,CAAiBd,SAAS,CAACe,QAAV,CAAmB,EAAnB,CAAjB,EAAwC,GAAxC,EAA4C,GAA5C;AACD,GAFD,MAEM,IAAGf,SAAS,IAAI,CAAhB,EAAkB;AACtBI,IAAAA,OAAO,CAACU,QAAR,CAAiBd,SAAS,CAACe,QAAV,CAAmB,EAAnB,CAAjB,EAAwC,GAAxC,EAA4C,GAA5C,EAAgD,GAAhD;AACD;;AAEDX,EAAAA,OAAO,CAACS,IAAR;;AACA,MAAIb,SAAS,GAAI,CAAjB,EAAmB;AACjBL,IAAAA,eAAe,GAAG,KAAlB;AACAE,IAAAA,SAAS,GAAG,IAAZ;AACFM,IAAAA,EAAE,CAACa,KAAH,CAASC,OAAT,CAAiB,WAAjB;AACC;AAEF;;AACD,IAAIC,UAAU,GAAG,EAAjB;;AACA,IAAIC,QAAQ,GAAGC,OAAO,CAAC,2BAAD,CAAP,CAAqCD,QAApD;;AACA,MAAME,cAAc,GAAGL,KAAD,IAAW;AAC/B,QAAM;AACJM,IAAAA;AADI,MAEFN,KAFJ;AAIA,QAAM,CAACO,KAAD,EAAQC,QAAR,IAAoB/B,QAAQ,CAAC,IAAD,CAAlC;;AAEA,QAAMgC,MAAM,GAAG,MAAM;AACpBD,IAAAA,QAAQ,CAAC,CAACD,KAAF,CAAR;AACDP,IAAAA,KAAK,CAACU,YAAN;AACA,GAHA;;AAIA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,KAAD;AAAO,IAAA,MAAM,EAAEH,KAAf;AAAsB,IAAA,MAAM,EAAEE,MAA9B;AAAsC,IAAA,SAAS,EAAEH,SAAjD;AAA4D,IAAA,IAAI,EAAE,IAAlE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,WAAD;AAAa,IAAA,MAAM,EAAEG,MAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADF,eAEE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADG,eAEH,oBAAC,OAAD;AAAS,IAAA,KAAK,EAAC,MAAf;AAAsB,IAAA,KAAK,EAAE;AAAEE,MAAAA,QAAQ,EAAE,UAAZ;AAAuBC,MAAAA,MAAM,EAAE;AAA/B,KAA7B;AAAsE,IAAA,IAAI,EAAE,IAA5E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFG,CAFF,CADF,CADF;AAWD,CAtBD;;AAwBA,MAAMC,gBAAgB,GAAIb,KAAD,IAAW;AAClC,QAAM;AACJM,IAAAA;AADI,MAGFN,KAHJ;AAIA,QAAM,CAACO,KAAD,EAAQC,QAAR,IAAoB/B,QAAQ,CAAC,IAAD,CAAlC;;AAEA,QAAMgC,MAAM,GAAG,MAAM;AACnBD,IAAAA,QAAQ,CAAC,CAACD,KAAF,CAAR;AACFP,IAAAA,KAAK,CAACC,OAAN;AACC,GAHD;;AAKA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,KAAD;AAAO,IAAA,MAAM,EAAEM,KAAf;AAAsB,IAAA,MAAM,EAAEE,MAA9B;AAAsC,IAAA,SAAS,EAAEH,SAAjD;AAA4D,IAAA,IAAI,EAAE,IAAlE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,WAAD;AAAa,IAAA,MAAM,EAAEG,MAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADF,eAEE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACA,oBAAC,QAAD;AAAU,IAAA,UAAU,EAAE,IAAtB;AAA4B,IAAA,YAAY,EAAE,CAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGP,UAAU,CAACY,GAAX,CAAgBC,KAAD,iBACd;AAAK,IAAA,GAAG,EAAE,CAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,mBAAf;AAAmC,IAAA,GAAG,EAAEA,KAAK,CAACC,GAA9C;AAAmD,IAAA,GAAG,EAAC,OAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADD,CADH,CADA,CAFF,eAWE,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAXF,CADF,CADF;AAkBD,CA9BD;;AA+BA,MAAMC,WAAN,SAA0BzC,KAAK,CAAC0C,SAAhC,CAAyC;AAAA;AAAA;AAAA,SACxCC,KADwC,GAChC;AACPC,MAAAA,gBAAgB,EAAE,CADX;AAELC,MAAAA,aAAa,EAAE,EAFV;AAGPC,MAAAA,OAAO,EAAE;AAHF,KADgC;;AAAA,SAOxCC,iBAPwC,GAOpB,YAAY;AAC/B,UAAIrC,MAAM,GAAGsC,QAAQ,CAACC,aAAT,CAAuB,gBAAvB,CAAb;AACA,UAAIC,YAAY,GAAGxC,MAAM,CAACyC,SAAP,CAAiB,YAAjB,EAA8B,CAA9B,CAAnB;AACE,UAAIC,aAAa,GAAG,CAAC;AAACZ,QAAAA,GAAG,EAAEU;AAAN,OAAD,CAApB;AACFxB,MAAAA,UAAU,GAAGA,UAAU,CAAC2B,MAAX,CAAkBD,aAAlB,CAAb;AACA,YAAM,KAAKE,QAAL,CAAc;AAACV,QAAAA,gBAAgB,EAAE,KAAKD,KAAL,CAAWC,gBAAX,GAA4B;AAA/C,OAAd,CAAN;AACA,UAAIW,YAAY,GAAGP,QAAQ,CAACQ,sBAAT,CAAgC,eAAhC,CAAnB;AACAR,MAAAA,QAAQ,CAACC,aAAT,CAAuB,kBAAvB,EAA2CQ,KAA3C,CAAiDC,OAAjD,GAA2D,MAA3D;AACC,UAAIC,MAAM,GAAGX,QAAQ,CAACQ,sBAAT,CAAgC,OAAhC,CAAb;;AACDG,MAAAA,MAAM,CAACA,MAAM,CAACC,MAAP,GAAc,CAAf,CAAN,CAAwBC,OAAxB,GAAkC,YAAW;AAC5C,YAAG,KAAKrC,KAAL,CAAWsC,YAAX,CAAwBC,oBAA3B,EAAgD;AAC/C,eAAKvC,KAAL,CAAWC,OAAX,CAAmB,aAAnB;AACA,eAAKkB,KAAL,CAAWG,OAAX,GAAqB,IAArB;AACA;AACD,OALD;;AAMA,UAAG;AACFS,QAAAA,YAAY,CAAC,CAAD,CAAZ,CAAgBE,KAAhB,CAAsBO,eAAtB,GAAuC,OAAvC;AACAT,QAAAA,YAAY,CAAC,CAAD,CAAZ,CAAgBE,KAAhB,CAAsBO,eAAtB,GAAuC,OAAvC;AACA,OAHD,CAIA,MAAK,CAEJ;AAEF,KA9BwC;AAAA;;AA+BxCC,EAAAA,iBAAiB,GAAG;AACjB1D,IAAAA,WAAW,GAAGyC,QAAQ,CAACC,aAAT,CAAuB,uBAAvB,CAAd;AACF;;AACDiB,EAAAA,MAAM,GAAE;AACL,wBACD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACC;AAAQ,MAAA,KAAK,EAAC,SAAd;AAAwB,MAAA,EAAE,EAAC,sBAA3B;AAAkD,MAAA,OAAO,EAAE,MAAM,KAAKnB,iBAAL,EAAjE;AAA2F,MAAA,KAAK,EAAE;AAACW,QAAAA,OAAO,EAAE;AAAV,OAAlG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BADD,EAEE,KAAKf,KAAL,CAAWG,OAAX,iBAAsB,oBAAC,gBAAD;AAAkB,MAAA,OAAO,EAAE,MAAI;AAAC,aAAKQ,QAAL,CAAc;AAACR,UAAAA,OAAO,EAAC;AAAT,SAAd;AAA+B,OAA/D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFxB,eAGK,oBAAC,QAAD;AAAU,MAAA,UAAU,EAAE,IAAtB;AAA4B,MAAA,YAAY,EAAE,KAAKH,KAAL,CAAWC,gBAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGlB,UAAU,CAACY,GAAX,CAAgBC,KAAD,iBACd;AAAK,MAAA,GAAG,EAAE,KAAKI,KAAL,CAAWC,gBAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,SAAS,EAAC,mBAAf;AAAmC,MAAA,GAAG,EAAEL,KAAK,CAACC,GAA9C;AAAmD,MAAA,GAAG,EAAC,EAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADD,CADH,CAHL,CADC;AAaF;;AAhDuC;;AAmDzC,SAAS2B,iBAAT,CAA2BC,GAA3B,EAA+B;AAC7B,MAAIA,GAAG,CAAC5C,KAAJ,CAAUsC,YAAV,CAAuBO,WAAvB,CAAmCC,aAAnC,CAAiD,OAAjD,MAA8D,CAAlE,EAAoE;AACpEF,IAAAA,GAAG,CAAC5C,KAAJ,CAAUC,OAAV,CAAkB,WAAlB;AACE8C,IAAAA,aAAa,CAACH,GAAD,CAAb;AACA;AACD;;AACFA,EAAAA,GAAG,CAAC5C,KAAJ,CAAUC,OAAV,CAAkB,YAAlB,EAN8B,CAO7B;AACD;;AACD,SAAS8C,aAAT,CAAuBH,GAAvB,EAA2B;AAE1BjE,EAAAA,eAAe,GAAG,IAAlB;AACAC,EAAAA,gBAAgB,GAAGW,IAAI,CAACC,GAAL,EAAnB;AAEA;;AACD,MAAMwD,SAAN,SAAwBxE,KAAK,CAAC0C,SAA9B,CAAuC;AACtC+B,EAAAA,WAAW,CAACjD,KAAD,EAAO;AACjB,UAAMA,KAAN;AACA,SAAKmB,KAAL,GAAa,EAAb;AAGA;;AAEDuB,EAAAA,MAAM,GAAE;AACP,wBACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,KAAK1C,KAAL,CAAWsC,YAAX,CAAwBY,kBAAxB,iBAA8C,oBAAC,cAAD;AAAgB,MAAA,YAAY,EAAE,MAAI;AAAC,aAAKlD,KAAL,CAAWC,OAAX,CAAmB,gBAAnB;AAAqC,OAAxE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADhD,CADD;AAKA;;AAdqC;;AAgBvC,MAAMkD,cAAN,SAA6B3E,KAAK,CAAC0C,SAAnC,CAA4C;AAC3C+B,EAAAA,WAAW,CAACjD,KAAD,EAAO;AACjB,UAAMA,KAAN;AACA,SAAKmB,KAAL,GAAa,EAAb;AAEA;;AAGDuB,EAAAA,MAAM,GAAE;AACP,wBACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC,KAAK1C,KAAL,CAAWsC,YAAX,CAAwBc,YAAxB,iBAAwC,oBAAC,MAAD;AAAQ,MAAA,KAAK,EAAC,SAAd;AAAwB,MAAA,OAAO,EAAE,MAAMT,iBAAiB,CAAC,IAAD,CAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAiE,KAAK3C,KAAL,CAAWsC,YAAX,CAAwBO,WAAzF,CADzC,EAEC,KAAK7C,KAAL,CAAWsC,YAAX,CAAwBe,cAAxB,iBAA0C,oBAAC,MAAD;AAAQ,MAAA,KAAK,EAAC,SAAd;AAAwB,MAAA,QAAQ,EAAE,KAAKrD,KAAL,CAAWsC,YAAX,CAAwBgB,iBAA1D;AAA8E,MAAA,OAAO,EAAE,MAAMvE,WAAW,CAACwE,KAAZ,EAA7F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAmH,oBAAnH,CAF3C,EAGC,KAAKvD,KAAL,CAAWsC,YAAX,CAAwBkB,eAAxB,iBAA2C,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAH5C,CADD;AAOA;;AAhB0C;;AAkB5C,MAAMC,WAAN,SAA0BjF,KAAK,CAAC0C,SAAhC,CAA0C;AACtC+B,EAAAA,WAAW,CAACjD,KAAD,EAAO;AACd,UAAMA,KAAN;AACA,SAAKmB,KAAL,GAAa;AACbuC,MAAAA,OAAO,EAAE,iBADI;AAEhBb,MAAAA,WAAW,EAAE,OAFG;AAGhBO,MAAAA,YAAY,EAAE,KAHE;AAIhBC,MAAAA,cAAc,EAAE,KAJA;AAKhBM,MAAAA,eAAe,EAAE,KALD;AAMhBH,MAAAA,eAAe,EAAE,KAND;AAOhBjB,MAAAA,oBAAoB,EAAE,KAPN;AAOa;AAC7BW,MAAAA,kBAAkB,EAAE,KARJ;AAShBI,MAAAA,iBAAiB,EAAE;AATH,KAAb;AAWH;;AAEH,QAAMrD,OAAN,CAAc2D,SAAd,EAAwB;AACvB,UAAM,KAAK9B,QAAL,CAAc;AAAC4B,MAAAA,OAAO,EAAEE;AAAV,KAAd,CAAN;AACA,SAAKC,QAAL;AACA;;AAEAA,EAAAA,QAAQ,GAAE;AACXC,IAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ;AACAD,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAK5C,KAAL,CAAWuC,OAAvB;;AAEG,YAAO,KAAKvC,KAAL,CAAWuC,OAAlB;AACE,WAAK,cAAL;AACE,aAAK5B,QAAL,CAAc;AACZe,UAAAA,WAAW,EAAE,OADD;AAEjBO,UAAAA,YAAY,EAAE,IAFG;AAGjBC,UAAAA,cAAc,EAAE,IAHC;AAIjBG,UAAAA,eAAe,EAAE,KAJA;AAKjBjB,UAAAA,oBAAoB,EAAE,IALL;AAMjBW,UAAAA,kBAAkB,EAAE,KANH;AAOjBI,UAAAA,iBAAiB,EAAE;AAPF,SAAd;AASJ;;AACD,WAAK,WAAL;AACC,aAAKxB,QAAL,CAAc;AACbe,UAAAA,WAAW,EAAE,MADA;AAEbS,UAAAA,iBAAiB,EAAE,IAFN;AAGbf,UAAAA,oBAAoB,EAAE;AAHT,SAAd;AAKA;;AACD,WAAK,WAAL;AACC,aAAKT,QAAL,CAAc;AACbe,UAAAA,WAAW,EAAE,MADA;AAEbW,UAAAA,eAAe,EAAE,IAFJ;AAGbjB,UAAAA,oBAAoB,EAAE,KAHT;AAIbA,UAAAA,oBAAoB,EAAE,KAJT;AAKbe,UAAAA,iBAAiB,EAAE;AALN,SAAd;AAOA;;AACD,WAAK,YAAL;AACC,aAAKxB,QAAL,CAAc;AACbe,UAAAA,WAAW,EAAE,OADA;AAEbK,UAAAA,kBAAkB,EAAE,IAFP;AAGbX,UAAAA,oBAAoB,EAAE;AAHT,SAAd;AAKA;;AACD,WAAK,aAAL;AACC,aAAKT,QAAL,CAAc;AACbS,UAAAA,oBAAoB,EAAE;AADT,SAAd;AAGA;;AACD,WAAK,gBAAL;AACC,aAAKT,QAAL,CAAc;AACboB,UAAAA,kBAAkB,EAAE;AADP,SAAd;AAGA;;AACD;AACCY,QAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ;AA9CA;AAiDF;;AACCrB,EAAAA,MAAM,GAAG;AACP,wBACD,oBAAC,SAAD;AAAW,MAAA,EAAE,EAAC,WAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACC,oBAAC,YAAD;AAAc,MAAA,EAAE,EAAC,cAAjB;AAAgC,MAAA,OAAO,EAAGkB,SAAD,IAAa,KAAK3D,OAAL,CAAa2D,SAAb,CAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADD,eAEC,oBAAC,cAAD;AAAgB,MAAA,YAAY,EAAE,KAAKzC,KAAnC;AAA0C,MAAA,OAAO,EAAGyC,SAAD,IAAa,KAAK3D,OAAL,CAAa2D,SAAb,CAAhE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFD,eAGC,oBAAC,WAAD;AAAa,MAAA,YAAY,EAAE,KAAKzC,KAAhC;AAAuC,MAAA,OAAO,EAAGyC,SAAD,IAAa,KAAK3D,OAAL,CAAa2D,SAAb,CAA7D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHD,eAIC,oBAAC,SAAD;AAAW,MAAA,YAAY,EAAE,KAAKzC,KAA9B;AAAqC,MAAA,OAAO,EAAGyC,SAAD,IAAa,KAAK3D,OAAL,CAAa2D,SAAb,CAA3D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJD,CADC;AAUD;;AAtFqC;;AAyF1C,eAAeH,WAAf","sourcesContent":["import './InferenceUI.css';\nimport {Container, Button, Modal, ModalHeader, ModalBody, ModalFooter, Progress, Spinner\n    } from 'reactstrap';\nimport React, {useState}from 'react';\n//import io from 'socket.io-client';\nimport WebcamStream from './WebcamStream.js'\nimport \"react-responsive-carousel/lib/styles/carousel.min.css\";\n\nvar almostStreaming = false;\nvar timeStartPressed;\nvar streaming;\nvar countdownFrom = 1;\nvar CSHiddenBtn;\n\n\nfunction countdown(seconds,canvas,el){\n\t\n\tlet context = canvas;\t\n\tlet countdown = seconds - Math.trunc((-timeStartPressed + Date.now())/1000);\n  context.beginPath();\n  context.arc(320, 240, 130, 0, 2 * Math.PI);\n  context.fillStyle = \"rgba(255, 255, 255, 0.8)\";;\n  context.fill();\n  context.beginPath();\n  context.fillStyle = \"black\";\n  if(countdown >= 10){\n    context.fillText(countdown.toString(10),200,315);\n  }else if(countdown >= 1){\n    context.fillText(countdown.toString(10),270,308,100);\n  }\n\n  context.fill();\n  if (countdown <  1){\n    almostStreaming = false;\n    streaming = true;\n\t\tel.props.handler(\"Streaming\");\n  }\n\t\n}\nvar slidesData = [];\nvar Carousel = require('react-responsive-carousel').Carousel;\nconst ModalDiagnosis= (props) => {\n  const {\n    className\n  } = props;\n\n  const [modal, setModal] = useState(true);\n\n  const toggle = () => {\n  \tsetModal(!modal);\n\t\tprops.handlerSuper();\n\t}\n  return (\n    <div>\n      <Modal isOpen={modal} toggle={toggle} className={className} size={'xl'}>\n        <ModalHeader toggle={toggle}>Modal title</ModalHeader>\n        <ModalBody>\n\t\t\t\t\t<h1></h1>\n\t\t\t\t\t<Spinner color=\"info\" style={{ position: 'absolute',margin: 'auto' }} size={'xl'}/>\n        </ModalBody>\n      </Modal>\n    </div>\n  );\n}\n\nconst ModalScreenshots = (props) => {\n  const {\n    className,\n\t\n  } = props;\n  const [modal, setModal] = useState(true);\n\n  const toggle = () => {\n    setModal(!modal); \n\t\tprops.handler();\n  }\n  \n  return (\n    <div>\n      <Modal isOpen={modal} toggle={toggle} className={className} size={'xl'}>\n        <ModalHeader toggle={toggle}>Modal title</ModalHeader>\n        <ModalBody>\n        <Carousel showArrows={true} selectedItem={0} >\n          {slidesData.map((slide) =>\n            <div key={0}>\n              <img className=\"slick-slide-image\" src={slide.src} alt='Error' />\n            </div>\n          )}\n        </Carousel>\n        </ModalBody>\n        <ModalFooter>\n        </ModalFooter>\n      </Modal>\n    </div>\n  );\n}\nclass Screenshots extends React.Component{\n\tstate = {\n\t\tlastScreenshotID: 0,\n    galleryImages: [], \n\t\tmodalOn: false\n\t}\n\n\tcaptureScreenshot = async () => {\n\t\tvar canvas = document.querySelector(\"#canvasPreview\");\n\t\tvar imgAsDataURL = canvas.toDataURL(\"image/jpeg\",1);\n    let newSlidesData = [{src: imgAsDataURL}];\n\t\tslidesData = slidesData.concat(newSlidesData);\n\t\tawait this.setState({lastScreenshotID: this.state.lastScreenshotID+1});\n\t\tlet btnsCarousel = document.getElementsByClassName(\"control-arrow\");\n\t\tdocument.querySelector(\".carousel-slider\").style.display = 'none';\n\t  let thumbs = document.getElementsByClassName(\"thumb\");\n\t\tthumbs[thumbs.length-1].onclick = async() => {\n\t\t\tif(this.props.currentState.showModalScreenshots){\n\t\t\t\tthis.props.handler(\"Screenshots\")\n\t\t\t\tthis.state.modalOn = true;\n\t\t\t}\n\t\t};\t\n\t\ttry{\n\t\t\tbtnsCarousel[2].style.backgroundColor= 'black';\n\t\t\tbtnsCarousel[3].style.backgroundColor= 'black';\n\t\t}\n\t\tcatch{\n\t\t\n\t\t}\n\n}\n\tcomponentDidMount() {\n    CSHiddenBtn = document.querySelector(\"#BtnCaptureScreenshot\");\n\t}\n\trender(){\n    return(\n\t\t\t<div>\n\t\t\t\t<button color=\"primary\" id=\"BtnCaptureScreenshot\" onClick={() => this.captureScreenshot()} style={{display: 'none'}}>Capture Screenshot</button>\n\t\t\t\t{this.state.modalOn && <ModalScreenshots handler={()=>{this.setState({modalOn:false})}}/>}\n        <Carousel showArrows={true} selectedItem={this.state.lastScreenshotID} >\n          {slidesData.map((slide) =>\n            <div key={this.state.lastScreenshotID}>\n              <img className=\"slick-slide-image\" src={slide.src} alt='' />\n            </div>\n          )}\n        </Carousel>\n\t\t\t</div>\n    );\n\t}\n\n}\nfunction startStopFunction(btn){\n  if (btn.props.currentState.textMainBtn.localeCompare(\"Start\") === 0){\n\t\tbtn.props.handler(\"Countdown\");\n    startFunction(btn);\n    return;\n  }\n\tbtn.props.handler(\"StopStream\");\n  //stopFunction();\n}\nfunction startFunction(btn){\n\t\n\talmostStreaming = true;\n\ttimeStartPressed = Date.now();\n\n}\nclass Diagnosis extends React.Component{\n\tconstructor(props){\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t}\n\t\t\n\t}\n\n\trender(){\n\t\treturn(\n\t\t\t<div>\n\t\t\t\t{this.props.currentState.showModalDiagnosis && <ModalDiagnosis handlerSuper={()=>{this.props.handler(\"closeDiagnosis\")}}/>}\n\t\t\t</div>\n\t\t);\n\t}\n}\nclass ComponentsMain extends React.Component{\n\tconstructor(props){\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t}\n\t}\n  \n\n\trender(){\n\t\treturn(\n\t\t\t<div>\n\t\t\t{this.props.currentState.showStartBtn && <Button color=\"primary\" onClick={() => startStopFunction(this)}>{this.props.currentState.textMainBtn}</Button>}\n\t\t\t{this.props.currentState.showCaptureBtn && <Button color=\"primary\" disabled={this.props.currentState.disableBtnCapture}  onClick={() => CSHiddenBtn.click()}>{\"Capture Screenshot\"}</Button>}\n\t\t\t{this.props.currentState.showProgressBar && <Progress/>}\n\t\t\t</div>\n\t\t);\n\t}\n}\nclass InferenceUI extends React.Component {\n    constructor(props){\n        super(props);\n        this.state = {\n      \t\tcurrent: \"SelectingSource\",\n\t\t\t\t\ttextMainBtn: \"Start\",\n\t\t\t\t\tshowStartBtn: false,\n\t\t\t\t\tshowCaptureBtn: false,\n\t\t\t\t\tshowVideoSelect: false,\n\t\t\t\t\tshowProgressBar: false,\n\t\t\t\t\tshowModalScreenshots: false, //if requested\n\t\t\t\t\tshowModalDiagnosis: false,\n\t\t\t\t\tdisableBtnCapture: false,\n        }\n    }\n   \n\t\tasync handler(nextState){\n\t\t\tawait this.setState({current: nextState});\n\t\t\tthis.showWeas();\n\t\t} \n\n  \tshowWeas(){\n\t\tconsole.log(\"estado en switch: \");\n\t\tconsole.log(this.state.current);\n\t\t\t\n    \tswitch(this.state.current){\n      \tcase 'OnConnection':\n        \tthis.setState({\n          \ttextMainBtn: \"Start\",\n\t\t\t\t\t\tshowStartBtn: true,\n\t\t\t\t\t\tshowCaptureBtn: true,\n\t\t\t\t\t\tshowProgressBar: false,\n\t\t\t\t\t\tshowModalScreenshots: true, \n\t\t\t\t\t\tshowModalDiagnosis: false,\n\t\t\t\t\t\tdisableBtnCapture: false\n\t\t\t\t\t});\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'Countdown':\n\t\t\t\t\tthis.setState({\n\t\t\t\t\t\ttextMainBtn: \"Stop\",\n\t\t\t\t\t\tdisableBtnCapture: true,\n\t\t\t\t\t\tshowModalScreenshots: false \n\t\t\t\t\t});\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'Streaming':\n\t\t\t\t\tthis.setState({\n\t\t\t\t\t\ttextMainBtn: \"Stop\",\n\t\t\t\t\t\tshowProgressBar: true,\n\t\t\t\t\t\tshowModalScreenshots: false,\n\t\t\t\t\t\tshowModalScreenshots: false ,\n\t\t\t\t\t\tdisableBtnCapture: false \n\t\t\t\t\t});\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'StopStream':\n\t\t\t\t\tthis.setState({\n\t\t\t\t\t\ttextMainBtn: \"Start\",\n\t\t\t\t\t\tshowModalDiagnosis: true,\n\t\t\t\t\t\tshowModalScreenshots: true \n\t\t\t\t\t});\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'Screenshots':\n\t\t\t\t\tthis.setState({\n\t\t\t\t\t\tshowModalScreenshots: true,\n\t\t\t\t\t});\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'closeDiagnosis':\n\t\t\t\t\tthis.setState({\n\t\t\t\t\t\tshowModalDiagnosis: false\n\t\t\t\t\t});\t\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tconsole.log('State not defined');\n\n\t\t\t}\n\t\t}\n    render() {\n      return (\n\t\t\t\t\t<Container id=\"container\">\n\t\t\t\t\t\t<WebcamStream id=\"WebcamStream\" handler={(nextState)=>this.handler(nextState)}/>\n\t\t\t\t\t\t<ComponentsMain currentState={this.state} handler={(nextState)=>this.handler(nextState)}/> \n\t\t\t\t\t\t<Screenshots currentState={this.state} handler={(nextState)=>this.handler(nextState)}/>\n\t\t\t\t\t\t<Diagnosis currentState={this.state} handler={(nextState)=>this.handler(nextState)}/>\n\t\t\t\t</Container>\n\t\n        );\n        \n    }\n}\n\nexport default InferenceUI;\n"]},"metadata":{},"sourceType":"module"}