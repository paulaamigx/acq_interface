{"ast":null,"code":"var _jsxFileName = \"/home/paula/Documentos/Simbiotica/git/acq_interface/src/components/InferenceUI/SidePanel/SidePanel.js\";\nimport ConfigTab from './Conf/ConfTab.js';\nimport DiagnosisTab from './Diagnosis/DiagnosisTab.js';\nimport ResultsTab from './Results/ResultsTab.js';\nimport SymptomsTab from './Symptoms/SymptomsTab.js';\nimport './SidePanelWrapper.css';\nimport { Button } from 'reactstrap';\nimport React, { useState } from 'react';\nimport { listDevices, setGallery2, galleryPrev, galleryNext, hideSidePanel, showSidePanel, changeTab } from './functions.js';\nimport { getSysDetails } from './getNavDetais.js';\nimport { Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\nimport frame138 from './Diagnosis/MaterialDiagnostico/frame138.png';\nimport frame302 from './Diagnosis/MaterialDiagnostico/frame302.png';\nimport frame1282 from './Diagnosis/MaterialDiagnostico/frame1282.png';\nimport iconShowPanel from './showPanel.png';\nimport \"jspdf/dist/polyfills.es.js\";\n\nclass SidePanel extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      showDiagnosisImg: false,\n      diagnosisImgOnModal: 0,\n      //should be initialized empty. Diagnosis and frames sent by server should be stored here in this format. Max 6 for report\n      diagnosisImgs: [[frame138, 'Diagnostico 1'], [frame302, 'Diagnostico 2'], [frame1282, 'Diagnostico 3'], [frame302, 'Diagnostico 4'], [frame138, 'Diagnostico 5']],\n      //index of first image on left side diagnosis\n      diagnosisIndex: 0\n    };\n    this.pdfSrc = null;\n    this.infoReady = this.infoReady.bind(this);\n  }\n\n  downloadHandler(media) {\n    this.props.downloadHandler(media);\n  }\n\n  listDevices() {\n    listDevices();\n  }\n\n  setGallery2() {\n    setGallery2(this.props);\n  }\n\n  componentDidMount() {\n    listDevices();\n    changeTab(1, this.props.setTabOn, this.props.currentState);\n  }\n\n  saveCanvasDim(w, h) {\n    this.props.saveCanvasDim(w, h);\n  }\n\n  getCanvasDim() {\n    return this.props.getCanvasDim();\n  }\n\n  galleryCtrl(dir, galleryIndxSh, gallerySrc, newPhoto, selectedPhoto) {\n    if (dir.localeCompare('prev') === 0) {\n      galleryPrev(galleryIndxSh, gallerySrc, newPhoto, selectedPhoto);\n    } else if (dir.localeCompare('next') === 0) {\n      galleryNext(galleryIndxSh, gallerySrc, newPhoto, selectedPhoto);\n    }\n  }\n\n  hideSidePanel() {\n    hideSidePanel(this);\n  }\n\n  infoReady() {\n    let checkboxes = document.getElementsByClassName('CB');\n    let formIsFull = true; //check in pairs\n\n    for (let i = 0; i < checkboxes.length; i += 2) {\n      //either in the pair is checked\n      if (!(checkboxes[i].checked || checkboxes[i + 1].checked)) {\n        if (!(checkboxes[i].id.localeCompare('leftEar') === 0 && document.getElementById('no_earSurgery').checked)) {//formIsFull = false;\n        }\n      }\n    }\n\n    if (!formIsFull || document.getElementById('yes_earSurgery').checked && !document.getElementById('whichSurg').value || !document.getElementById('birthDateInput').value || document.getElementById('rutInput').value.length !== 9) {\n      document.getElementById('incompleteFormWarning').style.display = 'block';\n    }\n\n    if (formIsFull) {\n      let data = new Array(26);\n      let date = new Date();\n      let month = date.getMonth() + 1;\n      data[0] = date.getFullYear() + '-' + month + '-' + date.getDate();\n      data[1] = document.getElementById('caseNumber').innerHTML;\n      data[2] = '';\n      data[3] = document.getElementById('rutInput').value;\n      data[4] = document.getElementById('birthDateInput').value;\n      data[5] = document.getElementById('sexoF').checked ? 'femenino' : document.getElementById('sexoM').checked ? 'masculino' : 'none';\n      console.log(data);\n      this.props.setTabOn(2);\n      listDevices();\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 4\n      }\n    }, !this.props.currentState.hideSidePanel && /*#__PURE__*/React.createElement(\"div\", {\n      id: \"sidePanel_Wrapper\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 8\n      }\n    }, /*#__PURE__*/React.createElement(Tabs, {\n      tabOn: this.props.currentState.tabOn,\n      currentState: this.props.currentState,\n      setTabOn: this.props.setTabOn,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(TabsBody, {\n      downloadHandler: media => this.downloadHandler(media),\n      currentState: this.props.currentState,\n      gallerySrc: this.props.gallerySrc,\n      setGalleryIndxShowing: this.props.setGalleryIndxShowing,\n      setSelectedGalleryPhoto: this.props.setSelectedGalleryPhoto,\n      selectedGalleryPhoto: this.props.currentState.selectedGalleryPhoto,\n      superElement: this,\n      showDiagnosisImg: this.state.showDiagnosisImg,\n      setShowDiagnosisImg: this.setShowDiagnosisImg,\n      pdfSrc: this.pdfSrc,\n      setPdfSrc: pdf => this.setPdfSrc(pdf),\n      diagnosisImgOnModal: this.state.diagnosisImgOnModal,\n      setDiagnosisImgOnModal: value => this.setDiagnosisImgOnModal(value),\n      diagnosisImgs: this.state.diagnosisImgs,\n      diagnosisIndex: this.state.diagnosisIndex,\n      setDiagnosisIndex: this.setDiagnosisIndex,\n      reportReady: this.reportReady,\n      infoReady: this.infoReady,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(ModalError, {\n      className: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 7\n      }\n    })), this.props.currentState.hideSidePanel && /*#__PURE__*/React.createElement(\"div\", {\n      id: \"showSidePanel\",\n      onClick: () => {\n        showSidePanel(this);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      id: \"iconShowPanel\",\n      src: iconShowPanel,\n      alt: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 13\n      }\n    })));\n  }\n\n}\n\nfunction sleep(ms) {\n  return new Promise(resolve => setTimeout(resolve, ms));\n}\n\nfunction TabsBody(props) {\n  if (props.currentState.tabOn === 1) {\n    return /*#__PURE__*/React.createElement(SymptomsTab, {\n      infoReady: props.infoReady,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 7\n      }\n    });\n  } else if (props.currentState.tabOn === 2) {\n    return /*#__PURE__*/React.createElement(ConfigTab, {\n      superElement: props.superElement,\n      className: \"tabBody\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 4\n      }\n    });\n  } else if (props.currentState.tabOn === 3) {\n    return /*#__PURE__*/React.createElement(ResultsTab, {\n      gallerySrc: props.gallerySrc,\n      galleryIndxSh: props.currentState.GalleryIndexShowing,\n      setGalleryIndxShowing: props.setGalleryIndxShowing,\n      setSelectedGalleryPhoto: props.setSelectedGalleryPhoto,\n      selectedPhoto: props.currentState.selectedGalleryPhoto,\n      downloadHandler: props.downloadHandler,\n      selectedGalleryPhoto: props.selectedGalleryPhoto,\n      currentStateName: props.currentState.stateName,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 7\n      }\n    });\n  } else if (props.currentState.tabOn === 4) {\n    return /*#__PURE__*/React.createElement(DiagnosisTab, {\n      superElement: props.superElement,\n      showDiagnosisImg: props.showDiagnosisImg,\n      setShowDiagnosisImg: props.setShowDiagnosisImg,\n      setPdfSrc: props.setPdfSrc,\n      diagnosisImgOnModal: props.diagnosisImgOnModal,\n      setDiagnosisImgOnModal: props.setDiagnosisImgOnModal,\n      diagnosisImgs: props.diagnosisImgs,\n      diagnosisIndex: props.diagnosisIndex,\n      setDiagnosisIndex: props.setDiagnosisIndex,\n      reportReady: props.reportReady,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 7\n      }\n    });\n  } else {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 7\n      }\n    }, \"Error\"));\n  }\n}\n\nfunction Tabs(props) {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    id: \"tabs\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    id: \"symptomsTab\",\n    className: \"tab\",\n    onClick: () => changeTab(1, props.setTabOn, props.currentState),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 7\n    }\n  }, \"S\\xEDntomas\"), /*#__PURE__*/React.createElement(\"div\", {\n    id: \"confTab\",\n    className: \"tab\",\n    onClick: () => changeTab(2, props.setTabOn, props.currentState),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 7\n    }\n  }, \"Configuraciones\"), /*#__PURE__*/React.createElement(\"div\", {\n    id: \"resultsTab\",\n    className: \"tab\",\n    onClick: () => changeTab(3, props.setTabOn, props.currentState),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 7\n    }\n  }, \"Resultados de  Examinaci\\xF3n\"), /*#__PURE__*/React.createElement(\"div\", {\n    id: \"diagnosisTab\",\n    className: \"tab\",\n    onClick: () => changeTab(4, props.setTabOn, props.currentState),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 7\n    }\n  }, \"Diagn\\xF3stico\"));\n}\n\nconst ModalError = props => {\n  const {\n    className\n  } = props;\n  const [modal, setModal] = useState(false);\n\n  const toggle = () => setModal(!modal);\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    id: \"modalBtn\",\n    className: \"button\",\n    onClick: toggle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 235,\n      columnNumber: 7\n    }\n  }, \"Error\"), /*#__PURE__*/React.createElement(Modal, {\n    isOpen: modal,\n    toggle: toggle,\n    className: className,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 236,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(ModalHeader, {\n    toggle: toggle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 237,\n      columnNumber: 9\n    }\n  }, \"Reporte de errores\"), /*#__PURE__*/React.createElement(ModalBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 238,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 239,\n      columnNumber: 6\n    }\n  }, \"\\xBFQu\\xE9 pas\\xF3?\"), /*#__PURE__*/React.createElement(\"textarea\", {\n    id: \"ErrorBox\",\n    cols: \"40\",\n    rows: \"3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 240,\n      columnNumber: 10\n    }\n  })), /*#__PURE__*/React.createElement(ModalFooter, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 242,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    color: \"primary\",\n    onClick: getSysDetails,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 243,\n      columnNumber: 11\n    }\n  }, \"Descargar\"), /*#__PURE__*/React.createElement(Button, {\n    color: \"secondary\",\n    onClick: toggle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 244,\n      columnNumber: 11\n    }\n  }, \"Cerrar\"))));\n};\n\nexport default SidePanel;","map":{"version":3,"sources":["/home/paula/Documentos/Simbiotica/git/acq_interface/src/components/InferenceUI/SidePanel/SidePanel.js"],"names":["ConfigTab","DiagnosisTab","ResultsTab","SymptomsTab","Button","React","useState","listDevices","setGallery2","galleryPrev","galleryNext","hideSidePanel","showSidePanel","changeTab","getSysDetails","Modal","ModalHeader","ModalBody","ModalFooter","frame138","frame302","frame1282","iconShowPanel","SidePanel","Component","constructor","props","state","showDiagnosisImg","diagnosisImgOnModal","diagnosisImgs","diagnosisIndex","pdfSrc","infoReady","bind","downloadHandler","media","componentDidMount","setTabOn","currentState","saveCanvasDim","w","h","getCanvasDim","galleryCtrl","dir","galleryIndxSh","gallerySrc","newPhoto","selectedPhoto","localeCompare","checkboxes","document","getElementsByClassName","formIsFull","i","length","checked","id","getElementById","value","style","display","data","Array","date","Date","month","getMonth","getFullYear","getDate","innerHTML","console","log","render","tabOn","setGalleryIndxShowing","setSelectedGalleryPhoto","selectedGalleryPhoto","setShowDiagnosisImg","pdf","setPdfSrc","setDiagnosisImgOnModal","setDiagnosisIndex","reportReady","sleep","ms","Promise","resolve","setTimeout","TabsBody","superElement","GalleryIndexShowing","stateName","Tabs","ModalError","className","modal","setModal","toggle"],"mappings":"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","sourcesContent":["import ConfigTab from './Conf/ConfTab.js'\nimport DiagnosisTab from './Diagnosis/DiagnosisTab.js'\nimport ResultsTab from './Results/ResultsTab.js'\nimport SymptomsTab from './Symptoms/SymptomsTab.js'\n\nimport './SidePanelWrapper.css'\nimport { Button } from 'reactstrap';\nimport React, {useState} from 'react';\nimport {listDevices, setGallery2, galleryPrev, galleryNext, hideSidePanel, showSidePanel, changeTab} from './functions.js'\nimport {getSysDetails} from './getNavDetais.js'\nimport { Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\n\nimport frame138 from './Diagnosis/MaterialDiagnostico/frame138.png'\nimport frame302 from './Diagnosis/MaterialDiagnostico/frame302.png'\nimport frame1282 from './Diagnosis/MaterialDiagnostico/frame1282.png'\nimport iconShowPanel from './showPanel.png'\nimport \"jspdf/dist/polyfills.es.js\";\n\nclass SidePanel extends React.Component{\n\tconstructor(props){\n\t\tsuper(props);\n\t\tthis.state = {\n      showDiagnosisImg: false,\n      diagnosisImgOnModal: 0,\n      //should be initialized empty. Diagnosis and frames sent by server should be stored here in this format. Max 6 for report\n      diagnosisImgs: [[frame138,'Diagnostico 1'],\n                      [frame302,'Diagnostico 2'],\n                      [frame1282,'Diagnostico 3'],\n                      [frame302,'Diagnostico 4'],\n                      [frame138,'Diagnostico 5']],\n      //index of first image on left side diagnosis\n      diagnosisIndex: 0\n\n\t\t}\n    this.pdfSrc=null;\n\n    this.infoReady= this.infoReady.bind(this);\n  }\n\n  \n  downloadHandler(media){\n    this.props.downloadHandler(media);\n  }\n\n  listDevices(){\n    listDevices();\n  }\n  setGallery2(){\n    setGallery2(this.props);\n  }\n  componentDidMount(){\n    listDevices();\n    changeTab(1, this.props.setTabOn, this.props.currentState);\n  }\n  saveCanvasDim(w,h){\n    this.props.saveCanvasDim(w,h);\n  }\n  getCanvasDim(){\n    return this.props.getCanvasDim();\n  }\n  \n  galleryCtrl(dir, galleryIndxSh, gallerySrc, newPhoto, selectedPhoto){\n    if(dir.localeCompare('prev') === 0){\n      galleryPrev(galleryIndxSh, gallerySrc, newPhoto, selectedPhoto);\n    }\n    else if(dir.localeCompare('next') === 0){\n      galleryNext(galleryIndxSh, gallerySrc, newPhoto, selectedPhoto);\n    }\n  }\n  hideSidePanel(){\n    hideSidePanel(this);\n  }\n  infoReady(){\n    let checkboxes = document.getElementsByClassName('CB');\n    let formIsFull = true;\n    //check in pairs\n    for (let i=0; i< checkboxes.length; i+=2){\n      //either in the pair is checked\n      if(!(checkboxes[i].checked || checkboxes[i+1].checked)){\n        if(!(checkboxes[i].id.localeCompare('leftEar') === 0 && document.getElementById('no_earSurgery').checked)){\n          //formIsFull = false;\n        }\n      }\n    }\n    if(!formIsFull || (document.getElementById('yes_earSurgery').checked && !document.getElementById('whichSurg').value|| !document.getElementById('birthDateInput').value) || document.getElementById('rutInput').value.length !== 9){\n      document.getElementById('incompleteFormWarning').style.display = 'block';\n     \n    }\n\t\tif(formIsFull){\n\t\t\t\n\t\t\tlet data = new Array(26);\n\t\t\tlet date = new Date();\n      let month = date.getMonth() +1;\n      data[0] = date.getFullYear() + '-' + month + '-' +date.getDate();\n      data[1] = document.getElementById('caseNumber').innerHTML;\n      data[2] = '';\n      data[3] = document.getElementById('rutInput').value;\n      data[4] = document.getElementById('birthDateInput').value;\n      data[5] = (document.getElementById('sexoF').checked)? 'femenino': (document.getElementById('sexoM').checked)? 'masculino': 'none';\n\t\t\tconsole.log(data);\n      this.props.setTabOn(2);\n      listDevices();\n    }\n  }\n  render(){\n\t\treturn(\n\t\t\t<div>\n        {!this.props.currentState.hideSidePanel && \n\t\t\t    <div id=\"sidePanel_Wrapper\">\n            <Tabs tabOn={this.props.currentState.tabOn}\n                 \tcurrentState={this.props.currentState}\n                  setTabOn={this.props.setTabOn}\n            />\n\t\t\t\t    <TabsBody\n                 \t\tdownloadHandler={(media)=> this.downloadHandler(media)}\n                 \t\tcurrentState={this.props.currentState}\n                    gallerySrc={this.props.gallerySrc}\n                    setGalleryIndxShowing={this.props.setGalleryIndxShowing}\n                    setSelectedGalleryPhoto={this.props.setSelectedGalleryPhoto}\n                    selectedGalleryPhoto = {this.props.currentState.selectedGalleryPhoto}\n\t\t\t\t\t\t\t\t\t\tsuperElement={this}\n                    showDiagnosisImg = {this.state.showDiagnosisImg}\n                    setShowDiagnosisImg = {this.setShowDiagnosisImg}\n                    pdfSrc={this.pdfSrc}\n                    setPdfSrc={(pdf)=>this.setPdfSrc(pdf)}\n                    diagnosisImgOnModal={this.state.diagnosisImgOnModal}\n                    setDiagnosisImgOnModal={(value)=>this.setDiagnosisImgOnModal(value)}\n                    diagnosisImgs={this.state.diagnosisImgs}\n                    diagnosisIndex={this.state.diagnosisIndex}\n                    setDiagnosisIndex={this.setDiagnosisIndex}\n                    reportReady ={this.reportReady}\n                    infoReady={this.infoReady}\n            />\n\t\t\t\t\t\t<ModalError className=''/>\n\n            {/*!this.props.currentState.isVideoLoading  &&  this.props.currentState.renderCanvas &&\n              <div id=\"hideSidePanel\"  onClick={()=>this.hideSidePanel()}>\n                <img id='iconHidePanel' src={iconHidePanel} alt=''/>\n              </div>}\n              */}\n\t\t\t\t\t</div>}\n\n        {this.props.currentState.hideSidePanel && \n          <div id=\"showSidePanel\"  onClick={()=>{showSidePanel(this)}}>\n            <img id='iconShowPanel' src={iconShowPanel} alt=''/>\n          </div>\n        }\n\t\t\t</div>\n\t\t);\n\t}\n}\nfunction sleep(ms) { return new Promise(resolve => setTimeout(resolve, ms));}\nfunction TabsBody(props) {\n  if(props.currentState.tabOn === 1){\n    return(\n      <SymptomsTab  infoReady={props.infoReady}\n                    />\n    );\n  }\n  else if(props.currentState.tabOn === 2){\n    return(\n\t\t\t<ConfigTab superElement={props.superElement} className='tabBody'/>\n    );\n  }\n  else if(props.currentState.tabOn === 3){\n    return(\n      <ResultsTab gallerySrc={props.gallerySrc} \n                  galleryIndxSh={props.currentState.GalleryIndexShowing}\n                  setGalleryIndxShowing={props.setGalleryIndxShowing}\n                  setSelectedGalleryPhoto={props.setSelectedGalleryPhoto}\n                  selectedPhoto = {props.currentState.selectedGalleryPhoto}\n                  downloadHandler = {props.downloadHandler}\n                  selectedGalleryPhoto = {props.selectedGalleryPhoto}\n                  currentStateName= {props.currentState.stateName}\n                  />\n    );\n  }\n  else if(props.currentState.tabOn === 4){\n    return(\n      <DiagnosisTab superElement={props.superElement} \n                    showDiagnosisImg = {props.showDiagnosisImg}\n                    setShowDiagnosisImg = {props.setShowDiagnosisImg}\n                    setPdfSrc = {props.setPdfSrc}\n                    diagnosisImgOnModal={props.diagnosisImgOnModal}\n                    setDiagnosisImgOnModal={props.setDiagnosisImgOnModal}\n                    diagnosisImgs = {props.diagnosisImgs}\n                    diagnosisIndex = {props.diagnosisIndex}\n                    setDiagnosisIndex = {props.setDiagnosisIndex}\n                    reportReady = {props.reportReady}\n      />\n    );\n  }\n  else{\n    return(\n      <div>\n      <p>Error</p>\n      </div>\n    );\n  }\n}\nfunction Tabs(props){\n  return(\n    <div id='tabs'>\n      <div id='symptomsTab' className='tab'\n           onClick={()=>changeTab(1, props.setTabOn, props.currentState)}>\n          Síntomas\n      </div>\n      <div id='confTab' className='tab' \n           onClick={()=>changeTab(2, props.setTabOn, props.currentState)}>\n          Configuraciones\n      </div>\n      <div id='resultsTab' className='tab'\n           onClick={()=>changeTab(3, props.setTabOn, props.currentState)}>\n        Resultados de  Examinación  \n      </div>\n      <div id='diagnosisTab' className='tab'\n           onClick={()=>changeTab(4, props.setTabOn, props.currentState)}>\n        Diagnóstico\n      </div>\n    </div>\n  );\n}\n\nconst ModalError = (props) => {\n  const {\n    className\n  } = props;\n\n  const [modal, setModal] = useState(false);\n\n  const toggle = () => setModal(!modal);\n\n  return (\n    <div>\n      <div id='modalBtn' className='button' onClick={toggle}>Error</div>\n      <Modal isOpen={modal} toggle={toggle} className={className}>\n        <ModalHeader toggle={toggle}>Reporte de errores</ModalHeader>\n        <ModalBody>\n\t\t\t\t\t<p>¿Qué pasó?</p>\n        \t<textarea id='ErrorBox' cols=\"40\" rows=\"3\"></textarea>\n        </ModalBody>\n        <ModalFooter>\n          <Button color=\"primary\" onClick={getSysDetails}>Descargar</Button>\n          <Button color=\"secondary\" onClick={toggle}>Cerrar</Button>\n        </ModalFooter>\n      </Modal>\n    </div>\n  );\n}\nexport default SidePanel;\n"]},"metadata":{},"sourceType":"module"}