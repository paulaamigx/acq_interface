{"ast":null,"code":"export function getSysDetails() {\n  //var nVer = navigator.appVersion;\n  var nAgt = navigator.userAgent;\n  var browserName = navigator.appName;\n  var fullVersion = '' + parseFloat(navigator.appVersion);\n  var majorVersion = parseInt(navigator.appVersion, 10);\n  var nameOffset, verOffset, ix; // In Opera, the true version is after \"Opera\" or after \"Version\"\n\n  if ((verOffset = nAgt.indexOf(\"Opera\")) !== -1) {\n    browserName = \"Opera\";\n    fullVersion = nAgt.substring(verOffset + 6);\n    if ((verOffset = nAgt.indexOf(\"Version\")) !== -1) fullVersion = nAgt.substring(verOffset + 8);\n  } // In MSIE, the true version is after \"MSIE\" in userAgent\n  else if ((verOffset = nAgt.indexOf(\"MSIE\")) !== -1) {\n      browserName = \"Microsoft Internet Explorer\";\n      fullVersion = nAgt.substring(verOffset + 5);\n    } // In Chrome, the true version is after \"Chrome\" \n    else if ((verOffset = nAgt.indexOf(\"Chrome\")) !== -1) {\n        browserName = \"Chrome\";\n        fullVersion = nAgt.substring(verOffset + 7);\n      } // In Safari, the true version is after \"Safari\" or after \"Version\" \n      else if ((verOffset = nAgt.indexOf(\"Safari\")) !== -1) {\n          browserName = \"Safari\";\n          fullVersion = nAgt.substring(verOffset + 7);\n          if ((verOffset = nAgt.indexOf(\"Version\")) !== -1) fullVersion = nAgt.substring(verOffset + 8);\n        } // In Firefox, the true version is after \"Firefox\" \n        else if ((verOffset = nAgt.indexOf(\"Firefox\")) !== -1) {\n            browserName = \"Firefox\";\n            fullVersion = nAgt.substring(verOffset + 8);\n          } // In most other browsers, \"name/version\" is at the end of userAgent \n          else if ((nameOffset = nAgt.lastIndexOf(' ') + 1) < (verOffset = nAgt.lastIndexOf('/'))) {\n              browserName = nAgt.substring(nameOffset, verOffset);\n              fullVersion = nAgt.substring(verOffset + 1);\n\n              if (browserName.toLowerCase() === browserName.toUpperCase()) {\n                browserName = navigator.appName;\n              }\n            } // trim the fullVersion string at semicolon/space if present\n\n\n  if ((ix = fullVersion.indexOf(\";\")) !== -1) fullVersion = fullVersion.substring(0, ix);\n  if ((ix = fullVersion.indexOf(\" \")) !== -1) fullVersion = fullVersion.substring(0, ix);\n  majorVersion = parseInt('' + fullVersion, 10);\n\n  if (isNaN(majorVersion)) {\n    fullVersion = '' + parseFloat(navigator.appVersion);\n    majorVersion = parseInt(navigator.appVersion, 10);\n  }\n\n  var OSName = \"Unknown OS\";\n  if (navigator.appVersion.indexOf(\"Win\") !== -1) OSName = \"Windows\";\n  if (navigator.appVersion.indexOf(\"Mac\") !== -1) OSName = \"MacOS\";\n  if (navigator.appVersion.indexOf(\"X11\") !== -1) OSName = \"UNIX\";\n  if (navigator.appVersion.indexOf(\"Linux\") !== -1) OSName = \"Linux\";\n  let data = '' + 'Browser name  = ' + browserName + '\\n' + 'Full version  = ' + fullVersion + '\\n' + 'Major version = ' + majorVersion + '\\n' + 'navigator.appName = ' + navigator.appName + '\\n' + 'navigator.userAgent = ' + navigator.userAgent + '\\n' + 'Your OS: ' + OSName + '\\n\\n' + '\\n WebRTC constraints:\\n' + JSON.stringify(navigator.mediaDevices.getSupportedConstraints()) + '\\n\\n\\n' + 'Error: ' + document.getElementById('ErrorBox').value;\n  const element = document.createElement(\"a\");\n  const file = new Blob([data], {\n    type: 'text/plain'\n  });\n  element.href = URL.createObjectURL(file);\n  element.download = \"ReporteErrores.txt\";\n  document.body.appendChild(element); // Required for this to work in FireFox\n\n  element.click();\n}\nexport default {\n  getSysDetails\n};","map":{"version":3,"sources":["/home/paula/Documentos/Simbiotica/git/user_interface/src/components/InferenceUI/SidePanel/getNavDetais.js"],"names":["getSysDetails","nAgt","navigator","userAgent","browserName","appName","fullVersion","parseFloat","appVersion","majorVersion","parseInt","nameOffset","verOffset","ix","indexOf","substring","lastIndexOf","toLowerCase","toUpperCase","isNaN","OSName","data","JSON","stringify","mediaDevices","getSupportedConstraints","document","getElementById","value","element","createElement","file","Blob","type","href","URL","createObjectURL","download","body","appendChild","click"],"mappings":"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","sourcesContent":["export function getSysDetails(){\n//var nVer = navigator.appVersion;\nvar nAgt = navigator.userAgent;\nvar browserName  = navigator.appName;\nvar fullVersion  = ''+parseFloat(navigator.appVersion); \nvar majorVersion = parseInt(navigator.appVersion,10);\nvar nameOffset,verOffset,ix;\n\n\n// In Opera, the true version is after \"Opera\" or after \"Version\"\nif ((verOffset=nAgt.indexOf(\"Opera\"))!==-1) {\n browserName = \"Opera\";\n fullVersion = nAgt.substring(verOffset+6);\n if ((verOffset=nAgt.indexOf(\"Version\"))!==-1) \n   fullVersion = nAgt.substring(verOffset+8);\n}\n// In MSIE, the true version is after \"MSIE\" in userAgent\nelse if ((verOffset=nAgt.indexOf(\"MSIE\"))!==-1) {\n browserName = \"Microsoft Internet Explorer\";\n fullVersion = nAgt.substring(verOffset+5);\n}\n// In Chrome, the true version is after \"Chrome\" \nelse if ((verOffset=nAgt.indexOf(\"Chrome\"))!==-1) {\n browserName = \"Chrome\";\n fullVersion = nAgt.substring(verOffset+7);\n}\n// In Safari, the true version is after \"Safari\" or after \"Version\" \nelse if ((verOffset=nAgt.indexOf(\"Safari\"))!==-1) {\n browserName = \"Safari\";\n fullVersion = nAgt.substring(verOffset+7);\n if ((verOffset=nAgt.indexOf(\"Version\"))!==-1) \n   fullVersion = nAgt.substring(verOffset+8);\n}\n// In Firefox, the true version is after \"Firefox\" \nelse if ((verOffset=nAgt.indexOf(\"Firefox\"))!==-1) {\n browserName = \"Firefox\";\n fullVersion = nAgt.substring(verOffset+8);\n}\n// In most other browsers, \"name/version\" is at the end of userAgent \nelse if ( (nameOffset=nAgt.lastIndexOf(' ')+1) < \n          (verOffset=nAgt.lastIndexOf('/')) ) \n{\n browserName = nAgt.substring(nameOffset,verOffset);\n fullVersion = nAgt.substring(verOffset+1);\n if (browserName.toLowerCase()===browserName.toUpperCase()) {\n  browserName = navigator.appName;\n }\n}\n// trim the fullVersion string at semicolon/space if present\nif ((ix=fullVersion.indexOf(\";\"))!==-1)\n   fullVersion=fullVersion.substring(0,ix);\nif ((ix=fullVersion.indexOf(\" \"))!==-1)\n   fullVersion=fullVersion.substring(0,ix);\n\nmajorVersion = parseInt(''+fullVersion,10);\nif (isNaN(majorVersion)) {\n fullVersion  = ''+parseFloat(navigator.appVersion); \n majorVersion = parseInt(navigator.appVersion,10);\n}\n\n\n\nvar OSName=\"Unknown OS\";\nif (navigator.appVersion.indexOf(\"Win\")!==-1) OSName=\"Windows\";\nif (navigator.appVersion.indexOf(\"Mac\")!==-1) OSName=\"MacOS\";\nif (navigator.appVersion.indexOf(\"X11\")!==-1) OSName=\"UNIX\";\nif (navigator.appVersion.indexOf(\"Linux\")!==-1) OSName=\"Linux\";\n\nlet data=''\n +'Browser name  = '+browserName+'\\n'\n +'Full version  = '+fullVersion+'\\n'\n +'Major version = '+majorVersion+'\\n'\n +'navigator.appName = '+navigator.appName+'\\n'\n +'navigator.userAgent = '+navigator.userAgent+'\\n'\n +'Your OS: '+OSName +'\\n\\n' \n +'\\n WebRTC constraints:\\n'+\n JSON.stringify(navigator.mediaDevices.getSupportedConstraints())+'\\n\\n\\n'\n +'Error: '+ document.getElementById('ErrorBox').value;\n\tconst element = document.createElement(\"a\");\n  const file = new Blob([data], {type: 'text/plain'});\n  element.href = URL.createObjectURL(file);\n  element.download = \"ReporteErrores.txt\";\n  document.body.appendChild(element); // Required for this to work in FireFox\n  element.click();\n\n\n}\nexport default {getSysDetails}\n"]},"metadata":{},"sourceType":"module"}