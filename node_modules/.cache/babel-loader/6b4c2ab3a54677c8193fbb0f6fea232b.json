{"ast":null,"code":"var _jsxFileName = \"/home/paula/Documents/Practica/git/user_interface/src/components/InferenceUI/InferenceUI.js\";\nimport './InferenceUI.css';\nimport { Container, Button, Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\nimport React, { useState } from 'react'; //import io from 'socket.io-client';\n\nimport \"react-responsive-carousel/lib/styles/carousel.min.css\";\nvar almostStreaming = false;\nvar timeStartPressed;\nvar streaming;\nvar modalOn = false;\n\nclass WebcamStream extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isVideoLoading: true\n    };\n    this.videoTag = React.createRef();\n    this.canvasPreview = React.createRef();\n    this.selectVideoSrc = React.createRef();\n    this.tick = this.tick.bind(this);\n  }\n\n  componentDidMount() {\n    navigator.mediaDevices.enumerateDevices().then(deviceInfos => {\n      for (let i = 0; i !== deviceInfos.length; ++i) {\n        const deviceInfo = deviceInfos[i];\n        const option = document.createElement('option');\n        option.value = deviceInfo.deviceId;\n\n        if (deviceInfo.kind === 'videoinput') {\n          option.text = deviceInfo.label || 'camera ' + (this.selectVideoSrc.current.length + 1);\n          this.selectVideoSrc.current.appendChild(option);\n        }\n      }\n    }).then(navigator.mediaDevices.getUserMedia({\n      video: {\n        facingMode: \"environment\"\n      }\n    }).then(stream => {\n      this.videoTag.current.srcObject = stream;\n      requestAnimationFrame(this.tick);\n      window.stream = stream;\n    }));\n  }\n\n  tick() {\n    const video = this.videoTag.current;\n    const checkVideoState = setInterval(() => {\n      if (video.readyState === video.HAVE_ENOUGH_DATA) {\n        clearInterval(checkVideoState);\n        this.setState({\n          isVideoLoading: false\n        });\n        const canvasPreviewElement = this.canvasPreview.current;\n        const canvasPreview = canvasPreviewElement.getContext(\"2d\");\n        canvasPreviewElement.height = video.videoHeight;\n        canvasPreviewElement.width = video.videoWidth;\n        canvasPreview.drawImage(video, 0, 0, canvasPreviewElement.width, canvasPreviewElement.height);\n\n        if (almostStreaming) {\n          canvasPreview.font = \"200px Arial\";\n          countdown(5, canvasPreview);\n        }\n\n        requestAnimationFrame(this.tick);\n      }\n    }, 50);\n  }\n\n  render() {\n    const {\n      isVideoLoading\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"video\", {\n      ref: this.videoTag,\n      width: \"400\",\n      height: \"400\",\n      autoPlay: true,\n      style: {\n        display: \"none\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }\n    }), !isVideoLoading && /*#__PURE__*/React.createElement(\"canvas\", {\n      ref: this.canvasPreview,\n      id: \"canvasPreview\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 29\n      }\n    }), isVideoLoading && /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 28\n      }\n    }, \"Please wait while we load the video stream.\"), /*#__PURE__*/React.createElement(\"select\", {\n      ref: this.selectVideoSrc,\n      style: {\n        width: 300\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 5\n      }\n    }));\n  }\n\n}\n\nfunction countdown(seconds, canvas) {\n  let context = canvas;\n  let countdown = seconds - Math.trunc((-timeStartPressed + Date.now()) / 1000);\n  context.beginPath();\n  context.arc(320, 240, 130, 0, 2 * Math.PI);\n  context.fillStyle = \"rgba(255, 255, 255, 0.8)\";\n  ;\n  context.fill();\n  context.beginPath();\n  context.fillStyle = \"black\";\n\n  if (countdown >= 10) {\n    context.fillText(countdown.toString(10), 200, 315);\n  } else if (countdown >= 1) {\n    context.fillText(countdown.toString(10), 270, 308, 100);\n  }\n\n  context.fill();\n\n  if (countdown < 1) {\n    almostStreaming = false;\n    streaming = true;\n  }\n}\n\nvar slidesData = [];\n\nvar Carousel = require('react-responsive-carousel').Carousel;\n\nconst ModalScreenshots = props => {\n  const {\n    buttonLabel,\n    className\n  } = props;\n  const [modal, setModal] = useState(true);\n\n  const toggle = () => {\n    setModal(!modal);\n    console.log(\"ff\");\n    modalOn = false;\n  };\n\n  let aa = document.getElementsByClassName('slick-slide-image');\n\n  for (let i = 0; i < aa.length; i++) {\n    console.log(\"aka\");\n    console.log(aa[i]);\n    console.log(aa[i].parentNode.className);\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Modal, {\n    isOpen: modalOn,\n    toggle: toggle,\n    className: className,\n    size: 'xl',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(ModalHeader, {\n    toggle: toggle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 9\n    }\n  }, \"Modal title\"), /*#__PURE__*/React.createElement(ModalBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Carousel, {\n    showArrows: true,\n    selectedItem: 0,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 9\n    }\n  }, slidesData.map(slide => /*#__PURE__*/React.createElement(\"div\", {\n    key: 0,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    className: \"slick-slide-image\",\n    src: slide.src,\n    alt: \"Error\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 15\n    }\n  }))))), /*#__PURE__*/React.createElement(ModalFooter, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 9\n    }\n  })));\n};\n\nclass Screenshots extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      lastScreenshotID: 0,\n      galleryImages: [],\n      modalOn: false\n    };\n\n    this.captureScreenshot = async () => {\n      var canvas = document.querySelector(\"#canvasPreview\");\n      var imgAsDataURL = canvas.toDataURL(\"image/jpeg\", 1);\n      let newSlidesData = [{\n        src: imgAsDataURL\n      }];\n      slidesData = slidesData.concat(newSlidesData);\n      await this.setState({\n        lastScreenshotID: this.state.lastScreenshotID + 1\n      });\n      let btnsCarousel = document.getElementsByClassName(\"control-arrow\");\n      document.querySelector(\".carousel-slider\").style.display = 'none';\n      let thumbs = document.getElementsByClassName(\"thumb\");\n\n      thumbs[thumbs.length - 1].onclick = async () => {\n        console.log(\"tt\");\n        modalOn = true;\n        await this.setState({\n          modalOn: modalOn\n        });\n      };\n\n      try {\n        btnsCarousel[2].style.backgroundColor = 'black';\n        btnsCarousel[3].style.backgroundColor = 'black';\n      } catch {}\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 4\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      color: \"primary\",\n      id: \"BtnCaptureScreenshot\",\n      display: \"none\",\n      onClick: () => this.captureScreenshot(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 5\n      }\n    }, \"Capture Screenshot\"), this.state.modalOn && /*#__PURE__*/React.createElement(ModalScreenshots, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 28\n      }\n    }), /*#__PURE__*/React.createElement(Carousel, {\n      showArrows: true,\n      selectedItem: this.state.lastScreenshotID,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 9\n      }\n    }, slidesData.map(slide => /*#__PURE__*/React.createElement(\"div\", {\n      key: this.state.lastScreenshotID,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      className: \"slick-slide-image\",\n      src: slide.src,\n      alt: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 15\n      }\n    })))));\n  }\n\n}\n\nfunction startStopFunction(btn) {\n  if (btn.state.textMainBtn.localeCompare(\"Start\") === 0) {\n    startFunction(btn);\n    btn.setState({\n      text: \"Stop\"\n    });\n    return;\n  } //stopFunction();\n\n}\n\nfunction startFunction(btn) {\n  almostStreaming = true;\n  timeStartPressed = Date.now();\n}\n\nclass ComponentsMain extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      current: \"OnConnection\",\n      textMainBtn: \"Start\",\n      showVideoSelect: true,\n      showProgressBar: false,\n      showModalScreenshots: false,\n      showModalDiagnosis: false,\n      showBtnCapture: true\n    };\n  }\n\n  showWeas() {\n    switch (this.state.current) {\n      case 'OnConnection':\n        this.setState({\n          textMainBtn: \"Start\",\n          showVideoSelect: true,\n          showProgressBar: false,\n          showModalScreenshots: false,\n          showModalDiagnosis: false,\n          showBtnCapture: true\n        });\n        console.log(document.querySelector(\"#BtnCaptureScreenshot\"));\n        document.querySelector(\"#BtnCaptureScreenshot\").disabled = true;\n        break;\n\n      case 'Countdown':\n        this.setState({\n          textMainBtn: \"Start\",\n          showVideoSelect: true,\n          showProgressBar: false,\n          showModalScreenshots: false,\n          showModalDiagnosis: false,\n          showBtnCapture: true\n        });\n        break;\n\n      default:\n        console.log('m');\n    }\n  }\n\n  render() {\n    console.log(this.props.state);\n    return /*#__PURE__*/React.createElement(\"div\", {\n      onClick: () => this.showWeas(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 279,\n        columnNumber: 4\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      color: \"primary\",\n      onClick: () => startStopFunction(this),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 280,\n        columnNumber: 4\n      }\n    }, this.state.textMainBtn));\n  }\n\n}\n\nclass InferenceUI extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      current: 'OnConnection'\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(Container, {\n      id: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 296,\n        columnNumber: 6\n      }\n    }, /*#__PURE__*/React.createElement(WebcamStream, {\n      id: \"asa\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 297,\n        columnNumber: 7\n      }\n    }), /*#__PURE__*/React.createElement(ComponentsMain, {\n      state: this.state.current,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 298,\n        columnNumber: 7\n      }\n    }), /*#__PURE__*/React.createElement(Screenshots, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 299,\n        columnNumber: 7\n      }\n    }));\n  }\n\n}\n\nexport default InferenceUI;","map":{"version":3,"sources":["/home/paula/Documents/Practica/git/user_interface/src/components/InferenceUI/InferenceUI.js"],"names":["Container","Button","Modal","ModalHeader","ModalBody","ModalFooter","React","useState","almostStreaming","timeStartPressed","streaming","modalOn","WebcamStream","Component","constructor","props","state","isVideoLoading","videoTag","createRef","canvasPreview","selectVideoSrc","tick","bind","componentDidMount","navigator","mediaDevices","enumerateDevices","then","deviceInfos","i","length","deviceInfo","option","document","createElement","value","deviceId","kind","text","label","current","appendChild","getUserMedia","video","facingMode","stream","srcObject","requestAnimationFrame","window","checkVideoState","setInterval","readyState","HAVE_ENOUGH_DATA","clearInterval","setState","canvasPreviewElement","getContext","height","videoHeight","width","videoWidth","drawImage","font","countdown","render","display","seconds","canvas","context","Math","trunc","Date","now","beginPath","arc","PI","fillStyle","fill","fillText","toString","slidesData","Carousel","require","ModalScreenshots","buttonLabel","className","modal","setModal","toggle","console","log","aa","getElementsByClassName","parentNode","map","slide","src","Screenshots","lastScreenshotID","galleryImages","captureScreenshot","querySelector","imgAsDataURL","toDataURL","newSlidesData","concat","btnsCarousel","style","thumbs","onclick","backgroundColor","startStopFunction","btn","textMainBtn","localeCompare","startFunction","ComponentsMain","showVideoSelect","showProgressBar","showModalScreenshots","showModalDiagnosis","showBtnCapture","showWeas","disabled","InferenceUI"],"mappings":"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","sourcesContent":["import './InferenceUI.css';\nimport {Container, Button, Modal, ModalHeader, ModalBody, ModalFooter\n    } from 'reactstrap';\nimport React, {useState}from 'react';\n//import io from 'socket.io-client';\n\nimport \"react-responsive-carousel/lib/styles/carousel.min.css\";\n\nvar almostStreaming = false;\nvar timeStartPressed;\nvar streaming;\nvar modalOn = false;\nclass WebcamStream extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isVideoLoading: true\n    };\n\n    this.videoTag = React.createRef();\n    this.canvasPreview = React.createRef();\n\t\tthis.selectVideoSrc = React.createRef();\n    this.tick = this.tick.bind(this);\n  }\n  componentDidMount() {\n    navigator.mediaDevices\n\t\t.enumerateDevices()\n\t\t.then( deviceInfos => {\n\t\t\t\tfor (let i = 0; i !== deviceInfos.length; ++i) {\n\t\t\t\t\tconst deviceInfo = deviceInfos[i];\n\t\t\t\t\tconst option = document.createElement('option');\n\t\t\t\t\toption.value = deviceInfo.deviceId;\n\t\t\t\t\tif (deviceInfo.kind === 'videoinput') {\n\t\t\t\t\t\toption.text = deviceInfo.label || 'camera ' +\n\t\t\t\t\t\t\t(this.selectVideoSrc.current.length + 1);\n\t\t\t\t\t\tthis.selectVideoSrc.current.appendChild(option);\n\t\t\t\t\t} \n\t\t\t\t}\n\t\t})\t\t\t\t \n\t\t.then(navigator.mediaDevices\n\n      .getUserMedia({ video: { facingMode: \"environment\" } })\n      .then(stream => {\n        this.videoTag.current.srcObject = stream;\n        requestAnimationFrame(this.tick);\n        window.stream = stream;\n      })\n\t\t);\n  }\n\n\n  tick() {\n    const video = this.videoTag.current;\n\n    const checkVideoState = setInterval(() => {\n      if (video.readyState === video.HAVE_ENOUGH_DATA) {\n        clearInterval(checkVideoState);\n\n        this.setState({ isVideoLoading: false });\n\n          const canvasPreviewElement = this.canvasPreview.current;\n          const canvasPreview = canvasPreviewElement.getContext(\"2d\");\n\n          canvasPreviewElement.height = video.videoHeight;\n          canvasPreviewElement.width = video.videoWidth;\n          canvasPreview.drawImage(\n            video,\n            0,\n            0,\n            canvasPreviewElement.width,\n            canvasPreviewElement.height\n          );\n\t\t\t\t\tif(almostStreaming){\n\t\t\t\t\t\tcanvasPreview.font = \"200px Arial\"\n\t\t\t\t\t\tcountdown(5,canvasPreview);\n\t\t\t\t\t}\n        requestAnimationFrame(this.tick);\n      }\n    }, 50);\n  }\n\n  render() {\n    const { isVideoLoading } = this.state;\n\n    return (\n      <div>\n        <video\n          ref={this.videoTag}\n          width=\"400\"\n          height=\"400\"\n          autoPlay\n          style={{ display: \"none\" }}\n        />\n\n        {!isVideoLoading && <canvas ref={this.canvasPreview} id=\"canvasPreview\" />}\n\n        {isVideoLoading && <p>Please wait while we load the video stream.</p>}\n\t\t\t\t<select ref={this.selectVideoSrc}\n\t\t\t\t\t\t\t\tstyle={{width: 300 }}\n\t\t\t\t/>\n\n      </div>\n    );\n  }\n}\n\nfunction countdown(seconds,canvas){\n\t\n\tlet context = canvas;\t\n\tlet countdown = seconds - Math.trunc((-timeStartPressed + Date.now())/1000);\n  context.beginPath();\n  context.arc(320, 240, 130, 0, 2 * Math.PI);\n  context.fillStyle = \"rgba(255, 255, 255, 0.8)\";;\n  context.fill();\n  context.beginPath();\n  context.fillStyle = \"black\";\n  if(countdown >= 10){\n    context.fillText(countdown.toString(10),200,315);\n  }else if(countdown >= 1){\n    context.fillText(countdown.toString(10),270,308,100);\n  }\n\n  context.fill();\n  if (countdown <  1){\n    almostStreaming = false;\n    streaming = true;\n    \n  }\n\t\n}\nvar slidesData = [];\nvar Carousel = require('react-responsive-carousel').Carousel;\nconst ModalScreenshots = (props) => {\n  const {\n    buttonLabel,\n    className\n  } = props;\n\n  const [modal, setModal] = useState(true);\n\n  const toggle = () => {\n    setModal(!modal); \n    console.log(\"ff\");\n    modalOn = false;\n  }\n  let aa = document.getElementsByClassName('slick-slide-image');\n  for (let i=0;i < aa.length; i++){\n  console.log(\"aka\");\n\n  console.log(aa[i]);\n  console.log(aa[i].parentNode.className);\n  }\n  return (\n    <div>\n      <Modal isOpen={modalOn} toggle={toggle} className={className} size={'xl'}>\n        <ModalHeader toggle={toggle}>Modal title</ModalHeader>\n        <ModalBody>\n        <Carousel showArrows={true} selectedItem={0} >\n          {slidesData.map((slide) =>\n            <div key={0}>\n              <img className=\"slick-slide-image\" src={slide.src} alt='Error' />\n            </div>\n          )}\n        </Carousel>\n        </ModalBody>\n        <ModalFooter>\n        </ModalFooter>\n      </Modal>\n    </div>\n  );\n}\nclass Screenshots extends React.Component{\n\tstate = {\n\t\tlastScreenshotID: 0,\n    galleryImages: [], \n\t\tmodalOn: false\n\t}\n\n\tcaptureScreenshot = async () => {\n\t\tvar canvas = document.querySelector(\"#canvasPreview\");\n\t\tvar imgAsDataURL = canvas.toDataURL(\"image/jpeg\",1);\n    let newSlidesData = [{src: imgAsDataURL}];\n\t\tslidesData = slidesData.concat(newSlidesData);\n\t\tawait this.setState({lastScreenshotID: this.state.lastScreenshotID+1});\n\t\tlet btnsCarousel = document.getElementsByClassName(\"control-arrow\");\n\t\tdocument.querySelector(\".carousel-slider\").style.display = 'none';\n\t  let thumbs = document.getElementsByClassName(\"thumb\");\n\t\tthumbs[thumbs.length-1].onclick = async() => {\n      console.log(\"tt\");\n\t\t\tmodalOn = true;\n\t\t\tawait this.setState({modalOn: modalOn});\n\t\t};\t\n\t\ttry{\n\t\t\tbtnsCarousel[2].style.backgroundColor= 'black';\n\t\t\tbtnsCarousel[3].style.backgroundColor= 'black';\n\t\t}\n\t\tcatch{\n\t\t\n\t\t}\n}\n\trender(){\n    return(\n\t\t\t<div>\n\t\t\t\t<Button color=\"primary\" id=\"BtnCaptureScreenshot\" display='none' onClick={() => this.captureScreenshot()}>Capture Screenshot</Button>\n\t\t\t\t{this.state.modalOn && <ModalScreenshots/>}\n        <Carousel showArrows={true} selectedItem={this.state.lastScreenshotID} >\n          {slidesData.map((slide) =>\n            <div key={this.state.lastScreenshotID}>\n              <img className=\"slick-slide-image\" src={slide.src} alt='' />\n            </div>\n          )}\n        </Carousel>\n\t\t\t</div>\n    );\n\t}\n\n}\nfunction startStopFunction(btn){\n  if (btn.state.textMainBtn.localeCompare(\"Start\") === 0){\n    startFunction(btn);\n\t\tbtn.setState({text:\"Stop\"});\n    return;\n  }\n  //stopFunction();\n}\nfunction startFunction(btn){\n\talmostStreaming = true;\n\ttimeStartPressed = Date.now();\n\n}\nclass ComponentsMain extends React.Component{\n\tconstructor(props){\n\t\tsuper(props);\n\t\tthis.state = {\n      current: \"OnConnection\",\n\n      textMainBtn: \"Start\",\n      showVideoSelect: true,\n      showProgressBar: false,\n      showModalScreenshots: false,\n      showModalDiagnosis: false,\n      showBtnCapture: true\n\t\t}\n\t}\n  \n  showWeas(){\n    switch(this.state.current){\n      case 'OnConnection':\n        this.setState({\n          textMainBtn: \"Start\",\n          showVideoSelect: true,\n          showProgressBar: false,\n          showModalScreenshots: false,\n          showModalDiagnosis: false,\n          showBtnCapture: true\n        });\n        console.log(document.querySelector(\"#BtnCaptureScreenshot\"));\n        document.querySelector(\"#BtnCaptureScreenshot\").disabled = true;\n        break;\n      case 'Countdown':\n        this.setState({\n          textMainBtn: \"Start\",\n          showVideoSelect: true,\n          showProgressBar: false,\n          showModalScreenshots: false,\n          showModalDiagnosis: false,\n          showBtnCapture: true\n        });\n        break;\n      default:\n        console.log('m');\n\n    }\n  }\n\n\trender(){\n  console.log(this.props.state);\n\t\treturn(\n\t\t\t<div onClick={()=>this.showWeas()}>\n\t\t\t<Button color=\"primary\" onClick={() => startStopFunction(this)}>{this.state.textMainBtn}</Button>\n\t\t\t</div>\n\t\t);\n\t}\n}\nclass InferenceUI extends React.Component {\n    constructor(props){\n        super(props);\n        this.state = {\n          current: 'OnConnection'\n        }\n    }\n    \n\n    render() {\n      return (\n\t\t\t\t\t<Container id=\"container\">\n\t\t\t\t\t\t<WebcamStream id=\"asa\"/>\n\t\t\t\t\t\t<ComponentsMain state={this.state.current}/>\n\t\t\t\t\t\t<Screenshots/>\n\t\t\t\t</Container>\n\t\n        );\n        \n    }\n}\n\nexport default InferenceUI;\n"]},"metadata":{},"sourceType":"module"}