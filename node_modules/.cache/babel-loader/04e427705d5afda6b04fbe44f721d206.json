{"ast":null,"code":"var _jsxFileName = \"/home/paula/Documents/Practica/git/user_interface/src/components/InferenceUI/WebcamStream.js\";\nimport './InferenceUI.css';\nimport React from 'react';\nimport { Button, Alert, Progress, Col, Row } from 'reactstrap';\nimport JSZip from 'jszip';\nimport JSZipUtils from 'jszip-utils';\nimport FileSaver from 'file-saver'; // Agregar variable para almacenar la hora en que se apretó el start.\n// Administrar el fullscreen desde acá ahora.\n\nclass WebcamStream extends React.Component {\n  constructor(props) {\n    super();\n\n    this.captureScreenshot = async () => {\n      var canvas = document.querySelector(\"#canvasPreview\");\n      var imgAsDataURL = canvas.toDataURL(\"image/jpeg\", 1);\n      let newSlidesData = [{\n        src: imgAsDataURL,\n        thumbnail: imgAsDataURL,\n        thumbnailWidth: 160,\n        thumbnailHeight: 120\n      }];\n      this.props.setScreenshots(newSlidesData);\n    };\n\n    this.state = {\n      isVideoLoading: true\n    };\n    this.videoTag = React.createRef();\n    this.canvasPreview = React.createRef();\n    this.selectVideoSrc = React.createRef();\n    this.tick = this.tick.bind(this);\n    this.countdownFrom = 1;\n    this.timeStartPressed = null;\n    this.mediaRecorder = null;\n    this.recordedChunks = [];\n    this.videoRecorded = null;\n    this.canvasWidth = \"100%\";\n  }\n\n  setStream() {\n    var selectVideoSrc = document.getElementById(\"videoSelectConf\"); // Falta cerrar el stream anterior antes de abrir uno nuevo.\n\n    navigator.mediaDevices.getUserMedia({\n      video: {\n        deviceId: selectVideoSrc.value ? {\n          exact: selectVideoSrc.value\n        } : undefined,\n        facingMode: \"enviroment\"\n      }\n    }).then(stream => {\n      this.videoTag.current.srcObject = stream;\n      requestAnimationFrame(this.tick);\n      window.stream = stream;\n      var options = {\n        mimeType: \"video/webm;codecs=vp8\"\n      };\n      this.mediaRecorder = new MediaRecorder(stream, options);\n    });\n  }\n\n  tick() {\n    const video = this.videoTag.current;\n    const checkVideoState = setInterval(() => {\n      if (video.readyState === video.HAVE_ENOUGH_DATA) {\n        clearInterval(checkVideoState);\n        this.setState({\n          isVideoLoading: false\n        });\n        const canvasPreviewElement = this.canvasPreview.current;\n\n        if (canvasPreviewElement) {\n          const canvasPreview = canvasPreviewElement.getContext(\"2d\");\n          canvasPreviewElement.height = video.videoHeight;\n          canvasPreviewElement.width = video.videoWidth;\n          canvasPreview.drawImage(video, 0, 0, canvasPreviewElement.width, canvasPreviewElement.height);\n\n          if (this.props.currentState.stateName.localeCompare(\"Countdown\") === 0) {\n            canvasPreview.font = \"200px Arial\";\n            countdown(canvasPreview, this);\n          }\n\n          requestAnimationFrame(this.tick);\n        }\n      }\n    }, 50);\n  }\n\n  startRecording() {\n    this.mediaRecorder.ondataavailable = handleDataAvailable(this);\n    this.mediaRecorder.start();\n    this.props.getVideoThumbnail(this.canvasPreview.current.toDataURL(\"image/jpeg\", 1));\n  }\n\n  stopRecording() {\n    this.mediaRecorder.stop();\n  }\n\n  downloadVideo() {\n    var aux = document.createElement(\"a\");\n    document.body.appendChild(aux);\n    aux.style = \"display: none\";\n    aux.href = this.videoRecorded;\n    aux.download = \"test.webm\";\n    document.body.appendChild(aux);\n    aux.click();\n  }\n\n  downloadScreenshots() {\n    let zip = new JSZip();\n\n    for (let i = 0; i < this.props.currentState.GallerySrc.length; i++) {\n      let name = \"Screenshot_\" + i + \".jpeg\";\n      zip.file(name, urlToPromise(this.props.currentState.GallerySrc[i].src), {\n        binary: true\n      });\n    }\n\n    zip.generateAsync({\n      type: \"blob\"\n    }).then(function (content) {\n      FileSaver.saveAs(content, \"download.zip\");\n    });\n  }\n\n  render() {\n    const isVideoLoading = this.state.isVideoLoading;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"WebcamStream_Wrapper\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"video\", {\n      ref: this.videoTag,\n      autoPlay: true,\n      id: \"video\",\n      style: {\n        display: \"none\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 9\n      }\n    }), !isVideoLoading && /*#__PURE__*/React.createElement(\"div\", {\n      id: \"mainDiv\",\n      className: \"container mainDiv\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      id: \"canvasDiv\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 13\n      }\n    }, this.props.currentState.canvasAlert && /*#__PURE__*/React.createElement(\"div\", {\n      id: \"alert\",\n      style: {\n        position: 'absolute',\n        zIndex: 2\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Alert, {\n      color: \"warning\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 19\n      }\n    }, \"Verifique el enfoque del dispositivo.\")), this.props.currentState.stateName.localeCompare(\"GetCon\") === 0 && /*#__PURE__*/React.createElement(\"div\", {\n      id: \"alert\",\n      style: {\n        position: 'absolute',\n        zIndex: 2\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Alert, {\n      color: \"info\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 19\n      }\n    }, \"Estableciendo conexi\\xF3n con el servidor.\")), this.props.currentState.renderCanvas && /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"canvas\", {\n      ref: this.canvasPreview,\n      id: \"canvasPreview\",\n      className: \"canvasPreview\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 19\n      }\n    })), !this.props.currentState.renderCanvas && /*#__PURE__*/React.createElement(\"video\", {\n      id: \"recordedVideoElement\",\n      controls: true,\n      srcObject: null,\n      src: null,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 17\n      }\n    }))), isVideoLoading && /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 11\n      }\n    }, \"Seleccione un dispositivo de imagen en el panel de configuraci\\xF3n.\"), /*#__PURE__*/React.createElement(\"div\", {\n      id: \"buttons\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      color: \"primary\",\n      size: \"xl\",\n      onClick: () => {\n        ctrlBtnFunction(this);\n      },\n      disabled: !this.props.currentState.enableCtrlBtn,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 11\n      }\n    }, this.props.currentState.textCtrlBtn), /*#__PURE__*/React.createElement(Button, {\n      color: \"primary\",\n      size: \"l\",\n      disabled: !this.props.currentState.enableCaptureBtn,\n      onClick: () => this.captureScreenshot(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 11\n      }\n    }, \"Capturar Pantalla\"), this.props.currentState.showProgressBar && /*#__PURE__*/React.createElement(Progress, {\n      value: this.props.currentState.progress,\n      color: setProgressBarColor(this),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 11\n      }\n    })));\n  }\n\n}\n\nvar handleDataAvailable = function (el) {\n  return function (event) {\n    console.log('handleDataAvailable');\n\n    if (event.data && event.data.size > 0) {\n      el.recordedChunks.push(event.data);\n      var blob = new Blob(el.recordedChunks, {\n        type: \"video/webm\"\n      });\n      el.videoRecorded = URL.createObjectURL(blob);\n      var videoElement = document.getElementById(\"recordedVideoElement\");\n      videoElement.src = null;\n      videoElement.srcObject = null;\n      videoElement.src = el.videoRecorded;\n    } else {\n      console.log(\"no data available for recording\");\n    }\n  };\n};\n\nfunction setProgressBarColor(ctxt) {\n  let p = parseInt(ctxt.props.currentState.progress, 10);\n\n  if (p < 80) {\n    ctxt.progressBarColor = \"info\";\n  } else if (p < 100) {\n    ctxt.progressBarColor = \"success\";\n  } else {\n    ctxt.progressBarColor = \"danger\";\n  }\n\n  return ctxt.progressBarColor;\n}\n\nfunction ctrlBtnFunction(ctxt) {\n  switch (ctxt.props.currentState.stateName) {\n    case 'Idle':\n      ctxt.props.handler('GetCon'); // Dummy, despues vendra del servidor.\n\n      setTimeout(() => {\n        ctxt.props.handler('Countdown');\n        ctxt.startRecording();\n        ctxt.timeStartPressed = Date.now();\n      }, 1000); // Enviar al servidor la solicitud de conexión.\n\n      break;\n\n    case 'GetCon':\n      ctxt.props.handler('Idle');\n      break;\n\n    case 'Examination':\n      ctxt.props.handler('Review');\n      ctxt.stopRecording(); // Enviar al servidor la solicitud de diagnóstico.\n\n      break;\n\n    case 'Review':\n      ctxt.props.handler('Idle');\n      break;\n\n    default:\n      console.log(\"Error: Boton apretado en estado que no correspondía.\");\n  }\n}\n\nfunction countdown(canvas, el) {\n  console.log(el.timeStartPressed);\n  let context = canvas;\n  let countdown = el.props.countdownFrom - Math.trunc((-el.timeStartPressed + Date.now()) / 1000);\n  context.beginPath();\n  context.arc(320, 240, 130, 0, 2 * Math.PI);\n  context.fillStyle = \"rgba(255, 255, 255, 0.8)\";\n  ;\n  context.fill();\n  context.beginPath();\n  context.fillStyle = \"black\";\n\n  if (countdown >= 10) {\n    context.fillText(countdown.toString(10), 200, 315);\n  } else if (countdown >= 1) {\n    context.fillText(countdown.toString(10), 270, 308, 100);\n  }\n\n  context.fill();\n\n  if (countdown < 1) {\n    el.props.handler(\"Examination\");\n  }\n}\n\nfunction urlToPromise(url) {\n  return new Promise(function (resolve, reject) {\n    JSZipUtils.getBinaryContent(url, function (err, data) {\n      if (err) {\n        reject(err);\n      } else {\n        resolve(data);\n      }\n    });\n  });\n}\n\nexport default WebcamStream;","map":{"version":3,"sources":["/home/paula/Documents/Practica/git/user_interface/src/components/InferenceUI/WebcamStream.js"],"names":["React","Button","Alert","Progress","Col","Row","JSZip","JSZipUtils","FileSaver","WebcamStream","Component","constructor","props","captureScreenshot","canvas","document","querySelector","imgAsDataURL","toDataURL","newSlidesData","src","thumbnail","thumbnailWidth","thumbnailHeight","setScreenshots","state","isVideoLoading","videoTag","createRef","canvasPreview","selectVideoSrc","tick","bind","countdownFrom","timeStartPressed","mediaRecorder","recordedChunks","videoRecorded","canvasWidth","setStream","getElementById","navigator","mediaDevices","getUserMedia","video","deviceId","value","exact","undefined","facingMode","then","stream","current","srcObject","requestAnimationFrame","window","options","mimeType","MediaRecorder","checkVideoState","setInterval","readyState","HAVE_ENOUGH_DATA","clearInterval","setState","canvasPreviewElement","getContext","height","videoHeight","width","videoWidth","drawImage","currentState","stateName","localeCompare","font","countdown","startRecording","ondataavailable","handleDataAvailable","start","getVideoThumbnail","stopRecording","stop","downloadVideo","aux","createElement","body","appendChild","style","href","download","click","downloadScreenshots","zip","i","GallerySrc","length","name","file","urlToPromise","binary","generateAsync","type","content","saveAs","render","display","canvasAlert","position","zIndex","renderCanvas","ctrlBtnFunction","enableCtrlBtn","textCtrlBtn","enableCaptureBtn","showProgressBar","progress","setProgressBarColor","el","event","console","log","data","size","push","blob","Blob","URL","createObjectURL","videoElement","ctxt","p","parseInt","progressBarColor","handler","setTimeout","Date","now","context","Math","trunc","beginPath","arc","PI","fillStyle","fill","fillText","toString","url","Promise","resolve","reject","getBinaryContent","err"],"mappings":"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","sourcesContent":["import './InferenceUI.css'\nimport React from 'react';\nimport {Button, Alert, Progress,Col,Row} from 'reactstrap';\n\nimport JSZip from 'jszip';\nimport JSZipUtils from 'jszip-utils';\nimport FileSaver from 'file-saver';\n\n// Agregar variable para almacenar la hora en que se apretó el start.\n// Administrar el fullscreen desde acá ahora.\nclass WebcamStream extends React.Component {\n  constructor(props) {\n    super();\n    this.state = {\n      isVideoLoading: true\n    };\n\n    this.videoTag = React.createRef();\n    this.canvasPreview = React.createRef();\n\t\tthis.selectVideoSrc = React.createRef();\n    this.tick = this.tick.bind(this);\n\n    this.countdownFrom = 1;\n    this.timeStartPressed = null;\n\n    this.mediaRecorder = null;\n    this.recordedChunks= [];\n\t  this.videoRecorded = null;\n\n    this.canvasWidth = \"100%\";\n\n  }\n\n  setStream(){\n    var selectVideoSrc = document.getElementById(\"videoSelectConf\");\n    // Falta cerrar el stream anterior antes de abrir uno nuevo.\n    navigator.mediaDevices.getUserMedia({\n      video: {\n        deviceId: selectVideoSrc.value? {exact: selectVideoSrc.value}:undefined,\n        facingMode: \"enviroment\"\n      }\n    }).then(stream => {\n      this.videoTag.current.srcObject = stream;\n      requestAnimationFrame(this.tick);\n      window.stream = stream;\n      var options = { mimeType: \"video/webm;codecs=vp8\" };\n      this.mediaRecorder = new MediaRecorder(stream, options);\n    });\n  }\n\n  tick() {\n    const video = this.videoTag.current;\n    const checkVideoState = setInterval(() => {\n      if (video.readyState === video.HAVE_ENOUGH_DATA) {\n        clearInterval(checkVideoState);\n\n        this.setState({ isVideoLoading: false });\n          const canvasPreviewElement = this.canvasPreview.current;\n          if(canvasPreviewElement){\n          const canvasPreview = canvasPreviewElement.getContext(\"2d\");\n\n          canvasPreviewElement.height = video.videoHeight;\n          canvasPreviewElement.width = video.videoWidth;\n          canvasPreview.drawImage(\n              video,\n              0,\n              0,\n              canvasPreviewElement.width,\n              canvasPreviewElement.height\n           );\n           if(this.props.currentState.stateName.localeCompare(\"Countdown\")===0){\n             canvasPreview.font = \"200px Arial\"\n             countdown(canvasPreview,this);\n           }\n           requestAnimationFrame(this.tick);\n           }\n      }\n    }, 50);\n  }\n\n  startRecording(){\n      this.mediaRecorder.ondataavailable = handleDataAvailable(this);\n      this.mediaRecorder.start();\n      this.props.getVideoThumbnail(this.canvasPreview.current.toDataURL(\"image/jpeg\",1));\n  }\n\n\tstopRecording(){\n    this.mediaRecorder.stop();\n\t}\n\n\tdownloadVideo(){\n\t\tvar aux = document.createElement(\"a\");\n\t\tdocument.body.appendChild(aux);\n\t\taux.style = \"display: none\";\n\t\taux.href = this.videoRecorded;\n    aux.download = \"test.webm\";\n    document.body.appendChild(aux);\n\t\taux.click();\t\t\n\t}\n\n  captureScreenshot = async () => {\n    var canvas = document.querySelector(\"#canvasPreview\");\n    var imgAsDataURL = canvas.toDataURL(\"image/jpeg\",1);\n    let newSlidesData = [{src: imgAsDataURL, \n                          thumbnail: imgAsDataURL,\n                          thumbnailWidth: 160,\n                          thumbnailHeight: 120\n                        }];\n    this.props.setScreenshots(newSlidesData);\n    }\n    \n    downloadScreenshots(){\n      let zip = new JSZip();\n      for(let i=0;i < this.props.currentState.GallerySrc.length; i++){\n        let name = \"Screenshot_\" + i + \".jpeg\";\n        zip.file(name,urlToPromise(this.props.currentState.GallerySrc[i].src),{binary:true});\n      }\n      zip.generateAsync({type: \"blob\"}).then(function(content) {\n        FileSaver.saveAs(content, \"download.zip\");\n      });\n    }\n  render() {\n    const isVideoLoading = this.state.isVideoLoading;\n    return (\n      <div className=\"WebcamStream_Wrapper\">\n        {/* Dummy video tag to recieve UserMedia stream.*/}\n        <video\n          ref={this.videoTag}\n          autoPlay\n          id = \"video\"\n          style={{ display: \"none\"}}\n        />\n\n        {!isVideoLoading &&\n          <div  id=\"mainDiv\" className=\"container mainDiv\">\n            <div id=\"canvasDiv\">\n              {this.props.currentState.canvasAlert &&\n                <div id=\"alert\" style={{position: 'absolute', zIndex: 2}}>\n                  <Alert color=\"warning\">Verifique el enfoque del dispositivo.</Alert>\n                </div>\n              }\n\n              {this.props.currentState.stateName.localeCompare(\"GetCon\") === 0 &&\n                <div id=\"alert\" style={{position: 'absolute', zIndex: 2}}>\n                  <Alert color=\"info\">Estableciendo conexión con el servidor.</Alert>\n                </div>\n              }\n              \n              {this.props.currentState.renderCanvas &&\n                <div>\n                  <canvas ref={this.canvasPreview}\n                          id=\"canvasPreview\"\n                          className = \"canvasPreview\"/>\n                </div>\n              }\n              {!this.props.currentState.renderCanvas &&\n                <video\n                  id = \"recordedVideoElement\"\n                  controls\n                  srcObject = {null}\n                  src={null}\n                />\n              }\n            </div>\n          </div>\n        }\n        {isVideoLoading &&\n          <p>Seleccione un dispositivo de imagen en el panel de configuración.</p>\n        }\n\t\t\t\t<div id=\"buttons\">\n          <Button color=\"primary\"\n                  size=\"xl\"\n                  onClick={()=>{ctrlBtnFunction(this);}}\n                  disabled={!this.props.currentState.enableCtrlBtn}>\n                  {this.props.currentState.textCtrlBtn}</Button>\n          <Button color=\"primary\" \n                  size = \"l\"\n                  disabled={!this.props.currentState.enableCaptureBtn}  \n                  onClick={() => this.captureScreenshot()}>\n            {\"Capturar Pantalla\"}</Button>\n        {this.props.currentState.showProgressBar && \n          <Progress value={this.props.currentState.progress} \n                    color={setProgressBarColor(this)}/>}\n        </div>\n      </div>\n    );\n  }\n}\n\nvar handleDataAvailable = function(el) {\n  return function (event) {\n    console.log('handleDataAvailable');\n  \tif (event.data && event.data.size > 0) {\n      el.recordedChunks.push(event.data);\n      var blob = new Blob(el.recordedChunks, {\n        type: \"video/webm\"\n      });\n      el.videoRecorded = URL.createObjectURL(blob);\n      var videoElement = document.getElementById(\"recordedVideoElement\");\n      videoElement.src = null;\n      videoElement.srcObject = null;\n      videoElement.src = el.videoRecorded;\n  \t}\n\t\telse {\n    \tconsole.log(\"no data available for recording\");\n  \t}\n  }\n}\n\nfunction setProgressBarColor(ctxt){\n  let p =parseInt(ctxt.props.currentState.progress,10);\n  if (p < 80){\n    ctxt.progressBarColor = \"info\";\n  }\n  else if (p < 100){\n    ctxt.progressBarColor = \"success\";\n  }\n  else{\n    ctxt.progressBarColor = \"danger\";\n  }\n  return ctxt.progressBarColor;\n}\n\nfunction ctrlBtnFunction(ctxt){\n  switch(ctxt.props.currentState.stateName){\n    case 'Idle':\n      ctxt.props.handler('GetCon');\n      // Dummy, despues vendra del servidor.\n      setTimeout(()=>{ctxt.props.handler('Countdown');ctxt.startRecording();ctxt.timeStartPressed = Date.now();}, 1000);\n      // Enviar al servidor la solicitud de conexión.\n      break;\n    case 'GetCon':\n      ctxt.props.handler('Idle');\n      break;\n    case 'Examination':\n      ctxt.props.handler('Review');\n      ctxt.stopRecording();\n      // Enviar al servidor la solicitud de diagnóstico.\n      break;\n    case 'Review':\n      ctxt.props.handler('Idle');\n        break;\n    default:\n      console.log(\"Error: Boton apretado en estado que no correspondía.\")\n  }\n}\n\nfunction countdown(canvas,el){\n  console.log(el.timeStartPressed)\n\tlet context = canvas;\t\n\tlet countdown = el.props.countdownFrom- Math.trunc((-el.timeStartPressed + Date.now())/1000);\n  context.beginPath();\n  context.arc(320, 240, 130, 0, 2 * Math.PI);\n  context.fillStyle = \"rgba(255, 255, 255, 0.8)\";;\n  context.fill();\n  context.beginPath();\n  context.fillStyle = \"black\";\n  if(countdown >= 10){\n    context.fillText(countdown.toString(10),200,315);\n  }else if(countdown >= 1){\n    context.fillText(countdown.toString(10),270,308,100);\n  }\n\n  context.fill();\n  if (countdown <  1){\n\t\tel.props.handler(\"Examination\");\n  }\n}\n\nfunction urlToPromise(url) {\n  return new Promise(function(resolve, reject) {\n    JSZipUtils.getBinaryContent(url, function (err, data) {\n      if(err) {\n        reject(err);\n      }\n      else {\n        resolve(data);\n      }\n    });\n  });\n}\nexport default WebcamStream;\n"]},"metadata":{},"sourceType":"module"}