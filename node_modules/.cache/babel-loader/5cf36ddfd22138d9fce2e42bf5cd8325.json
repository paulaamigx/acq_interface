{"ast":null,"code":"export function listDevices() {\n  navigator.mediaDevices.getUserMedia({\n    video: true,\n    audio: false\n  });\n  navigator.mediaDevices.enumerateDevices().then(gotDevices).catch(handleError);\n}\n\nfunction handleError(error) {\n  console.log('navigator.MediaDevices.getUserMedia error: ', error.message, error.name);\n} //funcion duplicada! dejar solo una (otra en webcamstream.js)\n\n\nfunction gotDevices(deviceInfos) {\n  const videoSelect = document.getElementById(\"videoSelectConf\");\n  const selectors = [videoSelect]; // Handles being called several times to update labels. Preserve values.\n\n  const values = selectors.map(select => select.value);\n  selectors.forEach(select => {\n    while (select.firstChild) {\n      select.removeChild(select.firstChild);\n    }\n  });\n\n  for (let i = 0; i !== deviceInfos.length; ++i) {\n    const deviceInfo = deviceInfos[i];\n    const option = document.createElement('option');\n    option.value = deviceInfo.deviceId;\n\n    if (deviceInfo.kind === 'videoinput') {\n      option.text = deviceInfo.label || `camera ${videoSelect.length + 1}`;\n      videoSelect.appendChild(option);\n    }\n  }\n\n  selectors.forEach((select, selectorIndex) => {\n    if (Array.prototype.slice.call(select.childNodes).some(n => n.value === values[selectorIndex])) {\n      select.value = values[selectorIndex];\n    }\n  });\n}\n\nexport default listDevices;","map":{"version":3,"sources":["/home/paula/Documents/Practica/git/user_interface/src/components/InferenceUI/SidePanel/Conf/functions.js"],"names":["listDevices","navigator","mediaDevices","getUserMedia","video","audio","enumerateDevices","then","gotDevices","catch","handleError","error","console","log","message","name","deviceInfos","videoSelect","document","getElementById","selectors","values","map","select","value","forEach","firstChild","removeChild","i","length","deviceInfo","option","createElement","deviceId","kind","text","label","appendChild","selectorIndex","Array","prototype","slice","call","childNodes","some","n"],"mappings":"AAAA,OAAO,SAASA,WAAT,GAAsB;AAC3BC,EAAAA,SAAS,CAACC,YAAV,CAAuBC,YAAvB,CAAoC;AAACC,IAAAA,KAAK,EAAC,IAAP;AAAaC,IAAAA,KAAK,EAAC;AAAnB,GAApC;AACAJ,EAAAA,SAAS,CAACC,YAAV,CAAuBI,gBAAvB,GACCC,IADD,CACMC,UADN,EACkBC,KADlB,CACwBC,WADxB;AAED;;AAED,SAASA,WAAT,CAAqBC,KAArB,EAA4B;AAC1BC,EAAAA,OAAO,CAACC,GAAR,CAAY,6CAAZ,EAA2DF,KAAK,CAACG,OAAjE,EAA0EH,KAAK,CAACI,IAAhF;AACD,C,CACD;;;AACA,SAASP,UAAT,CAAoBQ,WAApB,EAAiC;AAC/B,QAAMC,WAAW,GAAGC,QAAQ,CAACC,cAAT,CAAwB,iBAAxB,CAApB;AACA,QAAMC,SAAS,GAAG,CAACH,WAAD,CAAlB,CAF+B,CAG/B;;AACA,QAAMI,MAAM,GAAGD,SAAS,CAACE,GAAV,CAAcC,MAAM,IAAIA,MAAM,CAACC,KAA/B,CAAf;AACAJ,EAAAA,SAAS,CAACK,OAAV,CAAkBF,MAAM,IAAI;AAC1B,WAAOA,MAAM,CAACG,UAAd,EAA0B;AACxBH,MAAAA,MAAM,CAACI,WAAP,CAAmBJ,MAAM,CAACG,UAA1B;AACD;AACF,GAJD;;AAKA,OAAK,IAAIE,CAAC,GAAG,CAAb,EAAgBA,CAAC,KAAKZ,WAAW,CAACa,MAAlC,EAA0C,EAAED,CAA5C,EAA+C;AAC7C,UAAME,UAAU,GAAGd,WAAW,CAACY,CAAD,CAA9B;AACA,UAAMG,MAAM,GAAGb,QAAQ,CAACc,aAAT,CAAuB,QAAvB,CAAf;AACAD,IAAAA,MAAM,CAACP,KAAP,GAAeM,UAAU,CAACG,QAA1B;;AACA,QAAIH,UAAU,CAACI,IAAX,KAAoB,YAAxB,EAAsC;AACpCH,MAAAA,MAAM,CAACI,IAAP,GAAcL,UAAU,CAACM,KAAX,IAAqB,UAASnB,WAAW,CAACY,MAAZ,GAAqB,CAAE,EAAnE;AACAZ,MAAAA,WAAW,CAACoB,WAAZ,CAAwBN,MAAxB;AACD;AACF;;AACDX,EAAAA,SAAS,CAACK,OAAV,CAAkB,CAACF,MAAD,EAASe,aAAT,KAA2B;AAC3C,QAAIC,KAAK,CAACC,SAAN,CAAgBC,KAAhB,CAAsBC,IAAtB,CAA2BnB,MAAM,CAACoB,UAAlC,EAA8CC,IAA9C,CAAmDC,CAAC,IAAIA,CAAC,CAACrB,KAAF,KAAYH,MAAM,CAACiB,aAAD,CAA1E,CAAJ,EAAgG;AAC9Ff,MAAAA,MAAM,CAACC,KAAP,GAAeH,MAAM,CAACiB,aAAD,CAArB;AACD;AACF,GAJD;AAKD;;AAGD,eAAetC,WAAf","sourcesContent":["export function listDevices(){\n  navigator.mediaDevices.getUserMedia({video:true, audio:false});\n  navigator.mediaDevices.enumerateDevices()\n  .then(gotDevices).catch(handleError);\n}\n\nfunction handleError(error) {\n  console.log('navigator.MediaDevices.getUserMedia error: ', error.message, error.name);\n}\n//funcion duplicada! dejar solo una (otra en webcamstream.js)\nfunction gotDevices(deviceInfos) {\n  const videoSelect = document.getElementById(\"videoSelectConf\");\n  const selectors = [videoSelect];\n  // Handles being called several times to update labels. Preserve values.\n  const values = selectors.map(select => select.value);\n  selectors.forEach(select => {\n    while (select.firstChild) {\n      select.removeChild(select.firstChild);\n    }\n  });\n  for (let i = 0; i !== deviceInfos.length; ++i) {\n    const deviceInfo = deviceInfos[i];\n    const option = document.createElement('option');\n    option.value = deviceInfo.deviceId;\n    if (deviceInfo.kind === 'videoinput') {\n      option.text = deviceInfo.label || `camera ${videoSelect.length + 1}`;\n      videoSelect.appendChild(option);\n    }\n  }\n  selectors.forEach((select, selectorIndex) => {\n    if (Array.prototype.slice.call(select.childNodes).some(n => n.value === values[selectorIndex])) {\n      select.value = values[selectorIndex];\n    }\n  });\n}\n\n\nexport default listDevices;\n"]},"metadata":{},"sourceType":"module"}