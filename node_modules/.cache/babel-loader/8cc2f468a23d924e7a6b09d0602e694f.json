{"ast":null,"code":"var _jsxFileName = \"/home/paula/Documents/Practica/git/user_interface/src/components/InferenceUI/InferenceUI.js\";\nimport './InferenceUI.css';\nimport { Container, Button, Modal, ModalHeader, ModalBody, ModalFooter, Progress, Spinner } from 'reactstrap';\nimport React, { useState } from 'react'; //import io from 'socket.io-client';\n\nimport WebcamStream from './WebcamStream.js';\nimport Screenshots from './Screenshots.js';\nimport Diagnosis from './Diagnosis.js';\nimport \"react-responsive-carousel/lib/styles/carousel.min.css\";\n\nfunction startStopFunction(btn) {\n  if (btn.props.currentState.textMainBtn.localeCompare(\"Start\") === 0) {\n    btn.props.handler(\"Countdown\");\n    startFunction(btn);\n    return;\n  }\n\n  btn.props.handler(\"StopStream\"); //stopFunction();\n}\n\nfunction startFunction(btn) {\n  btn.props.currentState.almostStreaming = true; //btn.props.timeStartPressed = Date.now();\n}\n\nclass ComponentsMain extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 4\n      }\n    }, this.props.currentState.showStartBtn && /*#__PURE__*/React.createElement(Button, {\n      color: \"primary\",\n      onClick: () => startStopFunction(this),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 45\n      }\n    }, this.props.currentState.textMainBtn), this.props.currentState.showCaptureBtn && /*#__PURE__*/React.createElement(Button, {\n      color: \"primary\",\n      disabled: this.props.currentState.disableBtnCapture,\n      onClick: () => this.props.captureScreenshot(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 47\n      }\n    }, \"Capture Screenshot\"), this.props.currentState.showProgressBar && /*#__PURE__*/React.createElement(Progress, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 48\n      }\n    }));\n  }\n\n}\n\nclass InferenceUI extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      current: \"SelectingSource\",\n      textMainBtn: \"Start\",\n      showStartBtn: false,\n      showCaptureBtn: false,\n      showVideoSelect: false,\n      showProgressBar: false,\n      showModalScreenshots: false,\n      //if requested\n      showModalDiagnosis: false,\n      disableBtnCapture: false,\n      streaming: false,\n      almostStreaming: false,\n      timeStartPressed: 0,\n      triggerCaptureScreenshot: false\n    };\n    this.child = React.createRef();\n    this.countdownFrom = 1;\n  }\n\n  async handler(nextState) {\n    await this.setState({\n      current: nextState\n    });\n    console.log(\"estado en switch: \" + this.state.current);\n    await this.setState(manageStates(this.state.current));\n  }\n\n  captureScreenshot() {\n    this.child.current.captureScreenshot();\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(Container, {\n      id: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 6\n      }\n    }, /*#__PURE__*/React.createElement(WebcamStream, {\n      id: \"WebcamStream\",\n      currentState: this.state,\n      handler: nextState => this.handler(nextState),\n      countdownFrom: this.countdownFrom,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 7\n      }\n    }), /*#__PURE__*/React.createElement(ComponentsMain, {\n      currentState: this.state,\n      handler: nextState => this.handler(nextState),\n      captureScreenshot: () => this.captureScreenshot(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 7\n      }\n    }), /*#__PURE__*/React.createElement(Screenshots, {\n      currentState: this.state,\n      handler: nextState => this.handler(nextState),\n      ref: this.child,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 7\n      }\n    }), /*#__PURE__*/React.createElement(Diagnosis, {\n      currentState: this.state,\n      handler: nextState => this.handler(nextState),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 7\n      }\n    }));\n  }\n\n}\n\nfunction manageStates(state) {\n  var flags = {};\n\n  switch (state) {\n    case 'OnConnection':\n      flags = {\n        textMainBtn: \"Start\",\n        showStartBtn: true,\n        showCaptureBtn: true,\n        showVideoSelect: false,\n        showProgressBar: false,\n        showModalScreenshots: true,\n        //if requested\n        showModalDiagnosis: false,\n        disableBtnCapture: false,\n        streaming: false,\n        almostStreaming: false\n      };\n      break;\n\n    case 'Countdown':\n      flags = {\n        textMainBtn: \"Stop\",\n        showStartBtn: true,\n        showCaptureBtn: true,\n        showVideoSelect: false,\n        showProgressBar: true,\n        showModalScreenshots: false,\n        //if requested\n        showModalDiagnosis: false,\n        disableBtnCapture: true,\n        streaming: false,\n        almostStreaming: true,\n        timeStartPressed: Date.now()\n      };\n      break;\n\n    case 'Streaming':\n      flags = {\n        textMainBtn: \"Stop\",\n        showStartBtn: true,\n        showCaptureBtn: true,\n        showVideoSelect: false,\n        showProgressBar: true,\n        showModalScreenshots: false,\n        //if requested\n        showModalDiagnosis: false,\n        disableBtnCapture: false,\n        streaming: true,\n        almostStreaming: false\n      };\n      break;\n\n    case 'StopStream':\n      flags = {\n        textMainBtn: \"Start\",\n        showStartBtn: true,\n        showCaptureBtn: true,\n        showVideoSelect: false,\n        showProgressBar: true,\n        showModalScreenshots: false,\n        //if requested\n        showModalDiagnosis: false,\n        disableBtnCapture: true,\n        streaming: false,\n        almostStreaming: true\n      };\n      break;\n\n    case 'closeDiagnosis':\n      flags = {\n        showModalDiagnosis: false\n      };\n      break;\n\n    default:\n      console.log('State not defined');\n  }\n\n  return flags;\n}\n\nexport default InferenceUI;","map":{"version":3,"sources":["/home/paula/Documents/Practica/git/user_interface/src/components/InferenceUI/InferenceUI.js"],"names":["Container","Button","Modal","ModalHeader","ModalBody","ModalFooter","Progress","Spinner","React","useState","WebcamStream","Screenshots","Diagnosis","startStopFunction","btn","props","currentState","textMainBtn","localeCompare","handler","startFunction","almostStreaming","ComponentsMain","Component","constructor","state","render","showStartBtn","showCaptureBtn","disableBtnCapture","captureScreenshot","showProgressBar","InferenceUI","current","showVideoSelect","showModalScreenshots","showModalDiagnosis","streaming","timeStartPressed","triggerCaptureScreenshot","child","createRef","countdownFrom","nextState","setState","console","log","manageStates","flags","Date","now"],"mappings":"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","sourcesContent":["import './InferenceUI.css';\nimport {Container, Button, Modal, ModalHeader, ModalBody, ModalFooter, Progress, Spinner\n    } from 'reactstrap';\nimport React, {useState}from 'react';\n//import io from 'socket.io-client';\nimport WebcamStream from './WebcamStream.js'\nimport Screenshots from './Screenshots.js'\nimport Diagnosis from './Diagnosis.js'\n\nimport \"react-responsive-carousel/lib/styles/carousel.min.css\";\n\n\n\n\nfunction startStopFunction(btn){\n  if (btn.props.currentState.textMainBtn.localeCompare(\"Start\") === 0){\n\t\tbtn.props.handler(\"Countdown\");\n    startFunction(btn);\n    return;\n  }\n\tbtn.props.handler(\"StopStream\");\n  //stopFunction();\n}\nfunction startFunction(btn){\n\t\n\tbtn.props.currentState.almostStreaming = true;\n  //btn.props.timeStartPressed = Date.now();\n\n}\n\nclass ComponentsMain extends React.Component{\n\tconstructor(props){\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t}\n\t}\n  \n\n\trender(){\n\t\treturn(\n\t\t\t<div>\n\t\t\t{this.props.currentState.showStartBtn && <Button color=\"primary\" onClick={() => startStopFunction(this)}>{this.props.currentState.textMainBtn}</Button>}\n\t\t\t{this.props.currentState.showCaptureBtn && <Button color=\"primary\" disabled={this.props.currentState.disableBtnCapture}  onClick={() => this.props.captureScreenshot()}>{\"Capture Screenshot\"}</Button>}\n\t\t\t{this.props.currentState.showProgressBar && <Progress/>}\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nclass InferenceUI extends React.Component {\n    constructor(props){\n        super(props);\n        this.state = {\n      \t\tcurrent: \"SelectingSource\",\n\n\t\t\t\t\ttextMainBtn: \"Start\",\n\t\t\t\t\tshowStartBtn: false,\n\t\t\t\t\tshowCaptureBtn: false,\n\t\t\t\t\tshowVideoSelect: false,\n\t\t\t\t\tshowProgressBar: false,\n\t\t\t\t\tshowModalScreenshots: false, //if requested\n\t\t\t\t\tshowModalDiagnosis: false,\n\t\t\t\t\tdisableBtnCapture: false,\n\n          streaming: false,\n          almostStreaming: false,          \n\n\t\t\t\t\ttimeStartPressed: 0,\n\n\t\t\t\t\ttriggerCaptureScreenshot: false\n        }\n\t\t\tthis.child = React.createRef();\n\t\t\tthis.countdownFrom = 1;\n    }\n\n\t\tasync handler(nextState){\n\t\t\tawait this.setState({current: nextState});\n\t\t  console.log(\"estado en switch: \" + this.state.current);\n      await this.setState(manageStates(this.state.current));\n\t\t}\n\n\t\tcaptureScreenshot(){\n\t\t\tthis.child.current.captureScreenshot();\n\t\t}\n    render() {\n      return (\n\t\t\t\t\t<Container id=\"container\">\n\t\t\t\t\t\t\n\t\t\t\t\t\t<WebcamStream id=\"WebcamStream\" currentState={this.state} handler={(nextState)=>this.handler(nextState)} countdownFrom={this.countdownFrom}/>\n\t\t\t\t\t\t<ComponentsMain currentState={this.state} handler={(nextState)=>this.handler(nextState)} captureScreenshot={()=>this.captureScreenshot()}/> \n\t\t\t\t\t\t<Screenshots currentState={this.state} handler={(nextState)=>this.handler(nextState)} ref={this.child} />\n\t\t\t\t\t\t<Diagnosis currentState={this.state} handler={(nextState)=>this.handler(nextState)}/>\n\t\t\t\t  </Container>\n\t\n        );\n        \n    }\n}\n\nfunction manageStates(state){\n\tvar flags = {};\n\tswitch(state){\n\t\tcase 'OnConnection':\n\t\t  flags={\n\t\t\t\t  textMainBtn: \"Start\",\n\t\t\t\t  showStartBtn: true,\n\t\t\t\t  showCaptureBtn: true,\n\t\t\t\t  showVideoSelect: false,\n\t\t\t\t  showProgressBar: false,\n\t\t\t\t  showModalScreenshots: true, //if requested\n\t\t\t\t  showModalDiagnosis: false,\n\t\t\t\t  disableBtnCapture: false,\n  \n\t\t\t\t  streaming: false,\n\t\t\t\t  almostStreaming: false,          \n\t\t\t  };\n\t\t\t  break;\n\t\t  case 'Countdown':\n\t\t\t  flags={\n\t\t\t\t  textMainBtn: \"Stop\",\n\t\t\t\t  showStartBtn: true,\n\t\t\t\t  showCaptureBtn: true,\n\t\t\t\t  showVideoSelect: false,\n\t\t\t\t  showProgressBar: true,\n\t\t\t\t  showModalScreenshots: false, //if requested\n\t\t\t\t  showModalDiagnosis: false,\n\t\t\t\t  disableBtnCapture: true,\n  \n\t\t\t\t  streaming: false,\n\t\t\t\t  almostStreaming: true,          \n\t\t\t\t  \n\t\t\t\t  timeStartPressed: Date.now()\n\t\t\t\t  };\n\t\t\t\t  break;\n\t\t  case 'Streaming':\n\t\t\t  flags={\n\t\t\t\t  textMainBtn: \"Stop\",\n\t\t\t\t  showStartBtn: true,\n\t\t\t\t  showCaptureBtn: true,\n\t\t\t\t  showVideoSelect: false,\n\t\t\t\t  showProgressBar: true,\n\t\t\t\t  showModalScreenshots: false, //if requested\n\t\t\t\t  showModalDiagnosis: false,\n\t\t\t\t  disableBtnCapture: false,\n  \n\t\t\t\t  streaming: true,\n\t\t\t\t  almostStreaming: false,          \n  \n\t\t\t  };\n\t\t\t  break;\n\t\t  case 'StopStream':\n\t\t\t  flags={\n\t\t\t\t  textMainBtn: \"Start\",\n\t\t\t\t  showStartBtn: true,\n\t\t\t\t  showCaptureBtn: true,\n\t\t\t\t  showVideoSelect: false,\n\t\t\t\t  showProgressBar: true,\n\t\t\t\t  showModalScreenshots: false, //if requested\n\t\t\t\t  showModalDiagnosis: false,\n\t\t\t\t  disableBtnCapture: true,\n  \n\t\t\t\t  streaming: false,\n\t\t\t\t  almostStreaming: true,          \n\t\t\t  };\n\t\t\t  break;\n\t\t  case 'closeDiagnosis':\n\t\t\t  flags={\n\t\t\t\t  showModalDiagnosis: false\n\t\t\t  };\t\n\t\t\t  break;\n\t\t  default:\n\t\t\t  console.log('State not defined');\n  \n\t  }\n\treturn flags;\n  }\nexport default InferenceUI;\n"]},"metadata":{},"sourceType":"module"}