{"ast":null,"code":"var _jsxFileName = \"/home/paula/Documents/Practica/git/user_interface/src/components/InferenceUI/Diagnosis.js\";\nimport { Modal, ModalHeader, ModalBody, ModalFooter, Spinner, TabContent, TabPane, Nav, NavItem, NavLink, Card, Button, CardTitle, CardText, Row, Col } from 'reactstrap';\nimport React, { useState } from 'react';\nimport classnames from 'classnames';\n\nclass Diagnosis extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 4\n      }\n    }, this.props.currentState.showModalDiagnosis && /*#__PURE__*/React.createElement(ModalDiagnosis, {\n      handlerSuper: () => {\n        this.props.handler(\"OnConnection\");\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 52\n      }\n    }));\n  }\n\n}\n\nconst ModalDiagnosis = props => {\n  const {\n    className\n  } = props;\n  const [modal, setModal] = useState(true);\n\n  const toggle = () => {\n    setModal(!modal);\n    props.handlerSuper();\n  };\n\n  const [activeTab, setActiveTab] = useState('1');\n\n  const toggle2 = tab => {\n    if (activeTab !== tab) setActiveTab(tab);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Modal, {\n    isOpen: modal,\n    toggle: toggle,\n    className: className,\n    size: 'xl',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(ModalBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Nav, {\n    tabs: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(NavItem, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(NavLink, {\n    className: classnames({\n      active: activeTab === '1'\n    }),\n    onClick: () => {\n      toggle2('1');\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 11\n    }\n  }, \"Diagnostico\")), /*#__PURE__*/React.createElement(NavItem, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(NavLink, {\n    className: classnames({\n      active: activeTab === '2'\n    }),\n    onClick: () => {\n      toggle2('2');\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 11\n    }\n  }, \"Descargas\"))), /*#__PURE__*/React.createElement(Spinner, {\n    color: \"info\",\n    style: {\n      position: 'absolute',\n      margin: 'auto'\n    },\n    size: 'xl',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 6\n    }\n  }))));\n};\n/*\nconst Example = (props) => {\n\n\n  return (\n    <div>\n\n      <TabContent activeTab={activeTab}>\n        <TabPane tabId=\"1\">\n          <Row>\n            <Col sm=\"12\">\n              <h4>Tab 1 Contents</h4>\n            </Col>\n          </Row>\n        </TabPane>\n        <TabPane tabId=\"2\">\n          <Row>\n          </Row>\n        </TabPane>\n      </TabContent>\n    </div>\n  );\n}\n*/\n\n\nexport default Diagnosis;","map":{"version":3,"sources":["/home/paula/Documents/Practica/git/user_interface/src/components/InferenceUI/Diagnosis.js"],"names":["Modal","ModalHeader","ModalBody","ModalFooter","Spinner","TabContent","TabPane","Nav","NavItem","NavLink","Card","Button","CardTitle","CardText","Row","Col","React","useState","classnames","Diagnosis","Component","constructor","props","state","render","currentState","showModalDiagnosis","handler","ModalDiagnosis","className","modal","setModal","toggle","handlerSuper","activeTab","setActiveTab","toggle2","tab","active","position","margin"],"mappings":"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","sourcesContent":["import { Modal, ModalHeader, ModalBody, ModalFooter, Spinner,TabContent, TabPane, Nav, NavItem, NavLink, Card, Button, CardTitle, CardText, Row, Col } from 'reactstrap';\nimport React, {useState} from 'react';\nimport classnames from 'classnames';\nclass Diagnosis extends React.Component{\n\tconstructor(props){\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t}\n\t\t\n\t}\n\n\trender(){\n\t\treturn(\n\t\t\t<div>\n\t\t\t\t{this.props.currentState.showModalDiagnosis && <ModalDiagnosis handlerSuper={()=>{this.props.handler(\"OnConnection\")}}/>}\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nconst ModalDiagnosis= (props) => {\n  const {\n    className\n  } = props;\n\n  const [modal, setModal] = useState(true);\n\n  const toggle = () => {\n  \tsetModal(!modal);\n\t\tprops.handlerSuper();\n\t}\n  \n\tconst [activeTab, setActiveTab] = useState('1');\n  const toggle2 = tab => {\n    if(activeTab !== tab) setActiveTab(tab);\n  }\n  return (\n    <div>\n      <Modal isOpen={modal} toggle={toggle} className={className} size={'xl'}>\n\t\t\t\t<ModalBody>\n      <Nav tabs>\n        <NavItem>\n          <NavLink\n            className={classnames({ active: activeTab === '1' })}\n            onClick={() => { toggle2('1'); }}>\n            Diagnostico\n          </NavLink>\n        </NavItem>\n\n        <NavItem>\n          <NavLink\n            className={classnames({ active: activeTab === '2' })}\n            onClick={() => { toggle2('2'); }}\n          >\n            Descargas\n          </NavLink>\n        </NavItem>\n      </Nav>\n\t\t\t\t\t<Spinner color=\"info\" style={{ position: 'absolute',margin: 'auto' }} size={'xl'}/>\n        </ModalBody>\n      </Modal>\n    </div>\n  );\n}\n/*\nconst Example = (props) => {\n\n\n  return (\n    <div>\n\n      <TabContent activeTab={activeTab}>\n        <TabPane tabId=\"1\">\n          <Row>\n            <Col sm=\"12\">\n              <h4>Tab 1 Contents</h4>\n            </Col>\n          </Row>\n        </TabPane>\n        <TabPane tabId=\"2\">\n          <Row>\n          </Row>\n        </TabPane>\n      </TabContent>\n    </div>\n  );\n}\n*/\nexport default Diagnosis;\n"]},"metadata":{},"sourceType":"module"}