{"ast":null,"code":"var _jsxFileName = \"/home/paula/Documents/Practica/git/user_interface/src/components/InferenceUI/Diagnosis.js\";\nimport { Modal, ModalBody, Spinner, TabContent, TabPane, Nav, NavItem, NavLink, Card, CardImg, Button, CardText, Row, Col, Container, CardTitle } from 'reactstrap';\nimport React, { useState } from 'react';\nimport classnames from 'classnames';\nimport { render } from 'react-dom';\nimport Gallery from 'react-grid-gallery'; //import Screenshots from './Screenshots.js';\n\nclass Diagnosis extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n    this.selectVideoSrc = React.createRef();\n  }\n\n  downloadHandler(media) {\n    this.props.downloadHandler(media);\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 4\n      }\n    }, /*#__PURE__*/React.createElement(SideTabs, {\n      handlerSuper: () => {\n        this.props.handler(\"StopStream\");\n      },\n      thumbnail: this.props.thumbnail,\n      downloadHandler: media => this.downloadHandler(media),\n      screenshots: this.props.currentState.GallerySrc,\n      currentState: this.props.currentState,\n      superElement: this,\n      setStreamFromConfig: this.props.setStreamFromConfig,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 6\n      }\n    }));\n  }\n\n}\n\nconst SideTabs = props => {\n  const {\n    thumbnail,\n    getScreenshots,\n    downloadHandler,\n    screenshots,\n    currentState,\n    superElement,\n    setStreamFromConfig\n  } = props;\n  const [activeTab, setActiveTab] = useState('1');\n\n  const toggle = tab => {\n    if (activeTab !== tab) setActiveTab(tab);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Nav, {\n    tabs: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(NavItem, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(NavLink, {\n    disabled: !currentState.enableDiagnosisTab,\n    className: classnames({\n      active: activeTab === '1'\n    }),\n    onClick: () => {\n      toggle('1');\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 11\n    }\n  }, \"Diagnostico\")), /*#__PURE__*/React.createElement(NavItem, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(NavLink, {\n    className: classnames({\n      active: activeTab === '2'\n    }),\n    disabled: !currentState.enableDownloadsTab,\n    onClick: () => {\n      toggle('2');\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 11\n    }\n  }, \"Descargas\")), /*#__PURE__*/React.createElement(NavItem, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(NavLink, {\n    className: classnames({\n      active: activeTab === '3'\n    }),\n    disabled: !currentState.enableGalleryTab,\n    onClick: () => {\n      toggle('3');\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 11\n    }\n  }, \"Capturas\")), /*#__PURE__*/React.createElement(NavItem, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(NavLink, {\n    className: classnames({\n      active: activeTab === '4'\n    }),\n    disabled: !currentState.enableConfigTab,\n    onClick: () => {\n      toggle('4');\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 11\n    }\n  }, \"Configuraci\\xF3n\"))), /*#__PURE__*/React.createElement(TabContent, {\n    activeTab: activeTab,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(TabPane, {\n    tabId: \"1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    sm: \"12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(DiagnosisTab, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 15\n    }\n  })))), /*#__PURE__*/React.createElement(TabPane, {\n    tabId: \"2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(DownloadTab, {\n    thumbnail: thumbnail,\n    downloadHandler: downloadHandler,\n    screenshots: screenshots,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 6\n    }\n  })), /*#__PURE__*/React.createElement(TabPane, {\n    tabId: \"3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Gallery, {\n    images: screenshots,\n    rowHeight: \"80\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(TabPane, {\n    tabId: \"4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(ConfigTab, {\n    superElement: superElement,\n    setStreamFromConfig: setStreamFromConfig,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 6\n    }\n  }))));\n};\n\nfunction ConfigTab(props) {\n  console.log(props);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    id: \"videoSelectDiv\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    color: \"primary\",\n    onClick: () => {\n      listDevices(props);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 6\n    }\n  }, \"Refrescar\"), /*#__PURE__*/React.createElement(\"select\", {\n    ref: props.superElement.selectVideoSrc,\n    style: {\n      width: 300\n    },\n    id: \"videoSelectConf\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    color: \"primary\",\n    onClick: () => {\n      props.setStreamFromConfig.call();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 4\n    }\n  }, \"Ok\"));\n}\n\nfunction listDevices(props) {\n  console.log(props.superElement.selectVideoSrc);\n  var selectVideoSrc = document.getElementById(\"videoSelectConf\");\n  navigator.mediaDevices.enumerateDevices().then(deviceInfos => {\n    selectVideoSrc.innerHTML = '';\n    let count = 1;\n    deviceInfos.forEach(deviceInfo => {\n      const option = document.createElement('option');\n      option.value = deviceInfo.deviceId;\n\n      if (deviceInfo.kind === 'videoinput') {\n        option.text = deviceInfo.label || `Camera ${count++}`;\n        selectVideoSrc.appendChild(option);\n      }\n    });\n  });\n}\n\nfunction DiagnosisTab() {\n  return /*#__PURE__*/React.createElement(Spinner, {\n    color: \"info\",\n    style: {\n      position: 'absolute',\n      margin: 'auto'\n    },\n    size: 'xl',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 3\n    }\n  });\n}\n\nconst DownloadTab = props => {\n  const {\n    thumbnail,\n    downloadHandler,\n    screenshots\n  } = props;\n  let screenshotsIsEmpty = screenshots.length === 0 ? true : false;\n  return /*#__PURE__*/React.createElement(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 4\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    sm: \"6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 8\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    body: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(CardImg, {\n    top: true,\n    width: \"100%\",\n    src: thumbnail,\n    alt: \"thumbnail\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(CardText, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 13\n    }\n  }, \"Grabaci\\xF3n del examen.\"), /*#__PURE__*/React.createElement(Button, {\n    color: \"primary\",\n    onClick: () => {\n      downloadHandler(\"video\");\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 13\n    }\n  }, \" Descargar Video\"))), !screenshotsIsEmpty && /*#__PURE__*/React.createElement(Col, {\n    sm: \"6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    body: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(CardImg, {\n    top: true,\n    width: \"100%\",\n    src: screenshots[0].src,\n    alt: \"thumbnail\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(CardText, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 13\n    }\n  }, \"Capturas de Pantalla.\"), /*#__PURE__*/React.createElement(Button, {\n    color: \"primary\",\n    onClick: () => {\n      downloadHandler(\"screenshots\");\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 13\n    }\n  }, \"Descargar capturas\")))));\n};\n\nexport default Diagnosis;","map":{"version":3,"sources":["/home/paula/Documents/Practica/git/user_interface/src/components/InferenceUI/Diagnosis.js"],"names":["Modal","ModalBody","Spinner","TabContent","TabPane","Nav","NavItem","NavLink","Card","CardImg","Button","CardText","Row","Col","Container","CardTitle","React","useState","classnames","render","Gallery","Diagnosis","Component","constructor","props","state","selectVideoSrc","createRef","downloadHandler","media","handler","thumbnail","currentState","GallerySrc","setStreamFromConfig","SideTabs","getScreenshots","screenshots","superElement","activeTab","setActiveTab","toggle","tab","enableDiagnosisTab","active","enableDownloadsTab","enableGalleryTab","enableConfigTab","ConfigTab","console","log","listDevices","width","call","document","getElementById","navigator","mediaDevices","enumerateDevices","then","deviceInfos","innerHTML","count","forEach","deviceInfo","option","createElement","value","deviceId","kind","text","label","appendChild","DiagnosisTab","position","margin","DownloadTab","screenshotsIsEmpty","length","src"],"mappings":"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","sourcesContent":["import { Modal, ModalBody, Spinner,TabContent, TabPane, Nav, NavItem, NavLink, Card,CardImg, Button,  CardText, Row, Col, Container, CardTitle } from 'reactstrap';\nimport React, {useState} from 'react';\nimport classnames from 'classnames';\nimport { render } from 'react-dom';\nimport Gallery from 'react-grid-gallery';\n//import Screenshots from './Screenshots.js';\n\nclass Diagnosis extends React.Component{\n\tconstructor(props){\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t}\n\t\tthis.selectVideoSrc = React.createRef();\n\t}\n  downloadHandler(media){\n    this.props.downloadHandler(media);\n  }\n\t\n\trender(){\n\t\treturn(\n\t\t\t<div>\n\t\t\t\t\t<SideTabs handlerSuper={()=>{this.props.handler(\"StopStream\")}} \n                 \t\tthumbnail={this.props.thumbnail} \n                 \t\tdownloadHandler={(media)=> this.downloadHandler(media)}\n                 \t\tscreenshots={this.props.currentState.GallerySrc}\n                 \t\tcurrentState={this.props.currentState}\n\t\t\t\t\t\t\t\t\t\tsuperElement={this}\n\t\t\t\t\t\t\t\t\t\tsetStreamFromConfig={this.props.setStreamFromConfig}\n\t\t\t\t\t\t\t\t \n                 />\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nconst SideTabs = (props) => {\n  const {\n    thumbnail,\n    getScreenshots, \n    downloadHandler,\n    screenshots,\n    currentState,\n\t\tsuperElement,\n\t\tsetStreamFromConfig\n  } = props;\n  const [activeTab, setActiveTab] = useState('1');\n\n  const toggle = tab => {\n    if(activeTab !== tab) setActiveTab(tab);\n  }\n\n  \n  return (\n    <div>\n      <Nav tabs>\n        <NavItem>\n          <NavLink\n            disabled = {!currentState.enableDiagnosisTab}\n            className={classnames({ active: activeTab === '1' })}\n            onClick={() => { toggle('1'); }} >\n            Diagnostico\n          </NavLink>\n        </NavItem>\n        <NavItem>\n          <NavLink\n            className={classnames({ active: activeTab === '2' })}\n            disabled = {!currentState.enableDownloadsTab}\n            onClick={() => { toggle('2'); }}>\n            Descargas\n          </NavLink>\n        </NavItem>\n        <NavItem>\n          <NavLink\n            className={classnames({ active: activeTab === '3' })}\n            disabled = {!currentState.enableGalleryTab}\n            onClick={() => { toggle('3'); }}>\n            Capturas\n          </NavLink>\n        </NavItem>\n        <NavItem>\n          <NavLink\n            className={classnames({ active: activeTab === '4' })}\n            disabled = {!currentState.enableConfigTab}\n            onClick={() => { toggle('4'); }}>\n           Configuración \n          </NavLink>\n        </NavItem>\n      </Nav>\n\n      <TabContent activeTab={activeTab}>\n        <TabPane tabId=\"1\">\n          <Row>\n            <Col sm=\"12\">\n              <DiagnosisTab />\n            </Col>\n          </Row>\n        </TabPane>\n        <TabPane tabId=\"2\">\n\t\t\t\t\t<DownloadTab thumbnail={thumbnail} downloadHandler={downloadHandler} screenshots={screenshots}/>\n        </TabPane>\n        <TabPane tabId=\"3\">\n          <Gallery images={screenshots} rowHeight=\"80\"/>\n        </TabPane>\n        <TabPane tabId=\"4\">\n\t\t\t\t\t<ConfigTab superElement={superElement} setStreamFromConfig={setStreamFromConfig}/>\n        </TabPane>\n      </TabContent>\n    </div>\n  );\n}\n\nfunction ConfigTab(props){\n\tconsole.log(props);\n  return(\n\t\t<div id=\"videoSelectDiv\">\n    \t<Button color ='primary'\n              onClick={()=>{listDevices(props);}}\n    \t\t      >Refrescar</Button>\n\t\t  <select ref={props.superElement.selectVideoSrc}\n\t\t\t\t\t\t\tstyle={{width: 300}}\n\t\t\t\t\t\t\tid=\"videoSelectConf\"/>\n\t\t\t<Button color='primary'\n              onClick={()=>{props.setStreamFromConfig.call()}}\n      >Ok</Button>\n\t\t</div>\n  );\n}\nfunction listDevices(props){\n\tconsole.log(props.superElement.selectVideoSrc);\n\tvar selectVideoSrc = document.getElementById(\"videoSelectConf\");\n  navigator.mediaDevices.enumerateDevices()\n  .then((deviceInfos) => {\n    selectVideoSrc.innerHTML = '';\n    let count = 1;\n    deviceInfos.forEach( deviceInfo => {\n      const option = document.createElement('option');\n      option.value = deviceInfo.deviceId;\n      if (deviceInfo.kind === 'videoinput') {\n        option.text = deviceInfo.label || `Camera ${count++}`;\n        selectVideoSrc.appendChild(option);\n      }\n    });\n  });\n\n}\n\nfunction DiagnosisTab(){\n\treturn(\n\t\t<Spinner color=\"info\" style={{position:'absolute',margin:'auto'}} size={'xl'}/>\n\t);\n}\n\nconst DownloadTab = (props) => {\n  const{\n    thumbnail,\n    downloadHandler,\n    screenshots\n  }=props;\n\n  let  screenshotsIsEmpty = (screenshots.length === 0)? true:false;\n\treturn(\n\t\t<Container>\n\t\t\t<Row>\n      \t<Col sm=\"6\">\n          <Card body>\n            <CardImg top width=\"100%\" src= {thumbnail} alt=\"thumbnail\" />\n            <CardText>Grabación del examen.</CardText>\n            <Button color='primary' onClick={()=>{downloadHandler(\"video\")}}> Descargar Video</Button>\n          </Card>\n        </Col>\n        {!screenshotsIsEmpty &&\n        <Col sm=\"6\">\n          <Card body>\n            <CardImg top width=\"100%\" src= {screenshots[0].src} alt=\"thumbnail\" />\n            <CardText>Capturas de Pantalla.</CardText>\n            <Button color='primary' onClick={()=>{downloadHandler(\"screenshots\")}}>Descargar capturas</Button>\n          </Card>\n        </Col>\n        }\n     </Row>\n\t\t</Container>\n\t);\n}\nexport default Diagnosis;\n"]},"metadata":{},"sourceType":"module"}