{"ast":null,"code":"var _jsxFileName = \"/home/paula/Documents/Practica/git/user_interface/src/components/InferenceUI/InferenceUI.js\";\nimport './InferenceUI.css';\nimport React from 'react';\nimport WebcamStream from './WebcamStream/WebcamStream.js';\nimport SidePanel from './SidePanel/SidePanel.js';\nimport { manageStates } from './functions.js';\n\nclass InferenceUI extends React.Component {\n  constructor(props) {\n    super();\n    this.state = {\n      stateName: \"Idle\",\n      // Render canvas or video\n      renderCanvas: true,\n      // Canvas Message\n      canvasMessage: \"\",\n      canvasAlert: false,\n      // Progress Bar props\n      showProgressBar: false,\n      progress: 0,\n      // Show Spinner\n      showSpinner: false,\n      // Button state\n      textCtrlBtn: \"Empezar\",\n      enableCtrlBtn: true,\n      enableCaptureBtn: false,\n      // Side Panel\n      enableDownloadsTab: false,\n      enableDiagnosisTab: false,\n      enableConfigTab: true,\n      enableGalleryTab: false,\n      GallerySrcLength: 0,\n      isVideoLoading: true,\n      hideSidePanel: false,\n      tabOn: \"1\",\n      fullScreen: false,\n      isDiagnosisReady: false\n    };\n    this.gallerySrc = new Map();\n    this.galleryIndxShowing = [0, 0, 0];\n    this.childWebcamStream = React.createRef();\n    this.childDiagnosis = React.createRef();\n    this.countdownFrom = 5;\n    this.alertTimeout = null;\n    this.videoThumbnail = null;\n    this.canvasPreview = React.createRef();\n  } // En caso de que venga de review y vaya a idle, limpiar las variables.\n\n\n  async stateHandler(nextState) {\n    await this.setState({\n      stateName: nextState\n    });\n    console.log(\"Estado: \" + this.state.stateName);\n    await this.setState(manageStates(this.state.stateName));\n  }\n\n  downloadHandler(media) {\n    if (media.localeCompare(\"video\") === 0) {\n      this.childWebcamStream.current.downloadVideo();\n    } else if (media.localeCompare(\"screenshots\") === 0) {\n      this.childWebcamStream.current.downloadScreenshots();\n    } else if (media.localeCompare(\"all\") === 0) {\n      this.childWebcamStream.current.downloadAll();\n    }\n  }\n\n  async setGalleryIndxShowing(newIndxShowing, indx) {\n    let auxArr = [];\n    auxArr[0] = this.state.GalleryIndxShowing[0];\n    auxArr[1] = this.state.GalleryIndxShowing[1];\n    auxArr[2] = this.state.GalleryIndxShowing[2];\n    await sleep(500);\n    auxArr[indx] = newIndxShowing;\n    await sleep(500);\n    this.setState({\n      GalleryIndxShowing: auxArr\n    }, () => {\n      console.log('inSGIS');\n      console.log(this.state.GalleryIndxShowing);\n    });\n  }\n  /*\n  this.setState(\n    {GalleryIndxShowing: newIndxShowing},\n    ()=>{console.log('inSGIS');console.log(this.state.GalleryIndxShowing)}\n    );\n  }\n  */\n\n\n  setFullScreen(value) {\n    this.setState({\n      fullScreen: value\n    });\n  }\n\n  setTabOn(value) {\n    this.setState({\n      tabOn: value\n    });\n  }\n\n  setHideSidePanel(value) {\n    this.setState({\n      hideSidePanel: value\n    });\n  }\n\n  setIsVideoLoading(value) {\n    this.setState({\n      isVideoLoading: value\n    });\n  }\n\n  setCountdownFrom(value) {\n    this.countdownFrom = value;\n  }\n\n  setIsDiagnosisReady(value) {\n    this.setState({\n      isDiagnosisReady: value\n    });\n  }\n\n  async setScreenshots(data) {\n    let newId = this.state.GallerySrcLength + 1;\n    await this.gallerySrc.set(newId, data);\n    this.setState({\n      GallerySrcLength: this.state.GallerySrcLength + 1\n    });\n    console.log(this.gallerySrc);\n    console.log(this.state.GallerySrcLength);\n    /*\n    this.setState(\n      {GallerySrc: this.state.GallerySrc.concat(data)},\n      ()=>{this.childDiagnosis.current.setGallery2()}\n      );\n      */\n  }\n\n  componentDidMount() {\n    this.childDiagnosis.current.listDevices();\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      id: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 4\n      }\n    }, /*#__PURE__*/React.createElement(WebcamStream, {\n      currentState: this.state,\n      canvasPreview: this.canvasPreview,\n      stateHandler: nextState => this.stateHandler(nextState),\n      countdownFrom: this.countdownFrom,\n      ref: this.childWebcamStream,\n      setScreenshots: data => {\n        this.setScreenshots(data);\n      },\n      setFullScreen: value => this.setFullScreen(value),\n      setTabOn: value => this.setTabOn(value),\n      setHideSidePanel: value => this.setHideSidePanel(value),\n      setIsDiagnosisReady: value => this.setIsDiagnosisReady(value),\n      setIsVideoLoading: value => this.setIsVideoLoading(value),\n      setCountdownFrom: value => this.setCountdownFrom(value),\n      placeProgressBar: flag => placeProgressBar(flag),\n      setGallery: () => this.setGallery(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 10\n      }\n    }), /*#__PURE__*/React.createElement(SidePanel, {\n      currentState: this.state,\n      setStreamFromConfig: () => {\n        this.childWebcamStream.current.setStream();\n      },\n      ref: this.childDiagnosis,\n      downloadHandler: media => this.downloadHandler(media),\n      setTabOn: value => this.setState({\n        tabOn: value\n      }),\n      setHideSidePanel: value => this.setHideSidePanel(value),\n      mirror: way => {\n        this.childWebcamStream.current.mirror(way);\n      },\n      setCountdownFrom: value => this.setCountdownFrom(value),\n      countdownFrom: this.countdownFrom,\n      placeProgressBar: flag => placeProgressBar(flag),\n      setGalleryIndxShowing: (newIndxShowing, indx) => this.setGalleryIndxShowing(newIndxShowing, indx),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 10\n      }\n    }));\n  }\n\n}\n\nfunction sleep(ms) {\n  return new Promise(resolve => setTimeout(resolve, ms));\n}\n\nfunction placeProgressBar(flag) {\n  let progress = document.getElementById(\"progressBar\");\n  let canvas = document.getElementById(\"canvasPreview\");\n  let btns = document.getElementById(\"buttons\");\n\n  if (progress) {\n    progress.style.width = canvas.clientWidth * 100 / window.innerWidth + \"vw\";\n\n    if (flag.localeCompare(\"btnsOnCanvas\") === 0) {\n      progress.style.top = canvas.clientHeight * 100 / window.innerHeight + \"vh\";\n      btns.style.top = (canvas.clientHeight - btns.clientHeight) * 100 / window.innerHeight + \"vh\";\n      progress.style.marginLeft = (100 - canvas.clientWidth * 100 / window.innerWidth) / 2 + \"vw\";\n    } else if (flag.localeCompare(\"btnsBelowCanvas\") === 0) {\n      btns.style.top = canvas.clientHeight * 100 / window.innerHeight + \"vh\";\n      progress.style.marginLeft = \"2.5vw\";\n      progress.style.top = (canvas.clientHeight + btns.clientHeight) * 100 / window.innerHeight + \"vh\";\n    } else if (flag.localeCompare(\"btnsFS\") === 0) {\n      //console.log(\"33\");\n      progress.style.width = canvas.clientWidth * 100 / window.innerWidth + \"vw\";\n      btns.style.top = (canvas.clientHeight - btns.clientHeight) * 100 / window.innerHeight + \"vh\";\n      progress.style.marginLeft = \"12%\";\n      progress.style.top = \"98vh\";\n    }\n  }\n}\n\nexport default InferenceUI;","map":{"version":3,"sources":["/home/paula/Documents/Practica/git/user_interface/src/components/InferenceUI/InferenceUI.js"],"names":["React","WebcamStream","SidePanel","manageStates","InferenceUI","Component","constructor","props","state","stateName","renderCanvas","canvasMessage","canvasAlert","showProgressBar","progress","showSpinner","textCtrlBtn","enableCtrlBtn","enableCaptureBtn","enableDownloadsTab","enableDiagnosisTab","enableConfigTab","enableGalleryTab","GallerySrcLength","isVideoLoading","hideSidePanel","tabOn","fullScreen","isDiagnosisReady","gallerySrc","Map","galleryIndxShowing","childWebcamStream","createRef","childDiagnosis","countdownFrom","alertTimeout","videoThumbnail","canvasPreview","stateHandler","nextState","setState","console","log","downloadHandler","media","localeCompare","current","downloadVideo","downloadScreenshots","downloadAll","setGalleryIndxShowing","newIndxShowing","indx","auxArr","GalleryIndxShowing","sleep","setFullScreen","value","setTabOn","setHideSidePanel","setIsVideoLoading","setCountdownFrom","setIsDiagnosisReady","setScreenshots","data","newId","set","componentDidMount","listDevices","render","flag","placeProgressBar","setGallery","setStream","way","mirror","ms","Promise","resolve","setTimeout","document","getElementById","canvas","btns","style","width","clientWidth","window","innerWidth","top","clientHeight","innerHeight","marginLeft"],"mappings":"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","sourcesContent":["import './InferenceUI.css';\nimport React from 'react';\nimport WebcamStream from './WebcamStream/WebcamStream.js'\nimport SidePanel from './SidePanel/SidePanel.js'\nimport {manageStates} from './functions.js'\n\n\nclass InferenceUI extends React.Component {\n  \n  constructor(props){\n    super();\n    this.state = {\n      stateName: \"Idle\",\n\n      // Render canvas or video\n      renderCanvas: true,\n      // Canvas Message\n      canvasMessage: \"\",\n      canvasAlert: false,\n\n      // Progress Bar props\n      showProgressBar: false,\n      progress: 0,\n      // Show Spinner\n      showSpinner: false,\n      // Button state\n      textCtrlBtn: \"Empezar\",\n      enableCtrlBtn: true,\n      enableCaptureBtn: false,\n\n      // Side Panel\n      enableDownloadsTab: false,\n      enableDiagnosisTab: false,\n      enableConfigTab: true,\n      enableGalleryTab: false,\n      GallerySrcLength: 0,\n\n      isVideoLoading: true,\n      hideSidePanel: false,\n\n      tabOn: \"1\",\n      fullScreen: false,\n\n      isDiagnosisReady: false\n    }\n    this.gallerySrc = new Map();\n    this.galleryIndxShowing = [0,0,0];\n    this.childWebcamStream = React.createRef();\n    this.childDiagnosis = React.createRef();\n    this.countdownFrom = 5;\n    this.alertTimeout = null;\n    this.videoThumbnail = null;\n    this.canvasPreview = React.createRef();\n  }\n\n  // En caso de que venga de review y vaya a idle, limpiar las variables.\n  async stateHandler(nextState){\n    await this.setState({stateName: nextState});\n    console.log(\"Estado: \" + this.state.stateName);\n    await this.setState(manageStates(this.state.stateName));\n  }\n  \n  downloadHandler(media){\n    if(media.localeCompare(\"video\")===0){\n      this.childWebcamStream.current.downloadVideo();\n    }\n    else if(media.localeCompare(\"screenshots\")===0){\n      this.childWebcamStream.current.downloadScreenshots();\n    }\n    else if(media.localeCompare(\"all\")===0){\n      this.childWebcamStream.current.downloadAll();\n    }\n  }\n\n  async setGalleryIndxShowing(newIndxShowing, indx){\n    let auxArr =[];\n    auxArr[0] = this.state.GalleryIndxShowing[0];\n    auxArr[1] = this.state.GalleryIndxShowing[1];\n    auxArr[2] = this.state.GalleryIndxShowing[2];\n    await sleep(500);\n    auxArr[indx] = newIndxShowing;\n    await sleep(500);\n    \n    this.setState(\n      {GalleryIndxShowing: auxArr},\n      ()=>{console.log('inSGIS');console.log(this.state.GalleryIndxShowing)}\n      );\n    }\n    \n    /*\n    this.setState(\n      {GalleryIndxShowing: newIndxShowing},\n      ()=>{console.log('inSGIS');console.log(this.state.GalleryIndxShowing)}\n      );\n  }\n  */\n  setFullScreen(value){\n    this.setState({fullScreen: value});\n  }\n  setTabOn(value){\n    this.setState({tabOn: value});\n  }\n  setHideSidePanel(value){\n    this.setState({hideSidePanel: value});\n  }\n  setIsVideoLoading(value){\n    this.setState({isVideoLoading: value});\n  }\n  setCountdownFrom(value){\n    this.countdownFrom = value;\n  }\n  setIsDiagnosisReady(value){\n    this.setState({isDiagnosisReady: value});\n  }\n  async setScreenshots(data){\n    let newId =    this.state.GallerySrcLength+1;\n    await this.gallerySrc.set(newId, data);\n    this.setState({GallerySrcLength: this.state.GallerySrcLength +1 });\n    console.log(this.gallerySrc);\n    console.log(this.state.GallerySrcLength);\n    /*\n    this.setState(\n      {GallerySrc: this.state.GallerySrc.concat(data)},\n      ()=>{this.childDiagnosis.current.setGallery2()}\n      );\n      */\n  }\n\n  componentDidMount(){\n    this.childDiagnosis.current.listDevices();\n  }\n\n\n  render() {\n    return (\n\t\t\t<div id=\"container\">\n         <WebcamStream currentState={this.state} \n                       canvasPreview={this.canvasPreview}\n                       stateHandler={(nextState)=>this.stateHandler(nextState)} \n                       countdownFrom={this.countdownFrom} \n                       ref={this.childWebcamStream}\n                       setScreenshots={(data)=>{this.setScreenshots(data)}}\n                       setFullScreen={(value)=>this.setFullScreen(value)}\n                       setTabOn={(value)=>this.setTabOn(value)}\n                       setHideSidePanel={(value)=>this.setHideSidePanel(value)}\n                       setIsDiagnosisReady ={(value)=>this.setIsDiagnosisReady(value)}\n                       setIsVideoLoading={(value)=>this.setIsVideoLoading(value)}\n                       setCountdownFrom={(value)=>this.setCountdownFrom(value)}\n\t\t\t\t \t\t\t\t\t\t\t placeProgressBar={(flag)=>placeProgressBar(flag)}\n                       setGallery={()=>this.setGallery()}\n                      \n\t\t\t\t />\n         <SidePanel    currentState={this.state}\n                       setStreamFromConfig={()=>{this.childWebcamStream.current.setStream();}}\n                       ref={this.childDiagnosis}\n                       downloadHandler={(media)=>this.downloadHandler(media)}\n                       setTabOn={(value)=>this.setState({tabOn: value})}\n                       setHideSidePanel={(value)=>this.setHideSidePanel(value)}\n                       mirror={(way)=>{this.childWebcamStream.current.mirror(way)}}\n                       setCountdownFrom={(value)=>this.setCountdownFrom(value)}\n                       countdownFrom={this.countdownFrom} \n\t\t\t\t \t\t\t\t\t\t   placeProgressBar={(flag)=>placeProgressBar(flag)}\n                       setGalleryIndxShowing={(newIndxShowing, indx)=>this.setGalleryIndxShowing(newIndxShowing,indx)}\n         />\n\n      </div>\n\t\n      );\n        \n    }\n}\nfunction sleep(ms) {\n  return new Promise(resolve => setTimeout(resolve, ms));\n}\n\nfunction placeProgressBar(flag){\n  let progress = document.getElementById(\"progressBar\")\n  let canvas = document.getElementById(\"canvasPreview\");\n  let btns = document.getElementById(\"buttons\");\n  if(progress){\n    progress.style.width = canvas.clientWidth*100/window.innerWidth+\"vw\";\n\t\tif(flag.localeCompare(\"btnsOnCanvas\")===0){\n    \tprogress.style.top = (canvas.clientHeight)*100/window.innerHeight + \"vh\";\n    \tbtns.style.top = (canvas.clientHeight - btns.clientHeight)*100/window.innerHeight + \"vh\";\n    \tprogress.style.marginLeft = (100-(canvas.clientWidth*100/window.innerWidth))/2 + \"vw\";\n\t\t}\n\t\telse if(flag.localeCompare(\"btnsBelowCanvas\")===0){\n    \tbtns.style.top = (canvas.clientHeight)*100/window.innerHeight + \"vh\";\n    \tprogress.style.marginLeft = \"2.5vw\";\n    \tprogress.style.top = (canvas.clientHeight+btns.clientHeight)*100/window.innerHeight + \"vh\";\n\t\t}\n\t\telse if(flag.localeCompare(\"btnsFS\")===0){\n      //console.log(\"33\");\n      progress.style.width = canvas.clientWidth*100/window.innerWidth+\"vw\";\n    \tbtns.style.top = (canvas.clientHeight-btns.clientHeight)*100/window.innerHeight + \"vh\";\n    \tprogress.style.marginLeft = \"12%\";\n    \tprogress.style.top =  \"98vh\";\n\t\t}\n  }\n}\n\nexport default InferenceUI;\n"]},"metadata":{},"sourceType":"module"}