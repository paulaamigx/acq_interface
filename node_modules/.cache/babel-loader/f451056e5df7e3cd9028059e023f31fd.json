{"ast":null,"code":"var _jsxFileName = \"/home/paula/Documents/Practica/git/user_interface/src/components/InferenceUI/WebcamStream/WebcamStream.js\";\nimport './WebcamStream.css';\nimport React from 'react';\nimport { Alert, Progress } from 'reactstrap';\nimport \"@fortawesome/fontawesome-free/css/all.css\";\nimport { handleDataAvailable, setProgressBarColor, ctrlBtnFunction, countdown, downloadScreenshots, downloadVideo, downloadAll, captureScreenshot, mirror, fullScreen } from './functions.js'; // Agregar variable para almacenar la hora en que se apretó el start.\n// Administrar el fullscreen desde acá ahora.\n\nclass WebcamStream extends React.Component {\n  constructor(props) {\n    super();\n    this.state = {};\n    this.videoTag = React.createRef();\n    this.tick = this.tick.bind(this);\n    this.timeStartPressed = null;\n    this.mediaRecorder = null;\n    this.recordedChunks = [];\n    this.videoRecorded = null;\n    this.mirrorScale = [1, 1];\n    this.mirrorTranslate = [0, 0];\n    this.canvasHeight = 0;\n    this.canvasWidth = 0; //Dummy mientras usamos setTimeout para pasar de gecon a exam\n\n    this.timeout = null;\n    this.timeout2 = null;\n    this.videoSrc = null;\n  }\n\n  setStream() {\n    var selectVideoSrc = document.getElementById(\"videoSelectConf\");\n\n    if (this.videoSrc) {\n      try {\n        selectVideoSrc.value = this.videoSrc;\n      } catch (e) {\n        console.log(e);\n      }\n    } // Falta cerrar el stream anterior antes de abrir uno nuevo.\n\n\n    navigator.mediaDevices.getUserMedia({\n      video: {\n        deviceId: selectVideoSrc ? {\n          exact: selectVideoSrc.value\n        } : undefined,\n        facingMode: \"enviroment\"\n      }\n    }).then(stream => {\n      this.videoTag.current.srcObject = stream;\n      requestAnimationFrame(this.tick);\n      window.stream = stream;\n    });\n  }\n\n  tick() {\n    const video = this.videoTag.current;\n    let countdownCurrent;\n    let countdownNext;\n    const checkVideoState = setInterval(() => {\n      if (video.readyState === video.HAVE_ENOUGH_DATA) {\n        clearInterval(checkVideoState);\n        this.props.setIsVideoLoading(false);\n        var canvasPreviewElement = this.props.canvasPreview.current;\n\n        if (canvasPreviewElement) {\n          var canvasPreview = canvasPreviewElement.getContext(\"2d\");\n          canvasPreviewElement.height = video.videoHeight;\n          canvasPreviewElement.width = video.videoWidth;\n          canvasPreview.translate(this.mirrorTranslate[0], this.mirrorTranslate[1]);\n          canvasPreview.scale(this.mirrorScale[0], this.mirrorScale[1]);\n\n          if (this.props.currentState.stateName.localeCompare(\"Countdown\") === 0) {\n            canvasPreview.filter = \"brightness(50%)\";\n          }\n\n          canvasPreview.drawImage(video, 0, 0, canvasPreviewElement.width, canvasPreviewElement.height);\n\n          if (this.props.currentState.stateName.localeCompare(\"Countdown\") === 0) {\n            countdown(canvasPreviewElement, this, countdownCurrent, countdownNext);\n          }\n\n          requestAnimationFrame(this.tick);\n        }\n      }\n    }, 50);\n  }\n\n  startRecording() {\n    var options = {\n      mimeType: \"video/webm;codecs=vp8\"\n    };\n    this.mediaRecorder = new MediaRecorder(this.props.canvasPreview.current.captureStream(), options);\n    this.mediaRecorder.ondataavailable = handleDataAvailable(this);\n    this.mediaRecorder.start();\n  }\n\n  stopRecording() {\n    this.mediaRecorder.stop();\n  }\n\n  downloadVideo() {\n    downloadVideo(this);\n  }\n\n  downloadAll() {\n    downloadAll(this);\n  }\n\n  captureScreenshot() {\n    captureScreenshot(this);\n  }\n\n  downloadScreenshots() {\n    downloadScreenshots(this);\n  }\n\n  mirror(way) {\n    mirror(this, way);\n  }\n\n  render() {\n    const isVideoLoading = this.props.currentState.isVideoLoading;\n    const colorScreenshotBtn = this.props.currentState.enableCaptureBtn ? \"white\" : \"grey\";\n    const dispProgress = this.props.currentState.showProgressBar ? \"block\" : \"none\";\n\n    if (this.props.currentState.showProgressBar) {\n      if (this.props.currentState.hideSidePanel) {\n        this.props.placeProgressBar(\"btnsOnCanvas\");\n        console.log(\"llll\");\n      } else if (this.props.currentState.fullScreen) {\n        this.props.placeProgressBar(\"btnsFS\");\n      } else {\n        this.props.placeProgressBar(\"btnsBelowCanvas\");\n      }\n    }\n\n    if (!isVideoLoading && !this.props.currentState.hideSidePanel && !this.props.currentState.fullScreen) {\n      let btns = document.getElementById(\"buttons\");\n\n      if (btns) {\n        btns.style.top = 50 * 3 / 4 + \"vw\";\n      }\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      id: \"WebcamStream_Wrapper\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"script\", {\n      src: \"adapter.js\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"video\", {\n      ref: this.videoTag,\n      autoPlay: true,\n      id: \"video\",\n      style: {\n        display: \"none\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 9\n      }\n    }), !isVideoLoading && /*#__PURE__*/React.createElement(\"div\", {\n      id: \"canvasDiv\",\n      className: \"canvasRendered\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 11\n      }\n    }, this.props.currentState.canvasAlert && /*#__PURE__*/React.createElement(\"div\", {\n      id: \"alert\",\n      style: {\n        position: 'absolute',\n        zIndex: 2\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Alert, {\n      color: \"warning\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 17\n      }\n    }, \"Verifique el enfoque del dispositivo.\")), this.props.currentState.stateName.localeCompare(\"GetCon\") === 0 && /*#__PURE__*/React.createElement(\"div\", {\n      id: \"alert\",\n      style: {\n        position: 'absolute',\n        zIndex: 2\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Alert, {\n      color: \"info\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 17\n      }\n    }, \"Estableciendo conexi\\xF3n con el servidor.\")), this.props.currentState.renderCanvas && /*#__PURE__*/React.createElement(\"canvas\", {\n      ref: this.props.canvasPreview,\n      id: \"canvasPreview\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 17\n      }\n    }), this.props.currentState.stateName.localeCompare(\"Countdown\") === 0 && /*#__PURE__*/React.createElement(\"canvas\", {\n      id: \"canvasCountdown\",\n      width: \"1000\",\n      height: \"750\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 15\n      }\n    }), this.props.currentState.renderCanvas && /*#__PURE__*/React.createElement(\"div\", {\n      id: \"buttons\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"table\", {\n      style: {\n        width: \"100%\",\n        height: \"100%\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"tbody\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      colSpan: \"1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      id: \"screenshotBtn\",\n      onClick: () => {\n        if (this.props.currentState.enableCaptureBtn) {\n          this.captureScreenshot();\n        }\n      },\n      style: {\n        color: colorScreenshotBtn\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      className: \"fas fa-camera\",\n      style: {\n        margin: \"0px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 27\n      }\n    }))), /*#__PURE__*/React.createElement(\"td\", {\n      colSpan: \"10\",\n      style: {\n        textAlign: \"center\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 21\n      }\n    }, this.props.currentState.enableCtrlBtn && /*#__PURE__*/React.createElement(\"div\", {\n      id: \"ctrlBtn\",\n      onClick: () => {\n        ctrlBtnFunction(this);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 21\n      }\n    }, this.props.currentState.textCtrlBtn), !this.props.currentState.enableCtrlBtn && /*#__PURE__*/React.createElement(\"div\", {\n      id: \"ctrlBtnDisabled\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 21\n      }\n    }, this.props.currentState.textCtrlBtn)), /*#__PURE__*/React.createElement(\"td\", {\n      colSpan: \"1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      id: \"fullScreenBtn\",\n      onClick: () => fullScreen(this),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 21\n      }\n    }, !this.props.currentState.fullScreen && /*#__PURE__*/React.createElement(\"i\", {\n      className: \"fas fa-expand\",\n      style: {\n        margin: \"0px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 66\n      }\n    }), this.props.currentState.fullScreen && /*#__PURE__*/React.createElement(\"i\", {\n      className: \"fas fa-compress\",\n      style: {\n        margin: \"0px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 66\n      }\n    })))))))), isVideoLoading && /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"canvas\", {\n      id: \"canvasMessage\",\n      className: \"canvasRendered\",\n      width: \"1000\",\n      height: \"750\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 13\n      }\n    })), !this.props.currentState.renderCanvas && /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"video\", {\n      id: \"recordedVideoElement\",\n      controls: true,\n      srcObject: null,\n      src: null,\n      className: \"canvasRendered\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      id: \"ctrlStartOver\",\n      onClick: () => {\n        ctrlBtnFunction(this);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 13\n      }\n    }, this.props.currentState.textCtrlBtn)), /*#__PURE__*/React.createElement(\"div\", {\n      id: \"progressBar\",\n      style: {\n        display: dispProgress\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 243,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Progress, {\n      style: {\n        width: \"100%\",\n        height: \"100%\"\n      },\n      value: this.props.currentState.progress,\n      color: setProgressBarColor(this),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 11\n      }\n    })));\n  }\n\n}\n\nexport default WebcamStream;","map":{"version":3,"sources":["/home/paula/Documents/Practica/git/user_interface/src/components/InferenceUI/WebcamStream/WebcamStream.js"],"names":["React","Alert","Progress","handleDataAvailable","setProgressBarColor","ctrlBtnFunction","countdown","downloadScreenshots","downloadVideo","downloadAll","captureScreenshot","mirror","fullScreen","WebcamStream","Component","constructor","props","state","videoTag","createRef","tick","bind","timeStartPressed","mediaRecorder","recordedChunks","videoRecorded","mirrorScale","mirrorTranslate","canvasHeight","canvasWidth","timeout","timeout2","videoSrc","setStream","selectVideoSrc","document","getElementById","value","e","console","log","navigator","mediaDevices","getUserMedia","video","deviceId","exact","undefined","facingMode","then","stream","current","srcObject","requestAnimationFrame","window","countdownCurrent","countdownNext","checkVideoState","setInterval","readyState","HAVE_ENOUGH_DATA","clearInterval","setIsVideoLoading","canvasPreviewElement","canvasPreview","getContext","height","videoHeight","width","videoWidth","translate","scale","currentState","stateName","localeCompare","filter","drawImage","startRecording","options","mimeType","MediaRecorder","captureStream","ondataavailable","start","stopRecording","stop","way","render","isVideoLoading","colorScreenshotBtn","enableCaptureBtn","dispProgress","showProgressBar","hideSidePanel","placeProgressBar","btns","style","top","display","canvasAlert","position","zIndex","renderCanvas","color","margin","textAlign","enableCtrlBtn","textCtrlBtn","progress"],"mappings":"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","sourcesContent":["import './WebcamStream.css'\nimport React from 'react';\nimport {Alert, Progress  } from 'reactstrap';\n\nimport \"@fortawesome/fontawesome-free/css/all.css\"\n\nimport {handleDataAvailable, setProgressBarColor, ctrlBtnFunction, countdown, \n        downloadScreenshots, downloadVideo, downloadAll, captureScreenshot, mirror,\n        fullScreen} from './functions.js';\n\n// Agregar variable para almacenar la hora en que se apretó el start.\n// Administrar el fullscreen desde acá ahora.\nclass WebcamStream extends React.Component {\n  constructor(props) {\n    super();\n    this.state = {\n    };\n\n    this.videoTag = React.createRef();\n    this.tick = this.tick.bind(this);\n\n    this.timeStartPressed = null;\n\n    this.mediaRecorder = null;\n    this.recordedChunks= [];\n\t  this.videoRecorded = null;\n\n    this.mirrorScale = [1,1];\n    this.mirrorTranslate = [0,0];\n\n    this.canvasHeight = 0;\n    this.canvasWidth = 0;\n    \n    //Dummy mientras usamos setTimeout para pasar de gecon a exam\n    this.timeout = null;\n    this.timeout2 = null;\n    this.videoSrc = null;\n  }\n\n  setStream(){\n    var selectVideoSrc = document.getElementById(\"videoSelectConf\");\n    if(this.videoSrc){\n      try{\n        selectVideoSrc.value = this.videoSrc;\n        }\n      catch(e){console.log(e)}\n    }\n    \n    // Falta cerrar el stream anterior antes de abrir uno nuevo.\n    navigator.mediaDevices.getUserMedia({\n      video: {\n        deviceId: selectVideoSrc? {exact: selectVideoSrc.value}:undefined,\n        facingMode: \"enviroment\"\n      }\n    }).then(stream => {\n      this.videoTag.current.srcObject = stream;\n      requestAnimationFrame(this.tick);\n      window.stream = stream;\n\n    });\n  }\n\n  tick() {\n    const video = this.videoTag.current;\n    let countdownCurrent;\n    let countdownNext;\n    const checkVideoState = setInterval(() => {\n      if (video.readyState === video.HAVE_ENOUGH_DATA) {\n        clearInterval(checkVideoState);\n\n          this.props.setIsVideoLoading(false);\n          var canvasPreviewElement = this.props.canvasPreview.current;\n          if(canvasPreviewElement){\n          var canvasPreview = canvasPreviewElement.getContext(\"2d\");\n          canvasPreviewElement.height = video.videoHeight;\n          canvasPreviewElement.width = video.videoWidth;\n          canvasPreview.translate(this.mirrorTranslate[0],this.mirrorTranslate[1]);\n          canvasPreview.scale(this.mirrorScale[0],this.mirrorScale[1]);\n          if(this.props.currentState.stateName.localeCompare(\"Countdown\")===0){\n          canvasPreview.filter = \"brightness(50%)\";}\n          canvasPreview.drawImage(\n              video,\n              0,\n              0,\n              canvasPreviewElement.width,\n              canvasPreviewElement.height\n           );\n           if(this.props.currentState.stateName.localeCompare(\"Countdown\")===0){\n             countdown(canvasPreviewElement,this,countdownCurrent, countdownNext);\n           }\n           requestAnimationFrame(this.tick);\n           }\n      }\n    }, 50);\n  }\n\n  startRecording(){\n      var options = { mimeType: \"video/webm;codecs=vp8\" };\n      this.mediaRecorder = new MediaRecorder(this.props.canvasPreview.current.captureStream(), options);\n      this.mediaRecorder.ondataavailable = handleDataAvailable(this);\n      this.mediaRecorder.start();\n  }\n\n\tstopRecording(){\n    this.mediaRecorder.stop();\n\t}\n\n\tdownloadVideo(){\n\t\tdownloadVideo(this);\t\n\t}\n  downloadAll(){\n    downloadAll(this);\n  }\n  \n  captureScreenshot(){\n    captureScreenshot(this);\n    }\n\n  downloadScreenshots(){\n    downloadScreenshots(this);\n  }\n  \n  mirror(way){\n    mirror(this,way);\n  }\n\n  render() {\n    const isVideoLoading = this.props.currentState.isVideoLoading;\n    const colorScreenshotBtn = (this.props.currentState.enableCaptureBtn)? \"white\" : \"grey\";\n    const dispProgress = (this.props.currentState.showProgressBar)? \"block\":\"none\";\n\n    if(this.props.currentState.showProgressBar){\n      if(this.props.currentState.hideSidePanel){\n        this.props.placeProgressBar(\"btnsOnCanvas\");\n        console.log(\"llll\");}\n      else if(this.props.currentState.fullScreen){\n        this.props.placeProgressBar(\"btnsFS\");}\n      else{\n        this.props.placeProgressBar(\"btnsBelowCanvas\");}\n    }\n    if(!isVideoLoading && !this.props.currentState.hideSidePanel && !this.props.currentState.fullScreen){\n      let btns= document.getElementById(\"buttons\");\n      if(btns){\n      btns.style.top = 50*3/4+\"vw\";}\n\n    }\n    return (\n      <div id=\"WebcamStream_Wrapper\">\n\n        <script src=\"adapter.js\"></script>\n\n        {/* Dummy video tag to recieve UserMedia stream.*/}\n        <video\n          ref={this.videoTag}\n          autoPlay\n          id = \"video\"\n          style={{ display: \"none\"}}\n        />\n\n        {!isVideoLoading &&\n          <div id=\"canvasDiv\" className=\"canvasRendered\">\n            {this.props.currentState.canvasAlert &&\n              <div id=\"alert\" style={{position: 'absolute', zIndex: 2}}>\n                <Alert color=\"warning\">Verifique el enfoque del dispositivo.</Alert>\n              </div>\n            }\n\n            {this.props.currentState.stateName.localeCompare(\"GetCon\") === 0 &&\n              <div id=\"alert\" style={{position: 'absolute', zIndex: 2}}>\n                <Alert color=\"info\">Estableciendo conexión con el servidor.</Alert>\n              </div>\n            }\n            \n            {this.props.currentState.renderCanvas &&\n                <canvas ref={this.props.canvasPreview}\n                        id=\"canvasPreview\"/>\n\n            }\n            {(this.props.currentState.stateName.localeCompare(\"Countdown\") === 0) &&\n              <canvas id=\"canvasCountdown\" width=\"1000\" height=\"750\"/>\n            }\n            {this.props.currentState.renderCanvas &&\n\t\t\t\t      <div id=\"buttons\">\n                <table style={{width: \"100%\", height: \"100%\"}}>\n                  <tbody>\n                    <tr>\n                    <td colSpan=\"1\">\n                    <span  id = \"screenshotBtn\"\n                          onClick={() => {if(this.props.currentState.enableCaptureBtn){this.captureScreenshot()}}}\n                          style={{color: colorScreenshotBtn}}>\n                          <i className=\"fas fa-camera\" style={{margin: \"0px\"}}></i>\n                    </span>\n                    </td>\n                    <td colSpan=\"10\" style={{textAlign: \"center\"}}>\n                    {this.props.currentState.enableCtrlBtn &&\n                    <div id=\"ctrlBtn\"\n                            onClick={()=>{ctrlBtnFunction(this);}}>\n                            \n                            {this.props.currentState.textCtrlBtn}\n                    </div>\n                    }\n                    {!this.props.currentState.enableCtrlBtn &&\n                    <div id=\"ctrlBtnDisabled\">\n                            {this.props.currentState.textCtrlBtn}\n                    </div>\n                    }\n                    </td>\n                    <td colSpan=\"1\">\n                    <span  id = \"fullScreenBtn\" \n                          onClick={()=>fullScreen(this)}>\n                          {!this.props.currentState.fullScreen &&<i className=\"fas fa-expand\" style={{margin: \"0px\"}}></i>}\n                          {this.props.currentState.fullScreen && <i className=\"fas fa-compress\" style={{margin: \"0px\"}}></i>}\n                    </span>\n                    </td>\n                    </tr>\n                  </tbody>\n                </table>\n              </div>\n            }\n          </div>\n        }\n        \n        {isVideoLoading &&\n          <div>\n            <canvas id=\"canvasMessage\"\n                    className=\"canvasRendered\" width=\"1000\" height=\"750\"/>\n          </div>\n        }\n        {!this.props.currentState.renderCanvas &&\n          <div>\n            <video id = \"recordedVideoElement\"\n                   controls\n                   srcObject = {null}\n                   src={null}\n                   className=\"canvasRendered\"/>\n            <div id= \"ctrlStartOver\" \n                    onClick={()=>{ctrlBtnFunction(this);}}\n                    >\n                    {this.props.currentState.textCtrlBtn}\n                    </div>\n          </div>\n        }\n        <div id=\"progressBar\" style={{display: dispProgress}}>\n          <Progress style={{width: \"100%\", height: \"100%\"}}\n                    value={this.props.currentState.progress} \n                    color={setProgressBarColor(this)}/>\n        </div>\n\n\n      </div>\n    );\n  }\n}\n\n\n\nexport default WebcamStream;\n"]},"metadata":{},"sourceType":"module"}