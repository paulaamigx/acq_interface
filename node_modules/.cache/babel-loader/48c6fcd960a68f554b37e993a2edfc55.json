{"ast":null,"code":"var _jsxFileName = \"/home/paula/Documents/Practica/git/user_interface/src/components/InferenceUI/ElementsMain.js\";\nimport { Button, Progress, Container } from 'reactstrap';\nimport React from 'react'; //import './InferenceUI.css'\n\nclass ElementsMain extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n    this.progressBarColor = \"info\"; //reactStrap notation\n  }\n\n  setProgressBarColor() {\n    console.log(\"22\");\n    console.log(parseInt(this.props.currentState.progress, 10));\n    return this.progressBarColor;\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(Container, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 7\n      }\n    }, this.props.currentState.showStartBtn && /*#__PURE__*/React.createElement(Button, {\n      color: \"primary\",\n      onClick: () => startStopFunction(this),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 11\n      }\n    }, this.props.currentState.textMainBtn), this.props.currentState.showCaptureBtn && /*#__PURE__*/React.createElement(Button, {\n      color: \"primary\",\n      disabled: this.props.currentState.disableBtnCapture,\n      onClick: () => this.props.captureScreenshot(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 11\n      }\n    }, \"Capture Screenshot\"), this.props.currentState.showProgressBar && /*#__PURE__*/React.createElement(Progress, {\n      value: this.props.currentState.progress,\n      color: this.setProgressBarColor,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"h4\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }\n    }, \"From Server\"), /*#__PURE__*/React.createElement(Button, {\n      color: \"secondary\",\n      onClick: () => this.props.fromServer(\"blur\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 6\n      }\n    }, \"Blur\"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"range\",\n      min: \"0\",\n      max: \"100\",\n      id: \"range\",\n      onChange: e => {\n        this.props.fromServer(\"progress\", e.target.value);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nfunction startStopFunction(btn) {\n  if (btn.props.currentState.textMainBtn.localeCompare(\"Start\") === 0) {\n    startFunction(btn);\n    return;\n  }\n\n  stopFunction(btn);\n}\n\nfunction startFunction(btn) {\n  btn.props.handler(\"Countdown\");\n  btn.props.currentState.almostStreaming = true;\n}\n\nfunction stopFunction(btn) {\n  btn.props.handler(\"StopStream\");\n}\n\nexport default ElementsMain;","map":{"version":3,"sources":["/home/paula/Documents/Practica/git/user_interface/src/components/InferenceUI/ElementsMain.js"],"names":["Button","Progress","Container","React","ElementsMain","Component","constructor","props","state","progressBarColor","setProgressBarColor","console","log","parseInt","currentState","progress","render","showStartBtn","startStopFunction","textMainBtn","showCaptureBtn","disableBtnCapture","captureScreenshot","showProgressBar","fromServer","e","target","value","btn","localeCompare","startFunction","stopFunction","handler","almostStreaming"],"mappings":"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","sourcesContent":["import { Button, Progress, Container\n} from 'reactstrap';\nimport React from 'react';\n//import './InferenceUI.css'\n\nclass ElementsMain extends React.Component{\n  constructor(props){\n      super(props);\n      this.state = {\n      }\n      this.progressBarColor = \"info\"; //reactStrap notation\n  }\n\n  setProgressBarColor(){\n    console.log(\"22\");\n    console.log(parseInt(this.props.currentState.progress,10));\n    return this.progressBarColor;\n  }\n \n  render(){\n    return(\n      <Container> \n        {this.props.currentState.showStartBtn && \n          <Button color=\"primary\" \n                  onClick={() => startStopFunction(this)}>\n            {this.props.currentState.textMainBtn}</Button>}\n        {this.props.currentState.showCaptureBtn && \n          <Button color=\"primary\" \n                  disabled={this.props.currentState.disableBtnCapture}  \n                  onClick={() => this.props.captureScreenshot()}>\n            {\"Capture Screenshot\"}</Button>}\n        {this.props.currentState.showProgressBar && \n          <Progress value={this.props.currentState.progress} \n                    color={this.setProgressBarColor}/>}\n\n        \n        <h4>From Server</h4>\n\t\t\t  <Button color= \"secondary\" onClick={()=>this.props.fromServer(\"blur\")}>{\"Blur\"}</Button>\n        <input type=\"range\" min=\"0\" max=\"100\" id=\"range\" onChange={(e)=>\n                {this.props.fromServer(\"progress\",e.target.value);}}/>\n      </Container>\n    );\n  }\n}\nfunction startStopFunction(btn){\n  if (btn.props.currentState.textMainBtn.localeCompare(\"Start\") === 0){\n    startFunction(btn);\n    return;\n  }\n  stopFunction(btn);\n}\n\nfunction startFunction(btn){\n  btn.props.handler(\"Countdown\");\n  btn.props.currentState.almostStreaming = true;\n  \n  }\n\nfunction stopFunction(btn){\n   btn.props.handler(\"StopStream\");\n\n}\n\n\nexport default ElementsMain;\n"]},"metadata":{},"sourceType":"module"}