{"ast":null,"code":"var _jsxFileName = \"/home/paula/Documents/Practica/git/user_interface/src/components/InferenceUI/InferenceUI.js\";\nimport './InferenceUI.css';\nimport { Container, Row, Col } from 'reactstrap';\nimport React from 'react';\nimport WebcamStream from './WebcamStream/WebcamStream.js';\nimport SidePanel from './SidePanel/SidePanel.js';\nimport { manageStates } from './functions.js';\n\nclass InferenceUI extends React.Component {\n  constructor(props) {\n    super();\n    this.state = {\n      stateName: \"Idle\",\n      // Render canvas or video\n      renderCanvas: true,\n      // Canvas Message\n      canvasMessage: \"\",\n      canvasAlert: false,\n      // Progress Bar props\n      showProgressBar: false,\n      progress: 0,\n      // Show Spinner\n      showSpinner: false,\n      // Button state\n      textCtrlBtn: \"Empezar\",\n      enableCtrlBtn: true,\n      enableCaptureBtn: false,\n      // Side Panel\n      enableDownloadsTab: false,\n      enableDiagnosisTab: false,\n      enableConfigTab: true,\n      enableGalleryTab: false,\n      GallerySrc: [],\n      isVideoLoading: true,\n      hideSidePanel: false,\n      tabOn: \"2\"\n    };\n    this.childWebcamStream = React.createRef();\n    this.childDiagnosis = React.createRef();\n    this.countdownFrom = 1;\n    this.alertTimeout = null;\n    this.videoThumbnail = null;\n    this.canvasPreview = React.createRef();\n    this.canvasWidth = 10;\n    this.canasHeight = 10;\n  } // En caso de que venga de review y vaya a idle, limpiar las variables.\n\n\n  async stateHandler(nextState) {\n    await this.setState({\n      stateName: nextState\n    });\n    console.log(\"Estado: \" + this.state.stateName);\n    await this.setState(manageStates(this.state.stateName));\n  }\n\n  downloadHandler(media) {\n    if (media.localeCompare(\"video\") === 0) {\n      this.childWebcamStream.current.downloadVideo();\n    } else if (media.localeCompare(\"screenshots\") === 0) {\n      this.childWebcamStream.current.downloadScreenshots();\n    }\n  }\n\n  changeStateProp(str) {\n    this.setState(str);\n  }\n\n  saveCanvasDim(w, h) {\n    this.canvasWidth = w;\n    this.canvasHeight = h;\n    console.log(\"ok\" + w);\n    console.log(\"ok\" + h);\n  }\n\n  getCanvasDim() {\n    console.log(\"gc: \" + this.canvasWidth);\n    console.log(\"gc: \" + this.canvasHeight);\n    return [this.canvasWidth, this.canvasHeight];\n  }\n\n  componentDidMount() {\n    this.childDiagnosis.current.listDevices();\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      id: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 6\n      }\n    }, /*#__PURE__*/React.createElement(WebcamStream, {\n      currentState: this.state,\n      canvasPreview: this.canvasPreview,\n      stateHandler: nextState => this.stateHandler(nextState),\n      countdownFrom: this.countdownFrom,\n      ref: this.childWebcamStream,\n      getVideoThumbnail: img => {\n        this.videoThumbnail = img;\n      },\n      setScreenshots: data => this.setState({\n        GallerySrc: this.state.GallerySrc.concat(data)\n      }),\n      saveCanvasDim: (w, h) => this.saveCanvasDim(w, h),\n      getCanvasDim: () => this.getCanvasDim(),\n      changeStateProp: string => this.changeStateProp(string),\n      placeProgressBar: flag => placeProgressBar(flag),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(SidePanel, {\n      currentState: this.state,\n      thumbnail: this.videoThumbnail,\n      getScreenshots: () => this.getScreenshots(),\n      setStreamFromConfig: () => {\n        this.childWebcamStream.current.setStream();\n      },\n      ref: this.childDiagnosis,\n      downloadHandler: media => this.downloadHandler(media),\n      saveCanvasDim: (w, h) => this.saveCanvasDim(w, h),\n      getCanvasDim: () => this.getCanvasDim(),\n      changeStateProp: string => this.changeStateProp(string),\n      placeProgressBar: flag => placeProgressBar(flag),\n      mirror: way => {\n        this.childWebcamStream.current.mirror(way);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 17\n      }\n    }));\n  }\n\n}\n\nfunction placeProgressBar(flag) {\n  let progress = document.getElementById(\"progressBar\");\n  let canvas = document.getElementById(\"canvasPreview\");\n  let btns = document.getElementById(\"buttons\");\n\n  if (progress) {\n    progress.style.width = canvas.clientWidth * 100 / window.innerWidth + \"vw\";\n\n    if (flag.localeCompare(\"btnsOnCanvas\") === 0) {\n      progress.style.top = canvas.clientHeight * 100 / window.innerHeight + \"vh\";\n      btns.style.top = (canvas.clientHeight - btns.clientHeight) * 100 / window.innerHeight + \"vh\";\n      progress.style.marginLeft = (100 - canvas.clientWidth * 100 / window.innerWidth) / 2 + \"vw\";\n    } else if (flag.localeCompare(\"btnsBelowCanvas\") === 0) {\n      btns.style.top = canvas.clientHeight * 100 / window.innerHeight + \"vh\";\n      progress.style.marginLeft = \"2.5vw\";\n      progress.style.top = (canvas.clientHeight + btns.clientHeight) * 100 / window.innerHeight + \"vh\";\n    } else if (flag.localeCompare(\"btnsFS\") === 0) {\n      //console.log(\"33\");\n      progress.style.width = canvas.clientWidth * 100 / window.innerWidth + \"vw\";\n      btns.style.top = (canvas.clientHeight - btns.clientHeight) * 100 / window.innerHeight + \"vh\";\n      progress.style.marginLeft = \"12%\";\n      progress.style.top = \"98vh\";\n    }\n  }\n}\n\nexport default InferenceUI;","map":{"version":3,"sources":["/home/paula/Documents/Practica/git/user_interface/src/components/InferenceUI/InferenceUI.js"],"names":["Container","Row","Col","React","WebcamStream","SidePanel","manageStates","InferenceUI","Component","constructor","props","state","stateName","renderCanvas","canvasMessage","canvasAlert","showProgressBar","progress","showSpinner","textCtrlBtn","enableCtrlBtn","enableCaptureBtn","enableDownloadsTab","enableDiagnosisTab","enableConfigTab","enableGalleryTab","GallerySrc","isVideoLoading","hideSidePanel","tabOn","childWebcamStream","createRef","childDiagnosis","countdownFrom","alertTimeout","videoThumbnail","canvasPreview","canvasWidth","canasHeight","stateHandler","nextState","setState","console","log","downloadHandler","media","localeCompare","current","downloadVideo","downloadScreenshots","changeStateProp","str","saveCanvasDim","w","h","canvasHeight","getCanvasDim","componentDidMount","listDevices","render","img","data","concat","string","flag","placeProgressBar","getScreenshots","setStream","way","mirror","document","getElementById","canvas","btns","style","width","clientWidth","window","innerWidth","top","clientHeight","innerHeight","marginLeft"],"mappings":"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","sourcesContent":["import './InferenceUI.css';\nimport {Container, Row,Col\n    } from 'reactstrap';\nimport React from 'react';\nimport WebcamStream from './WebcamStream/WebcamStream.js'\nimport SidePanel from './SidePanel/SidePanel.js'\nimport {manageStates} from './functions.js'\n\n\nclass InferenceUI extends React.Component {\n  \n  constructor(props){\n    super();\n    this.state = {\n      stateName: \"Idle\",\n\n      // Render canvas or video\n      renderCanvas: true,\n      // Canvas Message\n      canvasMessage: \"\",\n      canvasAlert: false,\n\n      // Progress Bar props\n      showProgressBar: false,\n      progress: 0,\n      // Show Spinner\n      showSpinner: false,\n      // Button state\n      textCtrlBtn: \"Empezar\",\n      enableCtrlBtn: true,\n      enableCaptureBtn: false,\n\n      // Side Panel\n      enableDownloadsTab: false,\n      enableDiagnosisTab: false,\n      enableConfigTab: true,\n      enableGalleryTab: false,\n      GallerySrc: [],\n\n      isVideoLoading: true,\n      hideSidePanel: false,\n\n      tabOn: \"2\"\n    }\n    this.childWebcamStream = React.createRef();\n    this.childDiagnosis = React.createRef();\n    this.countdownFrom = 1;\n    this.alertTimeout = null;\n    this.videoThumbnail = null;\n    this.canvasPreview = React.createRef();\n    this.canvasWidth = 10;\n    this.canasHeight = 10;\n  }\n\n  // En caso de que venga de review y vaya a idle, limpiar las variables.\n  async stateHandler(nextState){\n    await this.setState({stateName: nextState});\n    console.log(\"Estado: \" + this.state.stateName);\n    await this.setState(manageStates(this.state.stateName));\n  }\n  \n  downloadHandler(media){\n    if(media.localeCompare(\"video\")===0){\n      this.childWebcamStream.current.downloadVideo();\n    }\n    else if(media.localeCompare(\"screenshots\")===0){\n      this.childWebcamStream.current.downloadScreenshots();\n    }\n  }\n\n  changeStateProp(str){\n    this.setState(str);\n  }\n\n  saveCanvasDim(w,h){\n    this.canvasWidth = w;\n    this.canvasHeight = h;\n    console.log(\"ok\"+ w);\n    console.log(\"ok\"+ h);\n  }\n  getCanvasDim(){\n    console.log(\"gc: \"+this.canvasWidth);\n    console.log(\"gc: \"+this.canvasHeight);\n    return [this.canvasWidth,this.canvasHeight];\n  }\n  componentDidMount(){\n    this.childDiagnosis.current.listDevices();\n  }\n\n  render() {\n      return (\n\t\t\t\t\t<div id=\"container\">\n                <WebcamStream currentState={this.state} \n                              canvasPreview={this.canvasPreview}\n                              stateHandler={(nextState)=>this.stateHandler(nextState)} \n                              countdownFrom={this.countdownFrom} \n                              ref={this.childWebcamStream}\n                              getVideoThumbnail={(img)=> {this.videoThumbnail = img}}\n                              setScreenshots={(data)=>this.setState({GallerySrc: this.state.GallerySrc.concat(data)})}\n                              saveCanvasDim={(w,h)=>this.saveCanvasDim(w,h)}\n                              getCanvasDim ={()=>this.getCanvasDim()}\n                              changeStateProp={(string)=>this.changeStateProp(string)}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tplaceProgressBar={(flag)=>placeProgressBar(flag)}\n\t\t\t\t\t\t\t\t/>\n                <SidePanel currentState={this.state}\n                              thumbnail={this.videoThumbnail}\n                              getScreenshots={()=>this.getScreenshots()}\n                              setStreamFromConfig={()=>{this.childWebcamStream.current.setStream();}}\n                              ref={this.childDiagnosis}\n                              downloadHandler={(media)=>this.downloadHandler(media)}\n                              saveCanvasDim={(w,h)=>this.saveCanvasDim(w,h)}\n                              getCanvasDim ={()=>this.getCanvasDim()}\n                              changeStateProp={(string)=>this.changeStateProp(string)}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tplaceProgressBar={(flag)=>placeProgressBar(flag)}\n                              mirror={(way)=>{this.childWebcamStream.current.mirror(way)}}/>\n\n          </div>\n\t\n        );\n        \n    }\n}\nfunction placeProgressBar(flag){\n  let progress = document.getElementById(\"progressBar\")\n  let canvas = document.getElementById(\"canvasPreview\");\n  let btns = document.getElementById(\"buttons\");\n  if(progress){\n    progress.style.width = canvas.clientWidth*100/window.innerWidth+\"vw\";\n\t\tif(flag.localeCompare(\"btnsOnCanvas\")===0){\n    \tprogress.style.top = (canvas.clientHeight)*100/window.innerHeight + \"vh\";\n    \tbtns.style.top = (canvas.clientHeight - btns.clientHeight)*100/window.innerHeight + \"vh\";\n    \tprogress.style.marginLeft = (100-(canvas.clientWidth*100/window.innerWidth))/2 + \"vw\";\n\t\t}\n\t\telse if(flag.localeCompare(\"btnsBelowCanvas\")===0){\n    \tbtns.style.top = (canvas.clientHeight)*100/window.innerHeight + \"vh\";\n    \tprogress.style.marginLeft = \"2.5vw\";\n    \tprogress.style.top = (canvas.clientHeight+btns.clientHeight)*100/window.innerHeight + \"vh\";\n\t\t}\n\t\telse if(flag.localeCompare(\"btnsFS\")===0){\n      //console.log(\"33\");\n      progress.style.width = canvas.clientWidth*100/window.innerWidth+\"vw\";\n    \tbtns.style.top = (canvas.clientHeight-btns.clientHeight)*100/window.innerHeight + \"vh\";\n    \tprogress.style.marginLeft = \"12%\";\n    \tprogress.style.top =  \"98vh\";\n\t\t}\n  }\n}\n\nexport default InferenceUI;\n"]},"metadata":{},"sourceType":"module"}