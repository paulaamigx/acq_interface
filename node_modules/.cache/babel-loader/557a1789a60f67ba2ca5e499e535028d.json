{"ast":null,"code":"var _jsxFileName = \"/home/paula/Documents/Practica/git/user_interface/src/components/InferenceUI/Diagnosis.js\";\nimport { Modal, ModalHeader, ModalBody, ModalFooter, Spinner, TabContent, TabPane, Nav, NavItem, NavLink, Card, CardImg, Button, CardTitle, CardBody, CardText, Row, Col, Container } from 'reactstrap';\nimport React, { useState } from 'react';\nimport classnames from 'classnames';\n\nclass Diagnosis extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 4\n      }\n    }, this.props.currentState.showModalDiagnosis && /*#__PURE__*/React.createElement(ModalDiagnosis, {\n      handlerSuper: () => {\n        this.props.handler(\"OnConnection\");\n      },\n      thumbnail: this.props.thumbnail,\n      getScreenshots: () => this.props.getScreenshots(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 52\n      }\n    }));\n  }\n\n}\n\nconst ModalDiagnosis = props => {\n  const {\n    className,\n    thumbnail,\n    getScreenshots\n  } = props;\n  const [modal, setModal] = useState(true);\n\n  const toggle = () => {\n    setModal(!modal);\n    props.handlerSuper();\n  };\n\n  const [activeTab, setActiveTab] = useState('1');\n\n  const toggle2 = tab => {\n    if (activeTab !== tab) setActiveTab(tab);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Modal, {\n    isOpen: modal,\n    toggle: toggle,\n    className: className,\n    size: 'xl',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(ModalBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Nav, {\n    tabs: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 6\n    }\n  }, /*#__PURE__*/React.createElement(NavItem, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(NavLink, {\n    className: classnames({\n      active: activeTab === '1'\n    }),\n    onClick: () => {\n      toggle2('1');\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 8\n    }\n  }, \"Diagnostico\")), /*#__PURE__*/React.createElement(NavItem, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(NavLink, {\n    className: classnames({\n      active: activeTab === '2'\n    }),\n    onClick: () => {\n      toggle2('2');\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 8\n    }\n  }, \"Descargas\"))), /*#__PURE__*/React.createElement(TabContent, {\n    activeTab: activeTab,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 6\n    }\n  }, /*#__PURE__*/React.createElement(TabPane, {\n    tabId: \"1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(DiagnosisTab, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 8\n    }\n  })), /*#__PURE__*/React.createElement(TabPane, {\n    tabId: \"2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(DownloadTab, {\n    thumbnail: thumbnail,\n    getScreenshots: getScreenshots,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 8\n    }\n  }))))));\n};\n\nfunction DiagnosisTab() {\n  return /*#__PURE__*/React.createElement(Spinner, {\n    color: \"info\",\n    style: {\n      position: 'absolute',\n      margin: 'auto'\n    },\n    size: 'xl',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 3\n    }\n  });\n}\n\nconst DownloadTab = props => {\n  const {\n    thumbnail,\n    getScreenshots\n  } = props;\n  let screenshots = getScreenshots.call();\n  console.log(screenshots);\n  return /*#__PURE__*/React.createElement(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 4\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    sm: \"6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 8\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    body: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(CardImg, {\n    top: true,\n    width: \"100%\",\n    src: thumbnail,\n    alt: \"thumbnail\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(CardText, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 13\n    }\n  }, \"Grabaci\\xF3n del examen.\"), /*#__PURE__*/React.createElement(Button, {\n    color: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 13\n    }\n  }, \" Descargar Video\"))), /*#__PURE__*/React.createElement(Col, {\n    sm: \"6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    body: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(CardImg, {\n    top: true,\n    width: \"100%\",\n    src: screenshots[0].img,\n    alt: \"thumbnail\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(CardText, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 13\n    }\n  }, \"Capturas de Pantalla.\"), /*#__PURE__*/React.createElement(Button, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 13\n    }\n  }, \"Descargar capturas\")))));\n};\n\nexport default Diagnosis;","map":{"version":3,"sources":["/home/paula/Documents/Practica/git/user_interface/src/components/InferenceUI/Diagnosis.js"],"names":["Modal","ModalHeader","ModalBody","ModalFooter","Spinner","TabContent","TabPane","Nav","NavItem","NavLink","Card","CardImg","Button","CardTitle","CardBody","CardText","Row","Col","Container","React","useState","classnames","Diagnosis","Component","constructor","props","state","render","currentState","showModalDiagnosis","handler","thumbnail","getScreenshots","ModalDiagnosis","className","modal","setModal","toggle","handlerSuper","activeTab","setActiveTab","toggle2","tab","active","DiagnosisTab","position","margin","DownloadTab","screenshots","call","console","log","img"],"mappings":"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","sourcesContent":["import { Modal, ModalHeader, ModalBody, ModalFooter, Spinner,TabContent, TabPane, Nav, NavItem, NavLink, Card,CardImg, Button, CardTitle, CardBody, CardText, Row, Col, Container } from 'reactstrap';\nimport React, {useState} from 'react';\nimport classnames from 'classnames';\nclass Diagnosis extends React.Component{\n\tconstructor(props){\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t}\n\t}\n  \n\trender(){\n\t\treturn(\n\t\t\t<div>\n\t\t\t\t{this.props.currentState.showModalDiagnosis && <ModalDiagnosis handlerSuper={()=>{this.props.handler(\"OnConnection\")}} thumbnail={this.props.thumbnail} getScreenshots={()=>this.props.getScreenshots()}/>}\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nconst ModalDiagnosis= (props) => {\n  const {\n    className,\n    thumbnail,\n    getScreenshots\n  } = props;\n\n  const [modal, setModal] = useState(true);\n\n  const toggle = () => {\n  \tsetModal(!modal);\n\t\tprops.handlerSuper();\n\t}\n  \n\tconst [activeTab, setActiveTab] = useState('1');\n  const toggle2 = tab => {\n    if(activeTab !== tab) setActiveTab(tab);\n  }\n  return (\n    <div>\n      <Modal isOpen={modal} toggle={toggle} className={className} size={'xl'}>\n\t\t\t\t<ModalBody>\n\t\t\t\t\t<Nav tabs>\n\t\t\t\t\t\t<NavItem>\n\t\t\t\t\t\t\t<NavLink className={classnames({ active: activeTab === '1' })}\n\t\t\t\t\t\t\t\t\t\t\t onClick={() => { toggle2('1'); }}>\n\t\t\t\t\t\t\t\t\t\t\t Diagnostico\n\t\t\t\t\t\t\t</NavLink>\n\t\t\t\t\t\t</NavItem>\n\n\t\t\t\t\t\t<NavItem>\n\t\t\t\t\t\t\t<NavLink className={classnames({ active: activeTab === '2' })}\n\t\t\t\t\t\t\t\t\t\t\t onClick={() => { toggle2('2'); }}>\n\t\t\t\t\t\t\t\t       Descargas\n\t\t\t\t\t\t\t</NavLink>\n\t\t\t\t\t\t</NavItem>\n\t\t\t\t\t</Nav>\n\n\t\t\t\t\t<TabContent activeTab={activeTab}>\n\t\t\t\t\t\t<TabPane tabId=\"1\">\n\t\t\t\t\t\t\t<DiagnosisTab />\n\t\t\t\t\t\t</TabPane>\n\n\t\t\t\t\t\t<TabPane tabId=\"2\">\n\t\t\t\t\t\t\t<DownloadTab thumbnail={thumbnail} getScreenshots={getScreenshots}/>\n\t\t\t\t\t\t</TabPane>\n\t\t\t\t\t</TabContent>\n\n        </ModalBody>\n      </Modal>\n    </div>\n  );\n}\nfunction DiagnosisTab(){\n\treturn(\n\t\t<Spinner color=\"info\" style={{position:'absolute',margin:'auto'}} size={'xl'}/>\n\t);\n}\nconst DownloadTab = (props) => {\n  const{\n    thumbnail,\n    getScreenshots\n  }=props;\n\n  let screenshots = getScreenshots.call();\n  console.log(screenshots);\n\treturn(\n\t\t<Container>\n      <Row></Row>\n\t\t\t<Row>\n      \t<Col sm=\"6\">\n          <Card body>\n            <CardImg top width=\"100%\" src= {thumbnail} alt=\"thumbnail\" />\n            <CardText>Grabación del examen.</CardText>\n            <Button color='primary'> Descargar Video</Button>\n          </Card>\n        </Col>\n        <Col sm=\"6\">\n          <Card body>\n            <CardImg top width=\"100%\" src= {screenshots[0].img} alt=\"thumbnail\" />\n            <CardText>Capturas de Pantalla.</CardText>\n            <Button>Descargar capturas</Button>\n          </Card>\n        </Col>\n     </Row>\n\n\n\t\t</Container>\n\t);\n}\nexport default Diagnosis;\n"]},"metadata":{},"sourceType":"module"}