{"ast":null,"code":"var _jsxFileName = \"/home/paula/Documentos/Simbiotica/git/acq_interface/src/components/InferenceUI/SidePanel/Diagnosis/DiagnosisTab.js\";\nimport React from 'react';\nimport './DiagnosisTab.css';\nexport function DiagnosisTab(props) {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"tabBody\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(DiagnosisReady, {\n    setAcqInfo: props.setAcqInfo,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 11\n    }\n  }));\n}\n\nfunction DiagnosisReady(props) {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    id: \"diagnosisReady\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    id: \"d_title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }\n  }, \" Diagn\\xF3stico \"), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"checkbox\",\n    id: \"d_normal\",\n    onClick: () => diagnosisSelected('normal'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }\n  }, \" Normal \"), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"checkbox\",\n    id: \"d_anormal\",\n    onClick: () => diagnosisSelected('anormal'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }\n  }, \" Anormal \"), /*#__PURE__*/React.createElement(\"select\", {\n    id: \"selectDiagnosis\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }\n  }, \" Otits media aguda\")), /*#__PURE__*/React.createElement(\"div\", {\n    id: \"diagnosisBoxTag\",\n    className: \"diagnosisBoxTag\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }\n  }, \" Observaciones:\"), /*#__PURE__*/React.createElement(\"textarea\", {\n    id: \"diagnosisBox\",\n    className: \"diagnosisBox\",\n    cols: \"20\",\n    rows: \"1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    id: \"btnMakeReport\",\n    onClick: () => uploadDiagnosis(props.setAcqInfo),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }\n  }, \"Subir Diagn\\xF3stico\"), /*#__PURE__*/React.createElement(\"div\", {\n    id: \"noDiagnosisWarning\",\n    style: {\n      display: 'none',\n      color: 'red'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }\n  }, \" Debe ingresar un diagnostico. \"));\n}\n\nfunction uploadDiagnosis(setAcqInfo) {\n  if (!document.getElementById('d_normal').checked && !document.getElementById('d_anormal').checked) {\n    document.getElementById('noDiagnosisWarning').style.display = 'block';\n  } else {\n    let data = Array(3);\n    data[0] = document.getElementById('d_normal').checked ? 'normal' : 'anormal';\n    data[1] = document.getElementById('d_normal').checked ? 'N/A' : document.getElementById('selectDiagnosis').value;\n    data[2] = document.getElementById('diagnosisBox').value;\n    setAcqInfo(data);\n  }\n}\n\nfunction diagnosisSelected(diagnosis) {\n  if (diagnosis.localeCompare('normal') === 0) {\n    document.getElementById('d_anormal').checked = false;\n    document.getElementById('selectDiagnosis').style.color = 'gray';\n    document.getElementById('selectDiagnosis').style.pointerEvents = 'none';\n  } else if (diagnosis.localeCompare('anormal') === 0) {\n    document.getElementById('d_normal').checked = false;\n    document.getElementById('selectDiagnosis').style.color = 'black';\n    document.getElementById('selectDiagnosis').style.pointerEvents = 'auto';\n  }\n}\n\nexport default DiagnosisTab;","map":{"version":3,"sources":["/home/paula/Documentos/Simbiotica/git/acq_interface/src/components/InferenceUI/SidePanel/Diagnosis/DiagnosisTab.js"],"names":["React","DiagnosisTab","props","setAcqInfo","DiagnosisReady","diagnosisSelected","uploadDiagnosis","display","color","document","getElementById","checked","style","data","Array","value","diagnosis","localeCompare","pointerEvents"],"mappings":"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","sourcesContent":["import React from 'react';\n\nimport './DiagnosisTab.css'\n\n\n\nexport function DiagnosisTab(props){\n\treturn(\n      <div className = \"tabBody\">\n          <DiagnosisReady  setAcqInfo = {props.setAcqInfo}    \n          />\n      </div>\n\t);\n}\n\nfunction DiagnosisReady(props){\n  return(\n    <div id='diagnosisReady'>\n      <span id='d_title'> Diagnóstico </span>\n      <br/>\n      <input type='checkbox' id='d_normal' onClick={()=>diagnosisSelected('normal')}/>\n      <span> Normal </span>\n      <br/>\n      <input type='checkbox' id='d_anormal' onClick={()=>diagnosisSelected('anormal')}/>\n      <span> Anormal </span>\n      <select id='selectDiagnosis'>\n        <option> Otits media aguda</option>\n      </select>\n      <div id='diagnosisBoxTag' className='diagnosisBoxTag'> Observaciones:</div>\n      <textarea id='diagnosisBox' className= 'diagnosisBox' cols=\"20\" rows=\"1\"></textarea>\n      <div id='btnMakeReport' onClick={()=>uploadDiagnosis(props.setAcqInfo)} >\n        Subir Diagnóstico\n      </div>\n      <div id='noDiagnosisWarning' style={{display: 'none', color: 'red'}}> Debe ingresar un diagnostico. </div>\n    </div>\n  );\n}\nfunction uploadDiagnosis(setAcqInfo){\n  if( !document.getElementById('d_normal').checked &&!document.getElementById('d_anormal').checked){\n    document.getElementById('noDiagnosisWarning').style.display = 'block';\n  }\n  else{\n    let data = Array(3);\n    data[0] = document.getElementById('d_normal').checked? 'normal':'anormal';\n    data[1] = document.getElementById('d_normal').checked? 'N/A':document.getElementById('selectDiagnosis').value;\n    data[2] = document.getElementById('diagnosisBox').value;\n    setAcqInfo(data);\n  }\n}\nfunction diagnosisSelected(diagnosis){\n  if(diagnosis.localeCompare('normal') === 0){\n    document.getElementById('d_anormal').checked = false;\n    document.getElementById('selectDiagnosis').style.color = 'gray';\n    document.getElementById('selectDiagnosis').style.pointerEvents = 'none';\n  }\n  else if(diagnosis.localeCompare('anormal') === 0){\n    document.getElementById('d_normal').checked = false;\n    document.getElementById('selectDiagnosis').style.color = 'black';\n    document.getElementById('selectDiagnosis').style.pointerEvents = 'auto';\n  }\n}\nexport default DiagnosisTab;\n"]},"metadata":{},"sourceType":"module"}