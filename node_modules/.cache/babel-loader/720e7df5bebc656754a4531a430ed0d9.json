{"ast":null,"code":"var _jsxFileName = \"/home/paula/Documents/Practica/git/user_interface/src/components/InferenceUI/WebcamStream.js\";\nimport './InferenceUI.css';\nimport React from 'react';\nimport { Button, Alert } from 'reactstrap';\n\nclass WebcamStream extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isVideoLoading: true\n    };\n    this.videoTag = React.createRef();\n    this.canvasPreview = React.createRef();\n    this.selectVideoSrc = React.createRef();\n    this.tick = this.tick.bind(this);\n    this.mirrorCount = 0;\n    this.mediaRecorder = null;\n    this.recordedChunks = [];\n    this.videoRecorded = null;\n    this.videoWidth = 0;\n    this.videoHeight = 0;\n  }\n\n  componentDidMount() {\n    navigator.mediaDevices.enumerateDevices().then(deviceInfos => {\n      for (let i = 0; i !== deviceInfos.length; ++i) {\n        const deviceInfo = deviceInfos[i];\n        const option = document.createElement('option');\n        option.value = deviceInfo.deviceId;\n\n        if (deviceInfo.kind === 'videoinput') {\n          option.text = deviceInfo.label || 'camera ' + (this.selectVideoSrc.current.length + 1);\n          this.selectVideoSrc.current.appendChild(option);\n        }\n      }\n    }).then(navigator.mediaDevices.getUserMedia({\n      video: {\n        facingMode: \"environment\"\n      }\n    }).then(stream => {\n      this.videoTag.current.srcObject = stream;\n      requestAnimationFrame(this.tick);\n      window.stream = stream;\n      var options = {\n        mimeType: \"video/webm;codecs=vp8\"\n      };\n      this.mediaRecorder = new MediaRecorder(stream, options);\n    }));\n  }\n\n  tick() {\n    const video = this.videoTag.current;\n    const checkVideoState = setInterval(() => {\n      if (video.readyState === video.HAVE_ENOUGH_DATA) {\n        clearInterval(checkVideoState);\n        this.setState({\n          isVideoLoading: false\n        });\n        const canvasPreviewElement = this.canvasPreview.current;\n        const canvasPreview = canvasPreviewElement.getContext(\"2d\");\n        canvasPreviewElement.height = video.videoHeight;\n        canvasPreviewElement.width = video.videoWidth;\n        canvasPreview.drawImage(video, 0, 0, canvasPreviewElement.width, canvasPreviewElement.height);\n\n        if (this.props.currentState.almostStreaming) {\n          canvasPreview.font = \"200px Arial\";\n          countdown(canvasPreview, this);\n        }\n\n        requestAnimationFrame(this.tick);\n      }\n    }, 50);\n  }\n\n  startRecording() {\n    this.mediaRecorder.ondataavailable = handleDataAvailable(this);\n    this.mediaRecorder.start();\n    this.props.getVideoThumbnail(this.canvasPreview.current.toDataURL(\"image/jpeg\", 1));\n  }\n\n  stopRecording() {\n    console.log(\"stopp\");\n    this.mediaRecorder.stop();\n  }\n\n  makeVideo() {\n    var blob = new Blob(this.recordedChunks, {\n      type: \"video/webm\"\n    });\n    this.videoRecorded = URL.createObjectURL(blob);\n  }\n\n  downloadVideo() {\n    var aux = document.createElement(\"a\");\n    document.body.appendChild(aux);\n    aux.style = \"display: none\";\n    aux.href = this.videoRecorded;\n    aux.download = \"test.webm\";\n    aux.click();\n    this.recordedChunks = [];\n  }\n\n  render() {\n    const {\n      isVideoLoading\n    } = this.state;\n    let classNameToRender = this.props.currentState.fullScreen ? \"overlayFullScreen\" : \"overlayRegularScreen\";\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"video\", {\n      ref: this.videoTag,\n      autoPlay: true,\n      id: \"video\",\n      style: {\n        display: \"none\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 9\n      }\n    }), !isVideoLoading && /*#__PURE__*/React.createElement(\"div\", {\n      id: \"mainDiv\",\n      className: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      id: \"canvasDiv\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 13\n      }\n    }, this.props.currentState.showAlert && /*#__PURE__*/React.createElement(AlertOnPreview, {\n      msg: \"Recibiendo Im\\xE1genes Borrosas\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(\"canvas\", {\n      ref: this.canvasPreview,\n      id: \"canvasPreview\",\n      style: {\n        display: \"block\",\n        position: \"absolute\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      id: \"mirror\",\n      className: classNameToRender,\n      onClick: () => {\n        mirror(this);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 13\n      }\n    }, \"M\"), /*#__PURE__*/React.createElement(\"div\", {\n      id: \"fullScreen\",\n      className: classNameToRender,\n      onClick: () => {\n        fullScreen(this);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 13\n      }\n    }, \"PC\"), /*#__PURE__*/React.createElement(\"div\", {\n      id: \"belowCanvas\",\n      style: {\n        position: \"absolute\",\n        top: \"900px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 15\n      }\n    }, \"scrolllll\"), /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 15\n      }\n    }, \"scrolllll\"), /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 15\n      }\n    }, \"scrolllll\"), /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 15\n      }\n    }, \"scrolllll\")))), /*#__PURE__*/React.createElement(\"div\", {\n      id: \"videoSelectDiv\",\n      style: {\n        width: \"640px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(\"select\", {\n      ref: this.selectVideoSrc,\n      style: {\n        width: 300\n      },\n      id: \"videoSelect\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 6\n      }\n    }), /*#__PURE__*/React.createElement(Button, {\n      color: \"primary\",\n      onClick: () => {\n        document.getElementById(\"videoSelectDiv\").remove();\n        this.props.handler(\"OnConnection\");\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 6\n      }\n    }, \"Ok\")), isVideoLoading && /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 28\n      }\n    }, \"Please wait while we load the video stream.\"));\n  }\n\n}\n\nasync function fullScreen(el) {\n  el.props.changeStateProp({\n    fullScreen: true\n  });\n  let div = document.getElementById(\"mainDiv\");\n  let btns = await document.getElementById(\"ButtonsNormalScreen\");\n  let canvas = document.getElementById(\"canvasPreview\");\n  let canvasDiv = document.getElementById(\"canvasDiv\");\n  console.log(btns);\n  div.appendChild(btns); //let below = document.getElementById(\"belowCanvas\");\n\n  div.style.overflow = \"auto\";\n  canvas.style.height = window.screen.height + \"px\";\n  canvasDiv.style.height = window.screen.height + \"px\";\n  canvasDiv.style.width = getComputedStyle(canvas).width;\n\n  if (div.webkitRequestFullScreen) {\n    div.webkitRequestFullScreen();\n  } else {\n    div.mozRequestFullScreen();\n  }\n\n  el.divId = \"ButtonsFullScreen\";\n}\n\nvar handleDataAvailable = function (el) {\n  return function (event) {\n    console.log(\"data-available\");\n\n    if (event.data.size > 0) {\n      el.recordedChunks.push(event.data);\n      console.log(el.recordedChunks);\n      el.makeVideo();\n    } else {\n      console.log(\"no data available for recording\");\n    }\n  };\n};\n\nfunction AlertOnPreview(props) {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    id: \"alert\",\n    style: {\n      position: 'absolute',\n      zIndex: 2\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Alert, {\n    color: \"warning\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 7\n    }\n  }, props.msg));\n}\n\nfunction mirror(el) {\n  let canvas = document.querySelector(\"#canvasPreview\");\n\n  if (el.mirrorCount % 2 === 0) {\n    canvas.style.transform = \"translate(640,0)\";\n    canvas.style.transform = \"scale(-1,1)\";\n  } else {\n    canvas.style.transform = \"none\";\n  }\n\n  el.mirrorCount++;\n}\n\nfunction countdown(canvas, el) {\n  let context = canvas;\n  let countdown = el.props.countdownFrom - Math.trunc((-el.props.currentState.timeStartPressed + Date.now()) / 1000);\n  context.beginPath();\n  context.arc(320, 240, 130, 0, 2 * Math.PI);\n  context.fillStyle = \"rgba(255, 255, 255, 0.8)\";\n  ;\n  context.fill();\n  context.beginPath();\n  context.fillStyle = \"black\";\n\n  if (countdown >= 10) {\n    context.fillText(countdown.toString(10), 200, 315);\n  } else if (countdown >= 1) {\n    context.fillText(countdown.toString(10), 270, 308, 100);\n  }\n\n  context.fill();\n\n  if (countdown < 1) {\n    el.props.currentState.almostStreaming = false;\n    el.props.currentState.streaming = true;\n    el.props.handler(\"Streaming\");\n  }\n}\n\nexport default WebcamStream;","map":{"version":3,"sources":["/home/paula/Documents/Practica/git/user_interface/src/components/InferenceUI/WebcamStream.js"],"names":["React","Button","Alert","WebcamStream","Component","constructor","props","state","isVideoLoading","videoTag","createRef","canvasPreview","selectVideoSrc","tick","bind","mirrorCount","mediaRecorder","recordedChunks","videoRecorded","videoWidth","videoHeight","componentDidMount","navigator","mediaDevices","enumerateDevices","then","deviceInfos","i","length","deviceInfo","option","document","createElement","value","deviceId","kind","text","label","current","appendChild","getUserMedia","video","facingMode","stream","srcObject","requestAnimationFrame","window","options","mimeType","MediaRecorder","checkVideoState","setInterval","readyState","HAVE_ENOUGH_DATA","clearInterval","setState","canvasPreviewElement","getContext","height","width","drawImage","currentState","almostStreaming","font","countdown","startRecording","ondataavailable","handleDataAvailable","start","getVideoThumbnail","toDataURL","stopRecording","console","log","stop","makeVideo","blob","Blob","type","URL","createObjectURL","downloadVideo","aux","body","style","href","download","click","render","classNameToRender","fullScreen","display","showAlert","position","mirror","top","getElementById","remove","handler","el","changeStateProp","div","btns","canvas","canvasDiv","overflow","screen","getComputedStyle","webkitRequestFullScreen","mozRequestFullScreen","divId","event","data","size","push","AlertOnPreview","zIndex","msg","querySelector","transform","context","countdownFrom","Math","trunc","timeStartPressed","Date","now","beginPath","arc","PI","fillStyle","fill","fillText","toString","streaming"],"mappings":"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","sourcesContent":["import './InferenceUI.css'\nimport React from 'react';\nimport {Button, Alert} from 'reactstrap';\n\nclass WebcamStream extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isVideoLoading: true\n    };\n\n    this.videoTag = React.createRef();\n    this.canvasPreview = React.createRef();\n\t\tthis.selectVideoSrc = React.createRef();\n    this.tick = this.tick.bind(this);\n\n    this.mirrorCount = 0;\n\n    this.mediaRecorder = null;\n    this.recordedChunks= [];\n\t  this.videoRecorded = null;\n\n    this.videoWidth = 0;\n    this.videoHeight = 0;\n\t}\n  componentDidMount() {\n    navigator.mediaDevices\n\t\t.enumerateDevices()\n\t\t.then( deviceInfos => {\n\t\t\t\tfor (let i = 0; i !== deviceInfos.length; ++i) {\n\t\t\t\t\tconst deviceInfo = deviceInfos[i];\n\t\t\t\t\tconst option = document.createElement('option');\n\t\t\t\t\toption.value = deviceInfo.deviceId;\n\t\t\t\t\tif (deviceInfo.kind === 'videoinput') {\n\t\t\t\t\t\toption.text = deviceInfo.label || 'camera ' +\n\t\t\t\t\t\t\t(this.selectVideoSrc.current.length + 1);\n\t\t\t\t\t\tthis.selectVideoSrc.current.appendChild(option);\n\t\t\t\t\t} \n\t\t\t\t}\n\t\t})\t\t\t\t \n\t\t.then(navigator.mediaDevices\n\n      .getUserMedia({ video: { facingMode: \"environment\" } })\n      .then(stream => {\n        this.videoTag.current.srcObject = stream;\n        requestAnimationFrame(this.tick);\n        window.stream = stream;\n        var options = { mimeType: \"video/webm;codecs=vp8\" };\n        this.mediaRecorder = new MediaRecorder(stream, options);\n      })\n\t\t);\n    \n  }\n\n\n  tick() {\n    const video = this.videoTag.current;\n\n    const checkVideoState = setInterval(() => {\n      if (video.readyState === video.HAVE_ENOUGH_DATA) {\n        clearInterval(checkVideoState);\n\n        this.setState({ isVideoLoading: false });\n\n          const canvasPreviewElement = this.canvasPreview.current;\n          const canvasPreview = canvasPreviewElement.getContext(\"2d\");\n\n          canvasPreviewElement.height = video.videoHeight;\n          canvasPreviewElement.width = video.videoWidth;\n          canvasPreview.drawImage(\n            video,\n            0,\n            0,\n            canvasPreviewElement.width,\n            canvasPreviewElement.height\n          );\n\t\t\t\t\tif(this.props.currentState.almostStreaming){\n\t\t\t\t\t\tcanvasPreview.font = \"200px Arial\"\n\t\t\t\t\t\tcountdown(canvasPreview,this);\n\t\t\t\t\t}\n           requestAnimationFrame(this.tick);\n\n      }\n    }, 50);\n  }\n\n  startRecording(){\n      this.mediaRecorder.ondataavailable = handleDataAvailable(this);\n      this.mediaRecorder.start();\n      this.props.getVideoThumbnail(this.canvasPreview.current.toDataURL(\"image/jpeg\",1));\n\n  }\n\tstopRecording(){\n    console.log(\"stopp\");\n\t\tthis.mediaRecorder.stop();\n\t}\n\n\tmakeVideo() {\n\t\tvar blob = new Blob(this.recordedChunks, {\n\t\t\ttype: \"video/webm\"\n\t\t});\n\t\tthis.videoRecorded = URL.createObjectURL(blob);\n\t}\n\n\tdownloadVideo(){\n\t\tvar aux = document.createElement(\"a\");\n\t\tdocument.body.appendChild(aux);\n\t\taux.style = \"display: none\";\n\t\taux.href = this.videoRecorded;\n\t\taux.download = \"test.webm\";\n\t\taux.click();\n\t\tthis.recordedChunks = [];\n\t}\n  render() {\n    const { isVideoLoading } = this.state;\n    let classNameToRender = (this.props.currentState.fullScreen)? \"overlayFullScreen\":\"overlayRegularScreen\";\n    return (\n      <div>\n        <video\n          ref={this.videoTag}\n          autoPlay\n          id = \"video\"\n          style={{ display: \"none\"}}/>\n\n        {!isVideoLoading && \n          <div  id=\"mainDiv\" \n                className=\"container\">\n            <div id=\"canvasDiv\">\n            {this.props.currentState.showAlert && \n              <AlertOnPreview msg=\"Recibiendo Imágenes Borrosas\"/>}\n            <canvas ref={this.canvasPreview} \n                    id=\"canvasPreview\" \n                    style={{display: \"block\", position: \"absolute\"}}/>\n            <div id=\"mirror\" \n                 className={classNameToRender} \n                 onClick={()=>{mirror(this)}}>M</div>\n            <div id=\"fullScreen\" \n                 className={classNameToRender} \n                 onClick={()=>{fullScreen(this)}}>PC</div>\n            <div  id=\"belowCanvas\" style={{position: \"absolute\", top: \"900px\"}}>\n              <h1>scrolllll</h1>\n              <h1>scrolllll</h1>\n              <h1>scrolllll</h1>\n              <h1>scrolllll</h1>\n            </div>\n            </div>\n          </div>\n        }\n\t\t\t\t<div id=\"videoSelectDiv\" style={{width: \"640px\"}}>\n\t\t\t\t\t<select ref={this.selectVideoSrc}\n\t\t\t\t\t\t\t\t\tstyle={{width: 300 }}\n\t\t\t\t\t\t\t\t\tid=\"videoSelect\"/>\n\t\t\t\t\t<Button color='primary' \n                  onClick={()=>{document.getElementById(\"videoSelectDiv\").remove();\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tthis.props.handler(\"OnConnection\");}}\n          >Ok</Button>\n\t\t\t\t</div>\n        {isVideoLoading && <p>Please wait while we load the video stream.</p>}\n\n      </div>\n    );\n  }\n}\nasync function fullScreen(el){\n  el.props.changeStateProp({fullScreen: true});\n\tlet div = document.getElementById(\"mainDiv\");\n  let btns = await document.getElementById(\"ButtonsNormalScreen\");\n  let canvas  = document.getElementById(\"canvasPreview\");\n  let canvasDiv  = document.getElementById(\"canvasDiv\");\n  console.log(btns);\n  div.appendChild(btns);\n  //let below = document.getElementById(\"belowCanvas\");\n  div.style.overflow = \"auto\";\n  canvas.style.height = window.screen.height + \"px\";\n  canvasDiv.style.height = window.screen.height + \"px\";\n  canvasDiv.style.width = getComputedStyle(canvas).width;\n  if(div.webkitRequestFullScreen) {\n    div.webkitRequestFullScreen();\n    \n  }\n  else {\n    div.mozRequestFullScreen();\n  } \n  el.divId = \"ButtonsFullScreen\";\n}\nvar handleDataAvailable = function (el) {\n  return function (event) {\n\t\tconsole.log(\"data-available\");\n  \tif (event.data.size > 0) {\n   \t  el.recordedChunks.push(event.data);\n      console.log(el.recordedChunks);\n      el.makeVideo();\n  \t}\n\t\telse {\n    \tconsole.log(\"no data available for recording\");\n  \t}\n  \n  };\n};\n\nfunction AlertOnPreview(props){\n  return(\n    <div id=\"alert\" style={{position: 'absolute', zIndex: 2}}>\n      <Alert color=\"warning\">{props.msg}</Alert>\n    </div>\n  )\n}\nfunction mirror(el){\n  let canvas = document.querySelector(\"#canvasPreview\");\n  if (el.mirrorCount%2 === 0){\n    canvas.style.transform = \"translate(640,0)\";\n    canvas.style.transform = \"scale(-1,1)\";\n  }\n  else{\n    canvas.style.transform = \"none\";\n  }\n  el.mirrorCount ++;\n}\n\nfunction countdown(canvas,el){\n\tlet context = canvas;\t\n\tlet countdown = el.props.countdownFrom- Math.trunc((-el.props.currentState.timeStartPressed + Date.now())/1000);\n  context.beginPath();\n  context.arc(320, 240, 130, 0, 2 * Math.PI);\n  context.fillStyle = \"rgba(255, 255, 255, 0.8)\";;\n  context.fill();\n  context.beginPath();\n  context.fillStyle = \"black\";\n  if(countdown >= 10){\n    context.fillText(countdown.toString(10),200,315);\n  }else if(countdown >= 1){\n    context.fillText(countdown.toString(10),270,308,100);\n  }\n\n  context.fill();\n  if (countdown <  1){\n    el.props.currentState.almostStreaming = false;\n    el.props.currentState.streaming = true;\n\t\tel.props.handler(\"Streaming\");\n  }\n\t\n}\nexport default WebcamStream;\n"]},"metadata":{},"sourceType":"module"}