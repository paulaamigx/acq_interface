{"ast":null,"code":"var _jsxFileName = \"/home/paula/Documents/Practica/git/user_interface/src/components/InferenceUI/InferenceUI.js\";\nimport './InferenceUI.css';\nimport { Container } from 'reactstrap';\n/* Container, Col, Row,\n Form, FormGroup, Label, Input,\n Card, CardImg, CardBody, CardTitle, CardText } from 'reactstrap';*/\n\nimport React, { useRef, useEffect } from 'react';\nimport io from 'socket.io-client';\n\nvar Video = props => {\n  const mediaStream = null;\n  var videoRef = useRef(null);\n  useEffect(() => {\n    var video = videoRef.current;\n\n    async function getStream() {\n      mediaStream = await navigator.mediaDevices.getUserMedia({\n        video: true\n      });\n    }\n\n    getStream();\n\n    const render = () => {\n      video.srcObject = mediaStream;\n    };\n\n    render();\n  }, []);\n  return /*#__PURE__*/React.createElement(\"video\", Object.assign({\n    ref: videoRef\n  }, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }\n  }));\n};\n\nconst Canvas = props => {\n  const canvasRef = useRef(null);\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    const context = canvas.getContext('2d');\n    canvas.width = 640;\n    canvas.height = 480;\n    context.width = 640;\n    context.height = 480;\n    context.fillStyle = '#000000';\n    context.fillRect(0, 0, context.canvas.width, context.canvas.height);\n  }, []);\n\n  const render = () => {};\n\n  return /*#__PURE__*/React.createElement(\"canvas\", Object.assign({\n    ref: canvasRef\n  }, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 10\n    }\n  }));\n};\n\nclass InferenceUI extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(Container, {\n      id: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 6\n      }\n    }, /*#__PURE__*/React.createElement(Canvas, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 7\n      }\n    }), /*#__PURE__*/React.createElement(Video, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 7\n      }\n    }));\n  }\n\n}\n\nexport default InferenceUI;","map":{"version":3,"sources":["/home/paula/Documents/Practica/git/user_interface/src/components/InferenceUI/InferenceUI.js"],"names":["Container","React","useRef","useEffect","io","Video","props","mediaStream","videoRef","video","current","getStream","navigator","mediaDevices","getUserMedia","render","srcObject","Canvas","canvasRef","canvas","context","getContext","width","height","fillStyle","fillRect","InferenceUI","Component","constructor","state"],"mappings":";AAAA,OAAO,mBAAP;AACA,SAAQA,SAAR,QACW,YADX;AAEG;;;;AAGH,OAAOC,KAAP,IAAeC,MAAf,EAAuBC,SAAvB,QAAuC,OAAvC;AACA,OAAOC,EAAP,MAAe,kBAAf;;AAEA,IAAIC,KAAK,GAAGC,KAAK,IAAI;AACpB,QAAMC,WAAW,GAAG,IAApB;AACA,MAAIC,QAAQ,GAAGN,MAAM,CAAC,IAAD,CAArB;AACAC,EAAAA,SAAS,CAAC,MAAM;AACf,QAAIM,KAAK,GAAGD,QAAQ,CAACE,OAArB;;AACA,mBAAeC,SAAf,GAA0B;AACxBJ,MAAAA,WAAW,GAAG,MAAMK,SAAS,CAACC,YAAV,CAAuBC,YAAvB,CAAoC;AAACL,QAAAA,KAAK,EAAE;AAAR,OAApC,CAApB;AACD;;AAEDE,IAAAA,SAAS;;AACT,UAAMI,MAAM,GAAG,MAAM;AACpBN,MAAAA,KAAK,CAACO,SAAN,GAAgBT,WAAhB;AAEA,KAHD;;AAIAQ,IAAAA,MAAM;AACN,GAZQ,EAYP,EAZO,CAAT;AAcA,sBAAO;AAAO,IAAA,GAAG,EAAEP;AAAZ,KAAyBF,KAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAP;AAEA,CAnBD;;AAsBA,MAAMW,MAAM,GAAGX,KAAK,IAAI;AACtB,QAAMY,SAAS,GAAGhB,MAAM,CAAC,IAAD,CAAxB;AACAC,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMgB,MAAM,GAAGD,SAAS,CAACR,OAAzB;AACA,UAAMU,OAAO,GAAGD,MAAM,CAACE,UAAP,CAAkB,IAAlB,CAAhB;AAEFF,IAAAA,MAAM,CAACG,KAAP,GAAe,GAAf;AACAH,IAAAA,MAAM,CAACI,MAAP,GAAe,GAAf;AACAH,IAAAA,OAAO,CAACE,KAAR,GAAe,GAAf;AACAF,IAAAA,OAAO,CAACG,MAAR,GAAgB,GAAhB;AAEEH,IAAAA,OAAO,CAACI,SAAR,GAAoB,SAApB;AACAJ,IAAAA,OAAO,CAACK,QAAR,CAAiB,CAAjB,EAAoB,CAApB,EAAuBL,OAAO,CAACD,MAAR,CAAeG,KAAtC,EAA6CF,OAAO,CAACD,MAAR,CAAeI,MAA5D;AACD,GAXQ,EAWN,EAXM,CAAT;;AAaD,QAAMR,MAAM,GAAG,MAAM,CAEpB,CAFD;;AAIC,sBAAO;AAAQ,IAAA,GAAG,EAAEG;AAAb,KAA4BZ,KAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAP;AACD,CApBD;;AAsBA,MAAMoB,WAAN,SAA0BzB,KAAK,CAAC0B,SAAhC,CAA0C;AACtCC,EAAAA,WAAW,CAACtB,KAAD,EAAO;AACd,UAAMA,KAAN;AACA,SAAKuB,KAAL,GAAa,EAAb;AAGH;;AAEDd,EAAAA,MAAM,GAAG;AACL,wBACH,oBAAC,SAAD;AAAW,MAAA,EAAE,EAAC,WAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACC,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADD,eAEC,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFD,CADG;AAOH;;AAhBqC;;AAkB1C,eAAeW,WAAf","sourcesContent":["import './InferenceUI.css';\nimport {Container\n    } from 'reactstrap';\n   /* Container, Col, Row,\n    Form, FormGroup, Label, Input,\n    Card, CardImg, CardBody, CardTitle, CardText } from 'reactstrap';*/\nimport React, {useRef, useEffect} from 'react';\nimport io from 'socket.io-client';\n\nvar Video = props => {\n\tconst mediaStream = null\n\tvar videoRef = useRef(null)\n\tuseEffect(() => {\n\t\tvar video = videoRef.current;\n\t\tasync function getStream(){\n\t\t\t mediaStream = await navigator.mediaDevices.getUserMedia({video: true});\n\t\t}\n\n\t\tgetStream();\n\t\tconst render = () => {\n\t\t\tvideo.srcObject=mediaStream;\n\t\t\t\n\t\t}\n\t\trender()\n\t},[])\n\n\treturn <video ref={videoRef}{...props}/>\n\n}\n\n\nconst Canvas = props => {\n  const canvasRef = useRef(null)\n  useEffect(() => {\n    const canvas = canvasRef.current\n    const context = canvas.getContext('2d')\n\n\t\tcanvas.width = 640;\n\t\tcanvas.height= 480;\n\t\tcontext.width= 640;\n\t\tcontext.height= 480;\n\n    context.fillStyle = '#000000'\n    context.fillRect(0, 0, context.canvas.width, context.canvas.height)\n  }, [])\n\n\tconst render = () => {\n\t\t\n\t}\n\n  return <canvas ref={canvasRef} {...props}/>\n}\n\nclass InferenceUI extends React.Component {\n    constructor(props){\n        super(props);\n        this.state = {\n\n        }\n    }\n\t\n    render() {\n        return (\n\t\t\t\t\t<Container id=\"container\">\n\t\t\t\t\t\t<Canvas/>\n\t\t\t\t\t\t<Video/>\n\t\t\t\t\t</Container>\n        );\n        \n    }\n}\nexport default InferenceUI;\n"]},"metadata":{},"sourceType":"module"}