{"ast":null,"code":"var _jsxFileName = \"/home/paula/Documents/Practica/git/user_interface/src/components/InferenceUI/Diagnosis.js\";\nimport { Modal, ModalBody, Spinner, TabContent, TabPane, Nav, NavItem, NavLink, Card, CardImg, Button, CardText, Row, Col, Container, CardTitle } from 'reactstrap';\nimport React, { useState } from 'react';\nimport classnames from 'classnames';\nimport { render } from 'react-dom';\nimport Gallery from 'react-grid-gallery';\nimport Screenshots from './Screenshots.js';\n\nclass Diagnosis extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  downloadHandler(media) {\n    this.props.downloadHandler(media);\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 4\n      }\n    }, this.props.currentState.showModalDiagnosis && /*#__PURE__*/React.createElement(Example, {\n      handlerSuper: () => {\n        this.props.handler(\"StopStream\");\n      },\n      thumbnail: this.props.thumbnail,\n      getScreenshots: () => this.props.getScreenshots(),\n      downloadHandler: media => this.downloadHandler(media),\n      currentState: this.props.currentState,\n      handler: nextState => this.handler(nextState),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 6\n      }\n    }));\n  }\n\n}\n\nconst Example = props => {\n  const {\n    className,\n    thumbnail,\n    getScreenshots,\n    downloadHandler,\n    currentState,\n    handler\n  } = props;\n  const [activeTab, setActiveTab] = useState('1');\n\n  const toggle = tab => {\n    if (activeTab !== tab) setActiveTab(tab);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Nav, {\n    tabs: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(NavItem, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(NavLink, {\n    className: classnames({\n      active: activeTab === '1'\n    }),\n    onClick: () => {\n      toggle('1');\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 11\n    }\n  }, \"Diagnostico\")), /*#__PURE__*/React.createElement(NavItem, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(NavLink, {\n    className: classnames({\n      active: activeTab === '2'\n    }),\n    onClick: () => {\n      toggle('2');\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 11\n    }\n  }, \"Descargas\"))), /*#__PURE__*/React.createElement(TabContent, {\n    activeTab: activeTab,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(TabPane, {\n    tabId: \"1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    sm: \"12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(DiagnosisTab, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 15\n    }\n  })))), /*#__PURE__*/React.createElement(TabPane, {\n    tabId: \"2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(DownloadTab, {\n    thumbnail: thumbnail,\n    getScreenshots: getScreenshots,\n    downloadHandler: downloadHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 6\n    }\n  })), /*#__PURE__*/React.createElement(TabPane, {\n    tabId: \"3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 9\n    }\n  })));\n};\n\nfunction DiagnosisTab() {\n  return /*#__PURE__*/React.createElement(Spinner, {\n    color: \"info\",\n    style: {\n      position: 'absolute',\n      margin: 'auto'\n    },\n    size: 'xl',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 3\n    }\n  });\n}\n\nconst DownloadTab = props => {\n  const {\n    thumbnail,\n    getScreenshots,\n    downloadHandler\n  } = props;\n  let screenshots = getScreenshots.call();\n  console.log(screenshots);\n  let screenshotsIsEmpty = screenshots.length === 0 ? true : false;\n  return /*#__PURE__*/React.createElement(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 4\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    sm: \"6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 8\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    body: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(CardImg, {\n    top: true,\n    width: \"100%\",\n    src: thumbnail,\n    alt: \"thumbnail\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(CardText, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 13\n    }\n  }, \"Grabaci\\xF3n del examen.\"), /*#__PURE__*/React.createElement(Button, {\n    color: \"primary\",\n    onClick: () => {\n      downloadHandler(\"video\");\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 13\n    }\n  }, \" Descargar Video\"))), !screenshotsIsEmpty && /*#__PURE__*/React.createElement(Col, {\n    sm: \"6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    body: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(CardImg, {\n    top: true,\n    width: \"100%\",\n    src: screenshots[0].src,\n    alt: \"thumbnail\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(CardText, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 13\n    }\n  }, \"Capturas de Pantalla.\"), /*#__PURE__*/React.createElement(Button, {\n    color: \"primary\",\n    onClick: () => {\n      downloadHandler(\"screenshots\");\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 13\n    }\n  }, \"Descargar capturas\")))));\n};\n\nexport default Diagnosis;","map":{"version":3,"sources":["/home/paula/Documents/Practica/git/user_interface/src/components/InferenceUI/Diagnosis.js"],"names":["Modal","ModalBody","Spinner","TabContent","TabPane","Nav","NavItem","NavLink","Card","CardImg","Button","CardText","Row","Col","Container","CardTitle","React","useState","classnames","render","Gallery","Screenshots","Diagnosis","Component","constructor","props","state","downloadHandler","media","currentState","showModalDiagnosis","handler","thumbnail","getScreenshots","nextState","Example","className","activeTab","setActiveTab","toggle","tab","active","DiagnosisTab","position","margin","DownloadTab","screenshots","call","console","log","screenshotsIsEmpty","length","src"],"mappings":";AAAA,SAASA,KAAT,EAAgBC,SAAhB,EAA2BC,OAA3B,EAAmCC,UAAnC,EAA+CC,OAA/C,EAAwDC,GAAxD,EAA6DC,OAA7D,EAAsEC,OAAtE,EAA+EC,IAA/E,EAAoFC,OAApF,EAA6FC,MAA7F,EAAsGC,QAAtG,EAAgHC,GAAhH,EAAqHC,GAArH,EAA0HC,SAA1H,EAAqIC,SAArI,QAAsJ,YAAtJ;AACA,OAAOC,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAOC,UAAP,MAAuB,YAAvB;AACA,SAASC,MAAT,QAAuB,WAAvB;AACA,OAAOC,OAAP,MAAoB,oBAApB;AACA,OAAOC,WAAP,MAAwB,kBAAxB;;AAEA,MAAMC,SAAN,SAAwBN,KAAK,CAACO,SAA9B,CAAuC;AACtCC,EAAAA,WAAW,CAACC,KAAD,EAAO;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa,EAAb;AAEA;;AACAC,EAAAA,eAAe,CAACC,KAAD,EAAO;AACpB,SAAKH,KAAL,CAAWE,eAAX,CAA2BC,KAA3B;AACD;;AAIFT,EAAAA,MAAM,GAAE;AACP,wBACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,KAAKM,KAAL,CAAWI,YAAX,CAAwBC,kBAAxB,iBACA,oBAAC,OAAD;AAAS,MAAA,YAAY,EAAE,MAAI;AAAC,aAAKL,KAAL,CAAWM,OAAX,CAAmB,YAAnB;AAAiC,OAA7D;AACY,MAAA,SAAS,EAAE,KAAKN,KAAL,CAAWO,SADlC;AAEY,MAAA,cAAc,EAAE,MAAI,KAAKP,KAAL,CAAWQ,cAAX,EAFhC;AAGY,MAAA,eAAe,EAAGL,KAAD,IAAU,KAAKD,eAAL,CAAqBC,KAArB,CAHvC;AAIY,MAAA,YAAY,EAAE,KAAKH,KAAL,CAAWI,YAJrC;AAKY,MAAA,OAAO,EAAGK,SAAD,IAAa,KAAKH,OAAL,CAAaG,SAAb,CALlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CADD;AAYA;;AAzBqC;;AA2BvC,MAAMC,OAAO,GAAIV,KAAD,IAAW;AACzB,QAAM;AACJW,IAAAA,SADI;AAEJJ,IAAAA,SAFI;AAGJC,IAAAA,cAHI;AAIJN,IAAAA,eAJI;AAKJE,IAAAA,YALI;AAMJE,IAAAA;AANI,MAOFN,KAPJ;AAQA,QAAM,CAACY,SAAD,EAAYC,YAAZ,IAA4BrB,QAAQ,CAAC,GAAD,CAA1C;;AAEA,QAAMsB,MAAM,GAAGC,GAAG,IAAI;AACpB,QAAGH,SAAS,KAAKG,GAAjB,EAAsBF,YAAY,CAACE,GAAD,CAAZ;AACvB,GAFD;;AAKA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,GAAD;AAAK,IAAA,IAAI,MAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,OAAD;AACE,IAAA,SAAS,EAAEtB,UAAU,CAAC;AAAEuB,MAAAA,MAAM,EAAEJ,SAAS,KAAK;AAAxB,KAAD,CADvB;AAEE,IAAA,OAAO,EAAE,MAAM;AAAEE,MAAAA,MAAM,CAAC,GAAD,CAAN;AAAc,KAFjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADF,CADF,eASE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,OAAD;AACE,IAAA,SAAS,EAAErB,UAAU,CAAC;AAAEuB,MAAAA,MAAM,EAAEJ,SAAS,KAAK;AAAxB,KAAD,CADvB;AAEE,IAAA,OAAO,EAAE,MAAM;AAAEE,MAAAA,MAAM,CAAC,GAAD,CAAN;AAAc,KAFjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADF,CATF,CADF,eAoBE,oBAAC,UAAD;AAAY,IAAA,SAAS,EAAEF,SAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,OAAD;AAAS,IAAA,KAAK,EAAC,GAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,GAAD;AAAK,IAAA,EAAE,EAAC,IAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,CADF,CADF,eAQE,oBAAC,OAAD;AAAS,IAAA,KAAK,EAAC,GAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACH,oBAAC,WAAD;AAAa,IAAA,SAAS,EAAEL,SAAxB;AAAmC,IAAA,cAAc,EAAEC,cAAnD;AAAmE,IAAA,eAAe,EAAEN,eAApF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADG,CARF,eAWE,oBAAC,OAAD;AAAS,IAAA,KAAK,EAAC,GAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAXF,CApBF,CADF;AAqCD,CArDD;;AAuDA,SAASe,YAAT,GAAuB;AACtB,sBACC,oBAAC,OAAD;AAAS,IAAA,KAAK,EAAC,MAAf;AAAsB,IAAA,KAAK,EAAE;AAACC,MAAAA,QAAQ,EAAC,UAAV;AAAqBC,MAAAA,MAAM,EAAC;AAA5B,KAA7B;AAAkE,IAAA,IAAI,EAAE,IAAxE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD;AAGA;;AACD,MAAMC,WAAW,GAAIpB,KAAD,IAAW;AAC7B,QAAK;AACHO,IAAAA,SADG;AAEHC,IAAAA,cAFG;AAGHN,IAAAA;AAHG,MAIHF,KAJF;AAMA,MAAIqB,WAAW,GAAGb,cAAc,CAACc,IAAf,EAAlB;AACDC,EAAAA,OAAO,CAACC,GAAR,CAAYH,WAAZ;AACC,MAAKI,kBAAkB,GAAIJ,WAAW,CAACK,MAAZ,KAAuB,CAAxB,GAA4B,IAA5B,GAAiC,KAA3D;AACD,sBACC,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACC,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,GAAD;AAAK,IAAA,EAAE,EAAC,GAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACG,oBAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,OAAD;AAAS,IAAA,GAAG,MAAZ;AAAa,IAAA,KAAK,EAAC,MAAnB;AAA0B,IAAA,GAAG,EAAGnB,SAAhC;AAA2C,IAAA,GAAG,EAAC,WAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAEE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCAFF,eAGE,oBAAC,MAAD;AAAQ,IAAA,KAAK,EAAC,SAAd;AAAwB,IAAA,OAAO,EAAE,MAAI;AAACL,MAAAA,eAAe,CAAC,OAAD,CAAf;AAAyB,KAA/D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAHF,CADH,CADJ,EAQM,CAACuB,kBAAD,iBACD,oBAAC,GAAD;AAAK,IAAA,EAAE,EAAC,GAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,OAAD;AAAS,IAAA,GAAG,MAAZ;AAAa,IAAA,KAAK,EAAC,MAAnB;AAA0B,IAAA,GAAG,EAAGJ,WAAW,CAAC,CAAD,CAAX,CAAeM,GAA/C;AAAoD,IAAA,GAAG,EAAC,WAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAEE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BAFF,eAGE,oBAAC,MAAD;AAAQ,IAAA,KAAK,EAAC,SAAd;AAAwB,IAAA,OAAO,EAAE,MAAI;AAACzB,MAAAA,eAAe,CAAC,aAAD,CAAf;AAA+B,KAArE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAHF,CADF,CATL,CADD,CADD;AAsBA,CAhCD;;AAiCA,eAAeL,SAAf","sourcesContent":["import { Modal, ModalBody, Spinner,TabContent, TabPane, Nav, NavItem, NavLink, Card,CardImg, Button,  CardText, Row, Col, Container, CardTitle } from 'reactstrap';\nimport React, {useState} from 'react';\nimport classnames from 'classnames';\nimport { render } from 'react-dom';\nimport Gallery from 'react-grid-gallery';\nimport Screenshots from './Screenshots.js';\n\nclass Diagnosis extends React.Component{\n\tconstructor(props){\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t}\n\t}\n  downloadHandler(media){\n    this.props.downloadHandler(media);\n  }\n\t\n\t\n\t\n\trender(){\n\t\treturn(\n\t\t\t<div>\n\t\t\t\t{this.props.currentState.showModalDiagnosis && \n\t\t\t\t\t<Example handlerSuper={()=>{this.props.handler(\"StopStream\")}} \n                 thumbnail={this.props.thumbnail} \n                 getScreenshots={()=>this.props.getScreenshots()}\n                 downloadHandler={(media)=> this.downloadHandler(media)}\n                 currentState={this.props.currentState}\n                 handler={(nextState)=>this.handler(nextState)}\n                 />}\n\t\t\t</div>\n\t\t);\n\t}\n}\nconst Example = (props) => {\n  const {\n    className,\n    thumbnail,\n    getScreenshots, \n    downloadHandler,\n    currentState,\n    handler\n  } = props;\n  const [activeTab, setActiveTab] = useState('1');\n\n  const toggle = tab => {\n    if(activeTab !== tab) setActiveTab(tab);\n  }\n\n  \n  return (\n    <div>\n      <Nav tabs>\n        <NavItem>\n          <NavLink\n            className={classnames({ active: activeTab === '1' })}\n            onClick={() => { toggle('1'); }}\n          >\n            Diagnostico\n          </NavLink>\n        </NavItem>\n        <NavItem>\n          <NavLink\n            className={classnames({ active: activeTab === '2' })}\n            onClick={() => { toggle('2'); }}\n          >\n            Descargas\n          </NavLink>\n        </NavItem>\n      </Nav>\n\n      <TabContent activeTab={activeTab}>\n        <TabPane tabId=\"1\">\n          <Row>\n            <Col sm=\"12\">\n              <DiagnosisTab />\n            </Col>\n          </Row>\n        </TabPane>\n        <TabPane tabId=\"2\">\n\t\t\t\t\t<DownloadTab thumbnail={thumbnail} getScreenshots={getScreenshots} downloadHandler={downloadHandler}/>\n        </TabPane>\n        <TabPane tabId=\"3\">\n        </TabPane>\n      </TabContent>\n    </div>\n  );\n}\n\nfunction DiagnosisTab(){\n\treturn(\n\t\t<Spinner color=\"info\" style={{position:'absolute',margin:'auto'}} size={'xl'}/>\n\t);\n}\nconst DownloadTab = (props) => {\n  const{\n    thumbnail,\n    getScreenshots,\n    downloadHandler,\n  }=props;\n\n  let screenshots = getScreenshots.call();\n\tconsole.log(screenshots);\n  let  screenshotsIsEmpty = (screenshots.length === 0)? true:false;\n\treturn(\n\t\t<Container>\n\t\t\t<Row>\n      \t<Col sm=\"6\">\n          <Card body>\n            <CardImg top width=\"100%\" src= {thumbnail} alt=\"thumbnail\" />\n            <CardText>Grabación del examen.</CardText>\n            <Button color='primary' onClick={()=>{downloadHandler(\"video\")}}> Descargar Video</Button>\n          </Card>\n        </Col>\n        {!screenshotsIsEmpty &&\n        <Col sm=\"6\">\n          <Card body>\n            <CardImg top width=\"100%\" src= {screenshots[0].src} alt=\"thumbnail\" />\n            <CardText>Capturas de Pantalla.</CardText>\n            <Button color='primary' onClick={()=>{downloadHandler(\"screenshots\")}}>Descargar capturas</Button>\n          </Card>\n        </Col>\n        }\n     </Row>\n\t\t</Container>\n\t);\n}\nexport default Diagnosis;\n"]},"metadata":{},"sourceType":"module"}