{"ast":null,"code":"var _jsxFileName = \"/home/paula/Documents/Practica/git/user_interface/src/components/InferenceUI/InferenceUI.js\";\nimport './InferenceUI.css';\nimport { Container } from 'reactstrap';\nimport React from 'react'; //import io from 'socket.io-client';\n\nimport WebcamStream from './WebcamStream.js';\nimport Screenshots from './Screenshots.js';\nimport Diagnosis from './Diagnosis.js';\nimport ElementsMain from './ElementsMain.js';\nimport \"react-responsive-carousel/lib/styles/carousel.min.css\";\n\nclass InferenceUI extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      current: \"SelectingSource\",\n      textMainBtn: \"Start\",\n      showStartBtn: false,\n      showCaptureBtn: false,\n      showVideoSelect: false,\n      showProgressBar: false,\n      enabledModalScreenshots: false,\n      //if requested\n      showModalDiagnosis: false,\n      disableBtnCapture: false,\n      streaming: false,\n      almostStreaming: false,\n      timeStartPressed: 0,\n      triggerCaptureScreenshot: false\n    };\n    this.childScreenshots = React.createRef();\n    this.childWebcamStream = React.createRef();\n    this.countdownFrom = 1;\n  }\n\n  async handler(nextState) {\n    await this.setState({\n      current: nextState\n    });\n    console.log(\"estado en switch: \" + this.state.current);\n    await this.setState(manageStates(this.state.current));\n  }\n\n  captureScreenshot() {\n    this.childScreenshots.current.captureScreenshot();\n  }\n\n  mirrorPreview() {\n    this.childWebcamStream.current.mirror();\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(Container, {\n      id: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 6\n      }\n    }, /*#__PURE__*/React.createElement(WebcamStream, {\n      id: \"WebcamStream\",\n      currentState: this.state,\n      handler: nextState => this.handler(nextState),\n      countdownFrom: this.countdownFrom,\n      ref: this.childWebcamStream,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 7\n      }\n    }), /*#__PURE__*/React.createElement(ElementsMain, {\n      currentState: this.state,\n      handler: nextState => this.handler(nextState),\n      captureScreenshot: () => this.captureScreenshot(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 7\n      }\n    }), /*#__PURE__*/React.createElement(Screenshots, {\n      currentState: this.state,\n      handler: nextState => this.handler(nextState),\n      ref: this.childScreenshots,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 7\n      }\n    }), /*#__PURE__*/React.createElement(Diagnosis, {\n      currentState: this.state,\n      handler: nextState => this.handler(nextState),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 7\n      }\n    }));\n  }\n\n}\n\nfunction manageStates(state) {\n  var flags = {};\n\n  switch (state) {\n    case 'OnConnection':\n      flags = {\n        textMainBtn: \"Start\",\n        showStartBtn: true,\n        showCaptureBtn: true,\n        showProgressBar: false,\n        enabledModalScreenshots: true,\n        //if requested\n        showModalDiagnosis: false,\n        disableBtnCapture: false,\n        streaming: false,\n        almostStreaming: false\n      };\n      break;\n\n    case 'Countdown':\n      flags = {\n        textMainBtn: \"Stop\",\n        showStartBtn: true,\n        showCaptureBtn: true,\n        showProgressBar: true,\n        enabledModalScreenshots: false,\n        //if requested\n        showModalDiagnosis: false,\n        disableBtnCapture: true,\n        streaming: false,\n        almostStreaming: true,\n        timeStartPressed: Date.now()\n      };\n      break;\n\n    case 'Streaming':\n      flags = {\n        textMainBtn: \"Stop\",\n        showStartBtn: true,\n        showCaptureBtn: true,\n        showProgressBar: true,\n        enabledModalScreenshots: false,\n        //if requested\n        showModalDiagnosis: false,\n        disableBtnCapture: false,\n        streaming: true,\n        almostStreaming: false\n      };\n      break;\n\n    case 'StopStream':\n      flags = {\n        textMainBtn: \"Start\",\n        showStartBtn: true,\n        showCaptureBtn: true,\n        showProgressBar: true,\n        enabledModalScreenshots: true,\n        //if requested\n        showModalDiagnosis: true,\n        disableBtnCapture: false,\n        streaming: false,\n        almostStreaming: false\n      };\n      break;\n\n    case 'closeDiagnosis':\n      flags = {\n        showModalDiagnosis: false,\n        current: 'OnConnection'\n      };\n      break;\n\n    default:\n      console.log('State not defined');\n  }\n\n  return flags;\n}\n\nexport default InferenceUI;","map":{"version":3,"sources":["/home/paula/Documents/Practica/git/user_interface/src/components/InferenceUI/InferenceUI.js"],"names":["Container","React","WebcamStream","Screenshots","Diagnosis","ElementsMain","InferenceUI","Component","constructor","props","state","current","textMainBtn","showStartBtn","showCaptureBtn","showVideoSelect","showProgressBar","enabledModalScreenshots","showModalDiagnosis","disableBtnCapture","streaming","almostStreaming","timeStartPressed","triggerCaptureScreenshot","childScreenshots","createRef","childWebcamStream","countdownFrom","handler","nextState","setState","console","log","manageStates","captureScreenshot","mirrorPreview","mirror","render","flags","Date","now"],"mappings":"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","sourcesContent":["import './InferenceUI.css';\nimport {Container, \n    } from 'reactstrap';\nimport React from 'react';\n//import io from 'socket.io-client';\nimport WebcamStream from './WebcamStream.js'\nimport Screenshots from './Screenshots.js'\nimport Diagnosis from './Diagnosis.js'\nimport ElementsMain from './ElementsMain.js'\n\nimport \"react-responsive-carousel/lib/styles/carousel.min.css\";\n\n\n\nclass InferenceUI extends React.Component {\n    constructor(props){\n        super(props);\n        this.state = {\n      \t\tcurrent: \"SelectingSource\",\n\n\t\t\t\t\ttextMainBtn: \"Start\",\n\t\t\t\t\tshowStartBtn: false,\n\t\t\t\t\tshowCaptureBtn: false,\n\t\t\t\t\tshowVideoSelect: false,\n\t\t\t\t\tshowProgressBar: false,\n\t\t\t\t\tenabledModalScreenshots: false, //if requested\n\t\t\t\t\tshowModalDiagnosis: false,\n\t\t\t\t\tdisableBtnCapture: false,\n\n          streaming: false,\n          almostStreaming: false,          \n\n\t\t\t\t\ttimeStartPressed: 0,\n\n\t\t\t\t\ttriggerCaptureScreenshot: false\n        }\n\t\t\tthis.childScreenshots = React.createRef();\n\t\t\tthis.childWebcamStream = React.createRef();\n\t\t\tthis.countdownFrom = 1;\n    }\n\n\t\tasync handler(nextState){\n\t\t\tawait this.setState({current: nextState});\n\t\t  console.log(\"estado en switch: \" + this.state.current);\n      await this.setState(manageStates(this.state.current));\n\t\t}\n\n\t\tcaptureScreenshot(){\n\t\t\tthis.childScreenshots.current.captureScreenshot();\n\t\t}\n\n    mirrorPreview(){\n      this.childWebcamStream.current.mirror();\n    }\n    render() {\n      return (\n\t\t\t\t\t<Container id=\"container\">\n\t\t\t\t\t\t\n\t\t\t\t\t\t<WebcamStream id=\"WebcamStream\" currentState={this.state} handler={(nextState)=>this.handler(nextState)} countdownFrom={this.countdownFrom} ref={this.childWebcamStream}/>\n\t\t\t\t\t\t<ElementsMain currentState={this.state} handler={(nextState)=>this.handler(nextState)} captureScreenshot={()=>this.captureScreenshot()} /> \n\t\t\t\t\t\t<Screenshots currentState={this.state} handler={(nextState)=>this.handler(nextState)} ref={this.childScreenshots} />\n\t\t\t\t\t\t<Diagnosis currentState={this.state} handler={(nextState)=>this.handler(nextState)}/>\n\t\t\t\t  </Container>\n\t\n        );\n        \n    }\n}\n\nfunction manageStates(state){\n\tvar flags = {};\n\tswitch(state){\n\t\tcase 'OnConnection':\n\t\t  flags={\n\t\t\t\t  textMainBtn: \"Start\",\n\t\t\t\t  showStartBtn: true,\n\t\t\t\t  showCaptureBtn: true,\n\t\t\t\t  showProgressBar: false,\n\t\t\t\t  enabledModalScreenshots: true, //if requested\n\t\t\t\t  showModalDiagnosis: false,\n\t\t\t\t  disableBtnCapture: false,\n  \n\t\t\t\t  streaming: false,\n\t\t\t\t  almostStreaming: false,          \n\t\t\t  };\n\t\t\t  break;\n\t\t  case 'Countdown':\n\t\t\t  flags={\n\t\t\t\t  textMainBtn: \"Stop\",\n\t\t\t\t  showStartBtn: true,\n\t\t\t\t  showCaptureBtn: true,\n\t\t\t\t  showProgressBar: true,\n\t\t\t\t  enabledModalScreenshots: false, //if requested\n\t\t\t\t  showModalDiagnosis: false,\n\t\t\t\t  disableBtnCapture: true,\n  \n\t\t\t\t  streaming: false,\n\t\t\t\t  almostStreaming: true,          \n\t\t\t\t  \n\t\t\t\t  timeStartPressed: Date.now()\n\t\t\t\t  };\n\t\t\t\t  break;\n\t\t  case 'Streaming':\n\t\t\t  flags={\n\t\t\t\t  textMainBtn: \"Stop\",\n\t\t\t\t  showStartBtn: true,\n\t\t\t\t  showCaptureBtn: true,\n\t\t\t\t  showProgressBar: true,\n\t\t\t\t  enabledModalScreenshots: false, //if requested\n\t\t\t\t  showModalDiagnosis: false,\n\t\t\t\t  disableBtnCapture: false,\n  \n\t\t\t\t  streaming: true,\n\t\t\t\t  almostStreaming: false,          \n  \n\t\t\t  };\n\t\t\t  break;\n\t\t  case 'StopStream':\n\t\t\t  flags={\n\t\t\t\t  textMainBtn: \"Start\",\n\t\t\t\t  showStartBtn: true,\n\t\t\t\t  showCaptureBtn: true,\n\t\t\t\t  showProgressBar: true,\n\t\t\t\t  enabledModalScreenshots: true, //if requested\n\t\t\t\t  showModalDiagnosis: true,\n\t\t\t\t  disableBtnCapture: false,\n  \n\t\t\t\t  streaming: false,\n\t\t\t\t  almostStreaming: false,          \n\t\t\t  };\n\t\t\t  break;\n\t\t  case 'closeDiagnosis':\n\t\t\t  flags={\n\t\t\t\t  showModalDiagnosis: false,\n          current: 'OnConnection'\n\t\t\t  };\t\n\t\t\t  break;\n\t\t  default:\n\t\t\t  console.log('State not defined');\n  \n\t  }\n\treturn flags;\n  }\nexport default InferenceUI;\n"]},"metadata":{},"sourceType":"module"}