{"ast":null,"code":"var _jsxFileName = \"/home/paula/Documents/Practica/git/user_interface/src/components/InferenceUI/InferenceUI.js\";\nimport './InferenceUI.css';\nimport { Container, Row, Col } from 'reactstrap';\nimport React from 'react'; //import io from 'socket.io-client';\n\nimport WebcamStream from './WebcamStream.js';\nimport Screenshots from './Screenshots.js';\nimport Diagnosis from './Diagnosis.js';\nimport ElementsMain from './ElementsMain.js';\nimport \"react-responsive-carousel/lib/styles/carousel.min.css\";\n\nclass InferenceUI extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      current: \"SelectingSource\",\n      textMainBtn: \"Start\",\n      showStartBtn: false,\n      showCaptureBtn: false,\n      showVideoSelect: false,\n      showProgressBar: false,\n      enabledModalScreenshots: false,\n      //if requested\n      showModalDiagnosis: false,\n      disableBtnCapture: false,\n      streaming: false,\n      almostStreaming: false,\n      timeStartPressed: 0,\n      triggerCaptureScreenshot: false,\n      showAlert: false,\n      progress: 0\n    };\n    this.childScreenshots = React.createRef();\n    this.childWebcamStream = React.createRef();\n    this.childElementsMain = React.createRef();\n    this.countdownFrom = 1;\n    this.alertTimeout = null;\n  }\n\n  async handler(nextState) {\n    await this.setState({\n      current: nextState\n    });\n    console.log(\"estado en switch: \" + this.state.current);\n    await this.setState(manageStates(this.state.current));\n  }\n\n  captureScreenshot() {\n    this.childScreenshots.current.captureScreenshot();\n  }\n\n  mirrorPreview() {\n    this.childWebcamStream.current.mirror();\n  }\n\n  changeProgress(val) {\n    this.setState({\n      progress: val\n    });\n  }\n\n  openNMAlert() {\n    this.childElementsMain.current.setState({\n      openNMAlert: true\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(Container, {\n      fluid: true,\n      id: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 6\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 8\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      sm: \"12\",\n      md: {\n        size: 6,\n        offset: 3\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(WebcamStream, {\n      id: \"WebcamStream\",\n      currentState: this.state,\n      handler: nextState => this.handler(nextState),\n      countdownFrom: this.countdownFrom,\n      ref: this.childWebcamStream,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 7\n      }\n    }), /*#__PURE__*/React.createElement(ElementsMain, {\n      currentState: this.state,\n      handler: nextState => this.handler(nextState),\n      captureScreenshot: () => this.captureScreenshot(),\n      fromServer: (signal, val) => fromServer(this, signal, val),\n      ref: this.childElementsMain,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 7\n      }\n    }), /*#__PURE__*/React.createElement(Screenshots, {\n      currentState: this.state,\n      handler: nextState => this.handler(nextState),\n      ref: this.childScreenshots,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 7\n      }\n    }), /*#__PURE__*/React.createElement(Diagnosis, {\n      currentState: this.state,\n      handler: nextState => this.handler(nextState),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 7\n      }\n    }))));\n  }\n\n}\n\nfunction fromServer(el, signal, val) {\n  if (signal.localeCompare(\"blur\") === 0) {\n    if (el.state.showAlert) {\n      clearTimeout(el.alertTimeout);\n      el.alertTimeout = setTimeout(function () {\n        el.setState({\n          showAlert: false\n        });\n      }, 5000);\n    } else {\n      el.setState({\n        showAlert: true\n      });\n      el.alertTimeout = setTimeout(function () {\n        el.setState({\n          showAlert: false\n        });\n      }, 5000);\n    }\n  } else if (signal.localeCompare(\"progress\") === 0) {\n    el.changeProgress(val);\n  } else if (signal.localeCompare(\"NM\") === 0) {\n    el.openNMAlert();\n  }\n}\n\nfunction manageStates(state) {\n  var flags = {};\n\n  switch (state) {\n    case 'OnConnection':\n      flags = {\n        textMainBtn: \"Start\",\n        showStartBtn: true,\n        showCaptureBtn: true,\n        showProgressBar: false,\n        enabledModalScreenshots: true,\n        //if requested\n        showModalDiagnosis: false,\n        disableBtnCapture: false,\n        streaming: false,\n        almostStreaming: false\n      };\n      break;\n\n    case 'Countdown':\n      flags = {\n        textMainBtn: \"Stop\",\n        showStartBtn: true,\n        showCaptureBtn: true,\n        showProgressBar: true,\n        enabledModalScreenshots: false,\n        //if requested\n        showModalDiagnosis: false,\n        disableBtnCapture: true,\n        streaming: false,\n        almostStreaming: true,\n        timeStartPressed: Date.now()\n      };\n      break;\n\n    case 'Streaming':\n      flags = {\n        textMainBtn: \"Stop\",\n        showStartBtn: true,\n        showCaptureBtn: true,\n        showProgressBar: true,\n        enabledModalScreenshots: false,\n        //if requested\n        showModalDiagnosis: false,\n        disableBtnCapture: false,\n        streaming: true,\n        almostStreaming: false\n      };\n      break;\n\n    case 'StopStream':\n      flags = {\n        textMainBtn: \"Start\",\n        showStartBtn: true,\n        showCaptureBtn: true,\n        showProgressBar: true,\n        enabledModalScreenshots: true,\n        //if requested\n        showModalDiagnosis: true,\n        disableBtnCapture: false,\n        streaming: false,\n        almostStreaming: false\n      };\n      break;\n\n    default:\n      console.log('State not defined');\n  }\n\n  return flags;\n}\n\nexport default InferenceUI;","map":{"version":3,"sources":["/home/paula/Documents/Practica/git/user_interface/src/components/InferenceUI/InferenceUI.js"],"names":["Container","Row","Col","React","WebcamStream","Screenshots","Diagnosis","ElementsMain","InferenceUI","Component","constructor","props","state","current","textMainBtn","showStartBtn","showCaptureBtn","showVideoSelect","showProgressBar","enabledModalScreenshots","showModalDiagnosis","disableBtnCapture","streaming","almostStreaming","timeStartPressed","triggerCaptureScreenshot","showAlert","progress","childScreenshots","createRef","childWebcamStream","childElementsMain","countdownFrom","alertTimeout","handler","nextState","setState","console","log","manageStates","captureScreenshot","mirrorPreview","mirror","changeProgress","val","openNMAlert","render","size","offset","signal","fromServer","el","localeCompare","clearTimeout","setTimeout","flags","Date","now"],"mappings":"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","sourcesContent":["import './InferenceUI.css';\nimport {Container, Row,Col\n    } from 'reactstrap';\nimport React from 'react';\n//import io from 'socket.io-client';\nimport WebcamStream from './WebcamStream.js'\nimport Screenshots from './Screenshots.js'\nimport Diagnosis from './Diagnosis.js'\nimport ElementsMain from './ElementsMain.js'\n\nimport \"react-responsive-carousel/lib/styles/carousel.min.css\";\n\n\n\nclass InferenceUI extends React.Component {\n    constructor(props){\n        super(props);\n        this.state = {\n      \t\tcurrent: \"SelectingSource\",\n\n\t\t\t\t\ttextMainBtn: \"Start\",\n\t\t\t\t\tshowStartBtn: false,\n\t\t\t\t\tshowCaptureBtn: false,\n\t\t\t\t\tshowVideoSelect: false,\n\t\t\t\t\tshowProgressBar: false,\n\t\t\t\t\tenabledModalScreenshots: false, //if requested\n\t\t\t\t\tshowModalDiagnosis: false,\n\t\t\t\t\tdisableBtnCapture: false,\n\n          streaming: false,\n          almostStreaming: false,          \n\n\t\t\t\t\ttimeStartPressed: 0,\n\n\t\t\t\t\ttriggerCaptureScreenshot: false,\n          showAlert: false,\n\n          progress: 0,\n        }\n\t\t\tthis.childScreenshots = React.createRef();\n\t\t\tthis.childWebcamStream = React.createRef();\n\t\t\tthis.childElementsMain = React.createRef();\n\t\t\tthis.countdownFrom = 1;\n      this.alertTimeout = null;\n    }\n\n\t\tasync handler(nextState){\n\t\t\tawait this.setState({current: nextState});\n\t\t  console.log(\"estado en switch: \" + this.state.current);\n      await this.setState(manageStates(this.state.current));\n\t\t}\n\n\t\tcaptureScreenshot(){\n\t\t\tthis.childScreenshots.current.captureScreenshot();\n\t\t}\n\n    mirrorPreview(){\n      this.childWebcamStream.current.mirror();\n    }\n    \n    changeProgress(val){\n      this.setState({progress: val});\n    }\n    openNMAlert(){\n      this.childElementsMain.current.setState({openNMAlert: true}); \n    }\n    render() {\n      return (\n\t\t\t\t\t<Container fluid id=\"container\">\n\t\t\t\t\t  <Row>\t\n            <Col sm=\"12\" md={{ size: 6, offset: 3}}>\n\t\t\t\t\t\t<WebcamStream id=\"WebcamStream\" \n                          currentState={this.state} \n                          handler={(nextState)=>this.handler(nextState)} \n                          countdownFrom={this.countdownFrom} \n                          ref={this.childWebcamStream}/>\n\t\t\t\t\t\t<ElementsMain currentState={this.state} \n                          handler={(nextState)=>this.handler(nextState)} \n                          captureScreenshot={()=>this.captureScreenshot()} \n                          fromServer={(signal,val)=>fromServer(this,signal,val)} \n                          ref={this.childElementsMain}/> \n\t\t\t\t\t\t<Screenshots  currentState={this.state} \n                          handler={(nextState)=>this.handler(nextState)} \n                          ref={this.childScreenshots} />\n\t\t\t\t\t\t<Diagnosis    currentState={this.state} \n                          handler={(nextState)=>this.handler(nextState)}/>\n            </Col>\n            </Row>\n\t\t\t\t  </Container>\n\t\n        );\n        \n    }\n}\nfunction fromServer(el,signal,val){\n  if(signal.localeCompare(\"blur\") === 0){\n    if(el.state.showAlert){\n      clearTimeout(el.alertTimeout);\n      el.alertTimeout = setTimeout(function(){el.setState({showAlert: false})},5000)\n    }\n    else{\n      el.setState({showAlert: true});\n      el.alertTimeout = setTimeout(function(){el.setState({showAlert: false})},5000)\n    }\n  }\n  else if(signal.localeCompare(\"progress\") === 0){\n    el.changeProgress(val);\n  }\n  \n  else if(signal.localeCompare(\"NM\") === 0){\n    el.openNMAlert();\n  }\n\n}\nfunction manageStates(state){\n\tvar flags = {};\n\tswitch(state){\n\t\tcase 'OnConnection':\n\t\t  flags={\n\t\t\t\t  textMainBtn: \"Start\",\n\t\t\t\t  showStartBtn: true,\n\t\t\t\t  showCaptureBtn: true,\n\t\t\t\t  showProgressBar: false,\n\t\t\t\t  enabledModalScreenshots: true, //if requested\n\t\t\t\t  showModalDiagnosis: false,\n\t\t\t\t  disableBtnCapture: false,\n  \n\t\t\t\t  streaming: false,\n\t\t\t\t  almostStreaming: false,          \n\t\t\t  };\n\t\t\t  break;\n\t\t  case 'Countdown':\n\t\t\t  flags={\n\t\t\t\t  textMainBtn: \"Stop\",\n\t\t\t\t  showStartBtn: true,\n\t\t\t\t  showCaptureBtn: true,\n\t\t\t\t  showProgressBar: true,\n\t\t\t\t  enabledModalScreenshots: false, //if requested\n\t\t\t\t  showModalDiagnosis: false,\n\t\t\t\t  disableBtnCapture: true,\n  \n\t\t\t\t  streaming: false,\n\t\t\t\t  almostStreaming: true,          \n\t\t\t\t  \n\t\t\t\t  timeStartPressed: Date.now()\n\t\t\t\t  };\n\t\t\t\t  break;\n\t\t  case 'Streaming':\n\t\t\t  flags={\n\t\t\t\t  textMainBtn: \"Stop\",\n\t\t\t\t  showStartBtn: true,\n\t\t\t\t  showCaptureBtn: true,\n\t\t\t\t  showProgressBar: true,\n\t\t\t\t  enabledModalScreenshots: false, //if requested\n\t\t\t\t  showModalDiagnosis: false,\n\t\t\t\t  disableBtnCapture: false,\n  \n\t\t\t\t  streaming: true,\n\t\t\t\t  almostStreaming: false,          \n  \n\t\t\t  };\n\t\t\t  break;\n\t\t  case 'StopStream':\n\t\t\t  flags={\n\t\t\t\t  textMainBtn: \"Start\",\n\t\t\t\t  showStartBtn: true,\n\t\t\t\t  showCaptureBtn: true,\n\t\t\t\t  showProgressBar: true,\n\t\t\t\t  enabledModalScreenshots: true, //if requested\n\t\t\t\t  showModalDiagnosis: true,\n\t\t\t\t  disableBtnCapture: false,\n  \n\t\t\t\t  streaming: false,\n\t\t\t\t  almostStreaming: false,          \n\t\t\t  };\n\t\t\t  break;\n\t\t  default:\n\t\t\t  console.log('State not defined');\n  \n\t  }\n\treturn flags;\n  }\nexport default InferenceUI;\n"]},"metadata":{},"sourceType":"module"}