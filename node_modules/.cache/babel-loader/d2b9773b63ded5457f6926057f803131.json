{"ast":null,"code":"var _jsxFileName = \"/home/paula/Documents/Practica/git/user_interface/src/components/InferenceUI/Diagnosis.js\";\nimport { Modal, ModalHeader, ModalBody, ModalFooter, Spinner, TabContent, TabPane, Nav, NavItem, NavLink, Card, CardImg, Button, CardTitle, CardBody, CardText, Row, Col, Container } from 'reactstrap';\nimport React, { useState } from 'react';\nimport classnames from 'classnames';\n\nclass Diagnosis extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  downloadHandler(media) {\n    this.props.downloadHandler(media);\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 4\n      }\n    }, this.props.currentState.showModalDiagnosis && /*#__PURE__*/React.createElement(ModalDiagnosis, {\n      handlerSuper: () => {\n        this.props.handler(\"OnConnection\");\n      },\n      thumbnail: this.props.thumbnail,\n      getScreenshots: () => this.props.getScreenshots(),\n      downloadHandler: media => this.downloadHandler(media),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 11\n      }\n    }));\n  }\n\n}\n\nconst ModalDiagnosis = props => {\n  const {\n    className,\n    thumbnail,\n    getScreenshots,\n    downloadHandler\n  } = props;\n  const [modal, setModal] = useState(true);\n\n  const toggle = () => {\n    setModal(!modal);\n    props.handlerSuper();\n  };\n\n  const [activeTab, setActiveTab] = useState('1');\n\n  const toggle2 = tab => {\n    if (activeTab !== tab) setActiveTab(tab);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Modal, {\n    isOpen: modal,\n    toggle: toggle,\n    className: className,\n    size: 'xl',\n    style: {\n      height: \"100px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(ModalBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Nav, {\n    tabs: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 6\n    }\n  }, /*#__PURE__*/React.createElement(NavItem, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(NavLink, {\n    className: classnames({\n      active: activeTab === '1'\n    }),\n    onClick: () => {\n      toggle2('1');\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 8\n    }\n  }, \"Diagnostico\")), /*#__PURE__*/React.createElement(NavItem, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(NavLink, {\n    className: classnames({\n      active: activeTab === '2'\n    }),\n    onClick: () => {\n      toggle2('2');\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 8\n    }\n  }, \"Descargas\")), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      position: 'absolute',\n      height: \"500px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(TabContent, {\n    activeTab: activeTab,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 6\n    }\n  }, /*#__PURE__*/React.createElement(TabPane, {\n    tabId: \"1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(DiagnosisTab, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 8\n    }\n  })), /*#__PURE__*/React.createElement(TabPane, {\n    tabId: \"2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(DownloadTab, {\n    thumbnail: thumbnail,\n    getScreenshots: getScreenshots,\n    downloadHandler: downloadHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 8\n    }\n  }))))));\n};\n\nfunction DiagnosisTab() {\n  return /*#__PURE__*/React.createElement(Spinner, {\n    color: \"info\",\n    style: {\n      position: 'absolute',\n      margin: 'auto'\n    },\n    size: 'xl',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 3\n    }\n  });\n}\n\nconst DownloadTab = props => {\n  const {\n    thumbnail,\n    getScreenshots,\n    downloadHandler\n  } = props;\n  let screenshots = getScreenshots.call();\n  let screenshotsIsEmpty = screenshots.length === 0 ? true : false;\n  return /*#__PURE__*/React.createElement(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 4\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    sm: \"6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 8\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    body: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(CardImg, {\n    top: true,\n    width: \"100%\",\n    src: thumbnail,\n    alt: \"thumbnail\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(CardText, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 13\n    }\n  }, \"Grabaci\\xF3n del examen.\"), /*#__PURE__*/React.createElement(Button, {\n    color: \"primary\",\n    onClick: () => {\n      downloadHandler(\"video\");\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 13\n    }\n  }, \" Descargar Video\"))), !screenshotsIsEmpty && /*#__PURE__*/React.createElement(Col, {\n    sm: \"6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    body: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(CardImg, {\n    top: true,\n    width: \"100%\",\n    src: screenshots[0].src,\n    alt: \"thumbnail\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(CardText, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 13\n    }\n  }, \"Capturas de Pantalla.\"), /*#__PURE__*/React.createElement(Button, {\n    color: \"primary\",\n    onClick: () => {\n      downloadHandler(\"screenshots\");\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 13\n    }\n  }, \"Descargar capturas\")))));\n};\n\nexport default Diagnosis;","map":{"version":3,"sources":["/home/paula/Documents/Practica/git/user_interface/src/components/InferenceUI/Diagnosis.js"],"names":["Modal","ModalHeader","ModalBody","ModalFooter","Spinner","TabContent","TabPane","Nav","NavItem","NavLink","Card","CardImg","Button","CardTitle","CardBody","CardText","Row","Col","Container","React","useState","classnames","Diagnosis","Component","constructor","props","state","downloadHandler","media","render","currentState","showModalDiagnosis","handler","thumbnail","getScreenshots","ModalDiagnosis","className","modal","setModal","toggle","handlerSuper","activeTab","setActiveTab","toggle2","tab","height","active","position","DiagnosisTab","margin","DownloadTab","screenshots","call","screenshotsIsEmpty","length","src"],"mappings":";AAAA,SAASA,KAAT,EAAgBC,WAAhB,EAA6BC,SAA7B,EAAwCC,WAAxC,EAAqDC,OAArD,EAA6DC,UAA7D,EAAyEC,OAAzE,EAAkFC,GAAlF,EAAuFC,OAAvF,EAAgGC,OAAhG,EAAyGC,IAAzG,EAA8GC,OAA9G,EAAuHC,MAAvH,EAA+HC,SAA/H,EAA0IC,QAA1I,EAAoJC,QAApJ,EAA8JC,GAA9J,EAAmKC,GAAnK,EAAwKC,SAAxK,QAAyL,YAAzL;AACA,OAAOC,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAOC,UAAP,MAAuB,YAAvB;;AACA,MAAMC,SAAN,SAAwBH,KAAK,CAACI,SAA9B,CAAuC;AACtCC,EAAAA,WAAW,CAACC,KAAD,EAAO;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa,EAAb;AAEA;;AACAC,EAAAA,eAAe,CAACC,KAAD,EAAO;AACpB,SAAKH,KAAL,CAAWE,eAAX,CAA2BC,KAA3B;AACD;;AAEFC,EAAAA,MAAM,GAAE;AACP,wBACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,KAAKJ,KAAL,CAAWK,YAAX,CAAwBC,kBAAxB,iBACK,oBAAC,cAAD;AAAgB,MAAA,YAAY,EAAE,MAAI;AAAC,aAAKN,KAAL,CAAWO,OAAX,CAAmB,cAAnB;AAAmC,OAAtE;AACgB,MAAA,SAAS,EAAE,KAAKP,KAAL,CAAWQ,SADtC;AAEgB,MAAA,cAAc,EAAE,MAAI,KAAKR,KAAL,CAAWS,cAAX,EAFpC;AAGgB,MAAA,eAAe,EAAGN,KAAD,IAAU,KAAKD,eAAL,CAAqBC,KAArB,CAH3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFP,CADD;AASA;;AApBqC;;AAuBvC,MAAMO,cAAc,GAAGV,KAAD,IAAW;AAC/B,QAAM;AACJW,IAAAA,SADI;AAEJH,IAAAA,SAFI;AAGJC,IAAAA,cAHI;AAIJP,IAAAA;AAJI,MAKFF,KALJ;AAOA,QAAM,CAACY,KAAD,EAAQC,QAAR,IAAoBlB,QAAQ,CAAC,IAAD,CAAlC;;AAEA,QAAMmB,MAAM,GAAG,MAAM;AACpBD,IAAAA,QAAQ,CAAC,CAACD,KAAF,CAAR;AACDZ,IAAAA,KAAK,CAACe,YAAN;AACA,GAHA;;AAKD,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BtB,QAAQ,CAAC,GAAD,CAA1C;;AACC,QAAMuB,OAAO,GAAGC,GAAG,IAAI;AACrB,QAAGH,SAAS,KAAKG,GAAjB,EAAsBF,YAAY,CAACE,GAAD,CAAZ;AACvB,GAFD;;AAGA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,KAAD;AAAO,IAAA,MAAM,EAAEP,KAAf;AAAsB,IAAA,MAAM,EAAEE,MAA9B;AAAsC,IAAA,SAAS,EAAEH,SAAjD;AAA4D,IAAA,IAAI,EAAE,IAAlE;AAAwE,IAAA,KAAK,EAAE;AAACS,MAAAA,MAAM,EAAE;AAAT,KAA/E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACF,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACC,oBAAC,GAAD;AAAK,IAAA,IAAI,MAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACC,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACC,oBAAC,OAAD;AAAS,IAAA,SAAS,EAAExB,UAAU,CAAC;AAAEyB,MAAAA,MAAM,EAAEL,SAAS,KAAK;AAAxB,KAAD,CAA9B;AACK,IAAA,OAAO,EAAE,MAAM;AAAEE,MAAAA,OAAO,CAAC,GAAD,CAAP;AAAe,KADrC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADD,CADD,eASC,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACC,oBAAC,OAAD;AAAS,IAAA,SAAS,EAAEtB,UAAU,CAAC;AAAEyB,MAAAA,MAAM,EAAEL,SAAS,KAAK;AAAxB,KAAD,CAA9B;AACK,IAAA,OAAO,EAAE,MAAM;AAAEE,MAAAA,OAAO,CAAC,GAAD,CAAP;AAAe,KADrC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADD,CATD,eAeS;AAAK,IAAA,KAAK,EAAE;AAACI,MAAAA,QAAQ,EAAE,UAAX;AAAuBF,MAAAA,MAAM,EAAE;AAA/B,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAfT,CADD,eAmBC,oBAAC,UAAD;AAAY,IAAA,SAAS,EAAEJ,SAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACC,oBAAC,OAAD;AAAS,IAAA,KAAK,EAAC,GAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACC,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,CADD,eAIC,oBAAC,OAAD;AAAS,IAAA,KAAK,EAAC,GAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACC,oBAAC,WAAD;AAAa,IAAA,SAAS,EAAER,SAAxB;AAAmC,IAAA,cAAc,EAAEC,cAAnD;AAAmE,IAAA,eAAe,EAAEP,eAApF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,CAJD,CAnBD,CADE,CADF,CADF;AAmCD,CAtDD;;AAuDA,SAASqB,YAAT,GAAuB;AACtB,sBACC,oBAAC,OAAD;AAAS,IAAA,KAAK,EAAC,MAAf;AAAsB,IAAA,KAAK,EAAE;AAACD,MAAAA,QAAQ,EAAC,UAAV;AAAqBE,MAAAA,MAAM,EAAC;AAA5B,KAA7B;AAAkE,IAAA,IAAI,EAAE,IAAxE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD;AAGA;;AACD,MAAMC,WAAW,GAAIzB,KAAD,IAAW;AAC7B,QAAK;AACHQ,IAAAA,SADG;AAEHC,IAAAA,cAFG;AAGHP,IAAAA;AAHG,MAIHF,KAJF;AAMA,MAAI0B,WAAW,GAAGjB,cAAc,CAACkB,IAAf,EAAlB;AACA,MAAKC,kBAAkB,GAAIF,WAAW,CAACG,MAAZ,KAAuB,CAAxB,GAA4B,IAA5B,GAAiC,KAA3D;AACD,sBACC,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACC,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,GAAD;AAAK,IAAA,EAAE,EAAC,GAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACG,oBAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,OAAD;AAAS,IAAA,GAAG,MAAZ;AAAa,IAAA,KAAK,EAAC,MAAnB;AAA0B,IAAA,GAAG,EAAGrB,SAAhC;AAA2C,IAAA,GAAG,EAAC,WAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAEE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCAFF,eAGE,oBAAC,MAAD;AAAQ,IAAA,KAAK,EAAC,SAAd;AAAwB,IAAA,OAAO,EAAE,MAAI;AAACN,MAAAA,eAAe,CAAC,OAAD,CAAf;AAAyB,KAA/D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAHF,CADH,CADJ,EAQM,CAAC0B,kBAAD,iBACD,oBAAC,GAAD;AAAK,IAAA,EAAE,EAAC,GAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,OAAD;AAAS,IAAA,GAAG,MAAZ;AAAa,IAAA,KAAK,EAAC,MAAnB;AAA0B,IAAA,GAAG,EAAGF,WAAW,CAAC,CAAD,CAAX,CAAeI,GAA/C;AAAoD,IAAA,GAAG,EAAC,WAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAEE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BAFF,eAGE,oBAAC,MAAD;AAAQ,IAAA,KAAK,EAAC,SAAd;AAAwB,IAAA,OAAO,EAAE,MAAI;AAAC5B,MAAAA,eAAe,CAAC,aAAD,CAAf;AAA+B,KAArE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAHF,CADF,CATL,CADD,CADD;AAsBA,CA/BD;;AAgCA,eAAeL,SAAf","sourcesContent":["import { Modal, ModalHeader, ModalBody, ModalFooter, Spinner,TabContent, TabPane, Nav, NavItem, NavLink, Card,CardImg, Button, CardTitle, CardBody, CardText, Row, Col, Container } from 'reactstrap';\nimport React, {useState} from 'react';\nimport classnames from 'classnames';\nclass Diagnosis extends React.Component{\n\tconstructor(props){\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t}\n\t}\n  downloadHandler(media){\n    this.props.downloadHandler(media);\n  }\n\n\trender(){\n\t\treturn(\n\t\t\t<div>\n\t\t\t\t{this.props.currentState.showModalDiagnosis && \n          <ModalDiagnosis handlerSuper={()=>{this.props.handler(\"OnConnection\")}} \n                          thumbnail={this.props.thumbnail} \n                          getScreenshots={()=>this.props.getScreenshots()}\n                          downloadHandler={(media)=> this.downloadHandler(media)}/>}\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nconst ModalDiagnosis= (props) => {\n  const {\n    className,\n    thumbnail,\n    getScreenshots, \n    downloadHandler\n  } = props;\n\n  const [modal, setModal] = useState(true);\n\n  const toggle = () => {\n  \tsetModal(!modal);\n\t\tprops.handlerSuper();\n\t}\n  \n\tconst [activeTab, setActiveTab] = useState('1');\n  const toggle2 = tab => {\n    if(activeTab !== tab) setActiveTab(tab);\n  }\n  return (\n    <div>\n      <Modal isOpen={modal} toggle={toggle} className={className} size={'xl'} style={{height: \"100px\"}}>\n\t\t\t\t<ModalBody>\n\t\t\t\t\t<Nav tabs>\n\t\t\t\t\t\t<NavItem>\n\t\t\t\t\t\t\t<NavLink className={classnames({ active: activeTab === '1' })}\n\t\t\t\t\t\t\t\t\t\t\t onClick={() => { toggle2('1'); }}>\n\t\t\t\t\t\t\t\t\t\t\t Diagnostico\n\t\t\t\t\t\t\t</NavLink>\n              \n\t\t\t\t\t\t</NavItem>\n\n\t\t\t\t\t\t<NavItem>\n\t\t\t\t\t\t\t<NavLink className={classnames({ active: activeTab === '2' })}\n\t\t\t\t\t\t\t\t\t\t\t onClick={() => { toggle2('2'); }}>\n\t\t\t\t\t\t\t\t       Descargas\n\t\t\t\t\t\t\t</NavLink>\n\t\t\t\t\t\t</NavItem>\n              <div style={{position: 'absolute', height: \"500px\"}}></div>\n\t\t\t\t\t</Nav>\n\n\t\t\t\t\t<TabContent activeTab={activeTab}>\n\t\t\t\t\t\t<TabPane tabId=\"1\">\n\t\t\t\t\t\t\t<DiagnosisTab />\n\t\t\t\t\t\t</TabPane>\n\t\t\t\t\t\t<TabPane tabId=\"2\">\n\t\t\t\t\t\t\t<DownloadTab thumbnail={thumbnail} getScreenshots={getScreenshots} downloadHandler={downloadHandler}/>\n\t\t\t\t\t\t</TabPane>\n\t\t\t\t\t</TabContent>\n\n        </ModalBody>\n      </Modal>\n    </div>\n  );\n}\nfunction DiagnosisTab(){\n\treturn(\n\t\t<Spinner color=\"info\" style={{position:'absolute',margin:'auto'}} size={'xl'}/>\n\t);\n}\nconst DownloadTab = (props) => {\n  const{\n    thumbnail,\n    getScreenshots,\n    downloadHandler,\n  }=props;\n\n  let screenshots = getScreenshots.call();\n  let  screenshotsIsEmpty = (screenshots.length === 0)? true:false;\n\treturn(\n\t\t<Container>\n\t\t\t<Row>\n      \t<Col sm=\"6\">\n          <Card body>\n            <CardImg top width=\"100%\" src= {thumbnail} alt=\"thumbnail\" />\n            <CardText>Grabación del examen.</CardText>\n            <Button color='primary' onClick={()=>{downloadHandler(\"video\")}}> Descargar Video</Button>\n          </Card>\n        </Col>\n        {!screenshotsIsEmpty &&\n        <Col sm=\"6\">\n          <Card body>\n            <CardImg top width=\"100%\" src= {screenshots[0].src} alt=\"thumbnail\" />\n            <CardText>Capturas de Pantalla.</CardText>\n            <Button color='primary' onClick={()=>{downloadHandler(\"screenshots\")}}>Descargar capturas</Button>\n          </Card>\n        </Col>\n        }\n     </Row>\n\t\t</Container>\n\t);\n}\nexport default Diagnosis;\n"]},"metadata":{},"sourceType":"module"}