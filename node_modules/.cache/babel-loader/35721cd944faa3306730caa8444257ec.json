{"ast":null,"code":"/*\nIdle:\n    Seleccionando una fuente de video (si es que no hubiera alguna seleccionada):\n        * Renderizar el canvas y no el video.\n        * Actualizar el contenido del boton de control a \"Empezar\" y deshabilitarlo.\n        * Mostrar un mensaje en el canvas indicando que seleccione una fuente en el panel.\n        * Mostrar en el panel la pestaña de configuración, deshabilitando las otras.\n        * Deshabilitar el botón de captura.\n        * Esconder la barra de progreso.\n        * Esconder el spinner.\n    # Nota 1: En este estado se debe ejecutar una funcion de limpieza que resetee toda la memoria.\nGetCon:\n    Negociando la conexión con AWS.\n        * Renderizar el canvas y no el video.\n        * Actualizar el contenido del boton de control a \"Cancelar\" y deshabilitarlo.\n        * Mostrar un mensaje en el canvas indicando que se está estableciendo conexión.\n        * Mostrar en el panel la pestaña de configuración, deshabilitando las otras.\n        * Deshabilitar el botón de captura.\n        * Esconder la barra de progreso.\n        * Mostrar el spinner.\n\nCountDown:\n    Mostramos un overlay con una cuenta atrás de 10 segundos antes de empezar.\n        * Renderizar el canvas y no el video.\n        * Actualizar el contenido del boton de control a \"Cancelar\" y habilitarlo.\n        * Mostrar un countdown sobre el canvas.\n        * Mostrar en el panel la pestaña de configuración, deshabilitando las otras.\n        * Deshabilitar el botón de captura.\n        * Mostrar la barra de progreso.\n        * Esconder el spinner.\n\nExamination:\n    Examinación en curso. Enviamos los frames a AWS.\n        * Renderizar el canvas y no el video.\n        * Actualizar el contenido del boton de control a \"Finalizar\" y habilitarlo.\n        * Mostrar sólo la imagen del dispositivo sobre el canvas.\n        * Mostrar en el panel la pestaña de capturas, deshabilitando las otras.\n        * Habilitar el botón de captura.\n        * Mostrar la barra de progreso.\n        * Esconder el spinner.\n\nReview:\n    La examinación ya terminó. Esperamos que llegue el diagnóstico. Ofrecemos descargas.\n        * Renderizar el video y no el canvas.\n        * Actualizar el contenido del boton de control a \"Nueva Examinación\" y habilitarlo.\n        * Ocultar el canvas.\n        * Mostrar en el panel la pestaña de capturas, descargas y diagnóstico, deshabilitando la otra.\n        * Habilitar el botón de captura.\n        * Esconder la barra de progreso.\n        * Esconder el spinner.\n    # Nota 1: En este caso se ofrece además la posibilidad de generar capturas adicionales desde el video.\n    # Nota 2: Se debe mostrar un spinner dentro de la pestaña de diagnóstico mientras llega un diagnóstico.\n\nVideo -> Tiene un src fijo.\nCanvas -> Obtiene capturas desde el video.\nControles:\n    Start/Stop/Cancel\n    Captura\n    Spinner\nProgreso -> Se activa solo durante la examinacion.\nMenu -> 4 tabs.\n    Configuracion: Espejado y la selección de cámara.\n    Capturas: Muestra galería con las capturas de cámara realizadas.\n    Descargas: Nos ofrece el video grabado y las capturas realizadas.\n    Diagnostico: Resumen de los resultados de la examinación.\n*/\nexport function manageStates(state) {\n  var flags = {};\n\n  switch (state) {\n    case 'Idle':\n      flags = {\n        // Render canvas or video\n        renderCanvas: true,\n        // Canvas Message\n        canvasMessage: \"Seleccione un dispositivo de imagen en el panel de configuración.\",\n        // Progress Bar props\n        showProgressBar: false,\n        // Show Spinner\n        showSpinner: false,\n        // Button state\n        textCtrlBtn: \"Empezar\",\n        enableCtrlBtn: true,\n        enableCaptureBtn: false,\n        // Side Panel\n\n        /*\n        enableReportTab: false,\n        enableDiagnosisTab: false,\n        enableConfigTab: true,\n        enableGalleryTab: false,\n        */\n        tabsEnabled: [1, 0, 0, 0],\n        GallerySrc: [],\n        isVideoLoading: true,\n        hideSidePanel: false,\n        tabOn: 1\n      };\n      break;\n\n    case 'GetCon':\n      flags = {\n        // Render canvas or video\n        renderCanvas: true,\n        // Canvas Message\n        canvasMessage: \"Estableciendo conexión.\",\n        // Progress Bar props\n        showProgressBar: false,\n        // Show Spinner\n        showSpinner: false,\n        // Button state\n        textCtrlBtn: \"Cancelar\",\n        enableCtrlBtn: false,\n        enableCaptureBtn: false,\n        // Side Panel\n\n        /*\n        enableReportTab: false,\n        enableDiagnosisTab: false,\n        enableConfigTab: true,\n        enableGalleryTab: false\n        */\n        tabsEnabled: [0, 1, 0, 0]\n      };\n      break;\n\n    case 'Countdown':\n      flags = {\n        // Render canvas or video\n        renderCanvas: true,\n        // Canvas Message\n        canvasMessage: \"\",\n        // Progress Bar props\n        showProgressBar: true,\n        // Show Spinner\n        showSpinner: false,\n        // Button state\n        textCtrlBtn: \"Cancelar\",\n        enableCtrlBtn: true,\n        enableCaptureBtn: false,\n        // Side Panel\n\n        /*\n        enableReportTab: false,\n        enableDiagnosisTab: false,\n        enableConfigTab: false,\n        enableGalleryTab: false\n        */\n        tabsEnabled: [0, 0, 0, 0]\n      };\n      break;\n\n    case 'Examination':\n      flags = {\n        // Render canvas or video\n        renderCanvas: true,\n        // Canvas Message\n        canvasMessage: \"\",\n        // Progress Bar props\n        showProgressBar: true,\n        // Show Spinner\n        showSpinner: false,\n        // Button state\n        textCtrlBtn: \"Finalizar\",\n        enableCtrlBtn: true,\n        enableCaptureBtn: true,\n        // Side Panel\n\n        /*\n        enableReportTab: false,\n        enableDiagnosisTab: false,\n        enableConfigTab: false,\n        enableGalleryTab: true\n        */\n        tabsEnabled: [0, 1, 0, 0]\n      };\n      break;\n\n    case 'Review':\n      flags = {\n        // Render canvas or video\n        renderCanvas: false,\n        // Canvas Message\n        canvasMessage: \"\",\n        // Progress Bar props\n        showProgressBar: false,\n        // Show Spinner\n        showSpinner: false,\n        // Button state\n        textCtrlBtn: \"Nueva Examinación\",\n        enableCtrlBtn: true,\n        enableCaptureBtn: true,\n        // Side Panel\n\n        /*\n        enableReportTab: true,\n        enableDiagnosisTab: true,\n        enableConfigTab: false,\n        enableGalleryTab: true\n        */\n        tabsEnabled: [0, 1, 1, 1]\n      };\n      break;\n\n    default:\n      console.log('State not defined');\n  }\n\n  return flags;\n}\nexport default {\n  manageStates\n};","map":{"version":3,"sources":["/home/paula/Documents/Practica/git/user_interface/src/components/InferenceUI/functions.js"],"names":["manageStates","state","flags","renderCanvas","canvasMessage","showProgressBar","showSpinner","textCtrlBtn","enableCtrlBtn","enableCaptureBtn","tabsEnabled","GallerySrc","isVideoLoading","hideSidePanel","tabOn","console","log"],"mappings":"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","sourcesContent":["/*\nIdle:\n    Seleccionando una fuente de video (si es que no hubiera alguna seleccionada):\n        * Renderizar el canvas y no el video.\n        * Actualizar el contenido del boton de control a \"Empezar\" y deshabilitarlo.\n        * Mostrar un mensaje en el canvas indicando que seleccione una fuente en el panel.\n        * Mostrar en el panel la pestaña de configuración, deshabilitando las otras.\n        * Deshabilitar el botón de captura.\n        * Esconder la barra de progreso.\n        * Esconder el spinner.\n    # Nota 1: En este estado se debe ejecutar una funcion de limpieza que resetee toda la memoria.\nGetCon:\n    Negociando la conexión con AWS.\n        * Renderizar el canvas y no el video.\n        * Actualizar el contenido del boton de control a \"Cancelar\" y deshabilitarlo.\n        * Mostrar un mensaje en el canvas indicando que se está estableciendo conexión.\n        * Mostrar en el panel la pestaña de configuración, deshabilitando las otras.\n        * Deshabilitar el botón de captura.\n        * Esconder la barra de progreso.\n        * Mostrar el spinner.\n\nCountDown:\n    Mostramos un overlay con una cuenta atrás de 10 segundos antes de empezar.\n        * Renderizar el canvas y no el video.\n        * Actualizar el contenido del boton de control a \"Cancelar\" y habilitarlo.\n        * Mostrar un countdown sobre el canvas.\n        * Mostrar en el panel la pestaña de configuración, deshabilitando las otras.\n        * Deshabilitar el botón de captura.\n        * Mostrar la barra de progreso.\n        * Esconder el spinner.\n\nExamination:\n    Examinación en curso. Enviamos los frames a AWS.\n        * Renderizar el canvas y no el video.\n        * Actualizar el contenido del boton de control a \"Finalizar\" y habilitarlo.\n        * Mostrar sólo la imagen del dispositivo sobre el canvas.\n        * Mostrar en el panel la pestaña de capturas, deshabilitando las otras.\n        * Habilitar el botón de captura.\n        * Mostrar la barra de progreso.\n        * Esconder el spinner.\n\nReview:\n    La examinación ya terminó. Esperamos que llegue el diagnóstico. Ofrecemos descargas.\n        * Renderizar el video y no el canvas.\n        * Actualizar el contenido del boton de control a \"Nueva Examinación\" y habilitarlo.\n        * Ocultar el canvas.\n        * Mostrar en el panel la pestaña de capturas, descargas y diagnóstico, deshabilitando la otra.\n        * Habilitar el botón de captura.\n        * Esconder la barra de progreso.\n        * Esconder el spinner.\n    # Nota 1: En este caso se ofrece además la posibilidad de generar capturas adicionales desde el video.\n    # Nota 2: Se debe mostrar un spinner dentro de la pestaña de diagnóstico mientras llega un diagnóstico.\n\nVideo -> Tiene un src fijo.\nCanvas -> Obtiene capturas desde el video.\nControles:\n    Start/Stop/Cancel\n    Captura\n    Spinner\nProgreso -> Se activa solo durante la examinacion.\nMenu -> 4 tabs.\n    Configuracion: Espejado y la selección de cámara.\n    Capturas: Muestra galería con las capturas de cámara realizadas.\n    Descargas: Nos ofrece el video grabado y las capturas realizadas.\n    Diagnostico: Resumen de los resultados de la examinación.\n*/\n\nexport function manageStates(state){\n\tvar flags = {};\n\tswitch(state){\n\t\tcase 'Idle':\n            flags={\n                // Render canvas or video\n                renderCanvas: true,\n                // Canvas Message\n                canvasMessage: \"Seleccione un dispositivo de imagen en el panel de configuración.\",\n                // Progress Bar props\n                showProgressBar: false,\n                // Show Spinner\n                showSpinner: false,\n                // Button state\n                textCtrlBtn: \"Empezar\",\n                enableCtrlBtn: true,\n                enableCaptureBtn: false,\n                // Side Panel\n                /*\n                enableReportTab: false,\n                enableDiagnosisTab: false,\n                enableConfigTab: true,\n                enableGalleryTab: false,\n*/\n                tabsEnabled: [1,0,0,0],\n  \t\t\t\t\t\t\tGallerySrc: [],\n  \n  \t\t\t\t\t\t\tisVideoLoading: true,\n  \t\t\t\t\t\t\thideSidePanel: false,\n  \n  \t\t\t\t\t\t\ttabOn: 1\n\n            };\n            break;\n        case 'GetCon':\n            flags={\n                // Render canvas or video\n                renderCanvas: true,\n                // Canvas Message\n                canvasMessage: \"Estableciendo conexión.\",\n                // Progress Bar props\n                showProgressBar: false,\n                // Show Spinner\n                showSpinner: false,\n                // Button state\n                textCtrlBtn: \"Cancelar\",\n                enableCtrlBtn: false,\n                enableCaptureBtn: false,\n                // Side Panel\n                /*\n                enableReportTab: false,\n                enableDiagnosisTab: false,\n                enableConfigTab: true,\n                enableGalleryTab: false\n*/\n                tabsEnabled: [0,1,0,0],\n            };\n            break;\n        case 'Countdown':\n            flags={\t\t\t  \n                // Render canvas or video\n                renderCanvas: true,\n                // Canvas Message\n                canvasMessage: \"\",\n                // Progress Bar props\n                showProgressBar: true,\n                // Show Spinner\n                showSpinner: false,\n                // Button state\n                textCtrlBtn: \"Cancelar\",\n                enableCtrlBtn: true,\n                enableCaptureBtn: false,\n                // Side Panel\n                /*\n                enableReportTab: false,\n                enableDiagnosisTab: false,\n                enableConfigTab: false,\n                enableGalleryTab: false\n*/\n                tabsEnabled: [0,0,0,0],\n            };\n            break;\n        case 'Examination':\n            flags={\n                // Render canvas or video\n                renderCanvas: true,\n                // Canvas Message\n                canvasMessage: \"\",\n                // Progress Bar props\n                showProgressBar: true,\n                // Show Spinner\n                showSpinner: false,\n                // Button state\n                textCtrlBtn: \"Finalizar\",\n                enableCtrlBtn: true,\n                enableCaptureBtn: true,\n                // Side Panel\n                /*\n                enableReportTab: false,\n                enableDiagnosisTab: false,\n                enableConfigTab: false,\n                enableGalleryTab: true\n*/\n                tabsEnabled: [0,1,0,0],\n            };\n            break;\n        case 'Review':\n            flags={\n                // Render canvas or video\n                renderCanvas: false,\n                // Canvas Message\n                canvasMessage: \"\",\n                // Progress Bar props\n                showProgressBar: false,\n                // Show Spinner\n                showSpinner: false,\n                // Button state\n                textCtrlBtn: \"Nueva Examinación\",\n                enableCtrlBtn: true,\n                enableCaptureBtn: true,\n                // Side Panel\n                /*\n                enableReportTab: true,\n                enableDiagnosisTab: true,\n                enableConfigTab: false,\n                enableGalleryTab: true\n*/\n                tabsEnabled: [0,1,1,1],\n            };\n            break;\n        default:\n            console.log('State not defined');  \n    }\n\treturn flags;\n  }\n\n \n  export default {manageStates};\n"]},"metadata":{},"sourceType":"module"}