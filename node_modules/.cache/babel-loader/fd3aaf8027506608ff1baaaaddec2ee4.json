{"ast":null,"code":"var _jsxFileName = \"/home/paula/Documents/Practica/git/user_interface/src/components/InferenceUI/InferenceUI.js\";\nimport './InferenceUI.css';\nimport { Container } from 'reactstrap';\n/* Container, Col, Row,\n Form, FormGroup, Label, Input,\n Card, CardImg, CardBody, CardTitle, CardText } from 'reactstrap';*/\n\nimport React, { useRef, useEffect } from 'react';\nimport io from 'socket.io-client';\n\nconst Canvas = props => {\n  const canvasRef = useRef(null);\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    const context = canvas.getContext('2d');\n    canvas.width = 640;\n    canvas.height = 480;\n    context.width = 640;\n    context.height = 480;\n    context.fillStyle = '#000000';\n    context.fillRect(0, 0, context.canvas.width, context.canvas.height);\n\n    const render = () => {};\n  }, []);\n  return /*#__PURE__*/React.createElement(\"canvas\", Object.assign({\n    ref: canvasRef\n  }, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 10\n    }\n  }));\n};\n\nclass WebcamStream extends React.Component {\n  constructor(props) {\n    super(props);\n    this.videoTag = React.createRef();\n  }\n\n  componentDidMount() {\n    // getting access to webcam\n    navigator.mediaDevices.getUserMedia({\n      video: true\n    }).then(stream => this.videoTag.current.srcObject = stream).catch(console.log);\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"video\", {\n      id: this.props.id,\n      ref: this.videoTag,\n      width: this.props.width,\n      height: this.props.height,\n      autoPlay: true,\n      title: this.props.title,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 16\n      }\n    });\n  }\n\n}\n\nclass InferenceUI extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(Container, {\n      id: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 6\n      }\n    }, /*#__PURE__*/React.createElement(WebcamStream, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 7\n      }\n    }), /*#__PURE__*/React.createElement(Canvas, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 7\n      }\n    }));\n  }\n\n}\n\nexport default InferenceUI;","map":{"version":3,"sources":["/home/paula/Documents/Practica/git/user_interface/src/components/InferenceUI/InferenceUI.js"],"names":["Container","React","useRef","useEffect","io","Canvas","props","canvasRef","canvas","current","context","getContext","width","height","fillStyle","fillRect","render","WebcamStream","Component","constructor","videoTag","createRef","componentDidMount","navigator","mediaDevices","getUserMedia","video","then","stream","srcObject","catch","console","log","id","title","InferenceUI","state"],"mappings":";AAAA,OAAO,mBAAP;AACA,SAAQA,SAAR,QACW,YADX;AAEG;;;;AAGH,OAAOC,KAAP,IAAeC,MAAf,EAAuBC,SAAvB,QAAuC,OAAvC;AACA,OAAOC,EAAP,MAAe,kBAAf;;AAGA,MAAMC,MAAM,GAAGC,KAAK,IAAI;AACtB,QAAMC,SAAS,GAAGL,MAAM,CAAC,IAAD,CAAxB;AACAC,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMK,MAAM,GAAGD,SAAS,CAACE,OAAzB;AACA,UAAMC,OAAO,GAAGF,MAAM,CAACG,UAAP,CAAkB,IAAlB,CAAhB;AAEFH,IAAAA,MAAM,CAACI,KAAP,GAAe,GAAf;AACAJ,IAAAA,MAAM,CAACK,MAAP,GAAe,GAAf;AACAH,IAAAA,OAAO,CAACE,KAAR,GAAe,GAAf;AACAF,IAAAA,OAAO,CAACG,MAAR,GAAgB,GAAhB;AAEEH,IAAAA,OAAO,CAACI,SAAR,GAAoB,SAApB;AACAJ,IAAAA,OAAO,CAACK,QAAR,CAAiB,CAAjB,EAAoB,CAApB,EAAuBL,OAAO,CAACF,MAAR,CAAeI,KAAtC,EAA6CF,OAAO,CAACF,MAAR,CAAeK,MAA5D;;AAGF,UAAMG,MAAM,GAAG,MAAM,CAEpB,CAFD;AAGC,GAhBQ,EAgBN,EAhBM,CAAT;AAoBA,sBAAO;AAAQ,IAAA,GAAG,EAAET;AAAb,KAA4BD,KAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAP;AACD,CAvBD;;AAyBA,MAAMW,YAAN,SAA2BhB,KAAK,CAACiB,SAAjC,CAA2C;AACvCC,EAAAA,WAAW,CAACb,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,SAAKc,QAAL,GAAgBnB,KAAK,CAACoB,SAAN,EAAhB;AACH;;AAEDC,EAAAA,iBAAiB,GAAG;AAChB;AACDC,IAAAA,SAAS,CAACC,YAAV,CACMC,YADN,CACmB;AAACC,MAAAA,KAAK,EAAE;AAAR,KADnB,EAEMC,IAFN,CAEWC,MAAM,IAAI,KAAKR,QAAL,CAAcX,OAAd,CAAsBoB,SAAtB,GAAkCD,MAFvD,EAGME,KAHN,CAGYC,OAAO,CAACC,GAHpB;AAIF;;AAEDhB,EAAAA,MAAM,GAAG;AACL,wBAAO;AAAO,MAAA,EAAE,EAAE,KAAKV,KAAL,CAAW2B,EAAtB;AACO,MAAA,GAAG,EAAE,KAAKb,QADjB;AAEO,MAAA,KAAK,EAAE,KAAKd,KAAL,CAAWM,KAFzB;AAGO,MAAA,MAAM,EAAE,KAAKN,KAAL,CAAWO,MAH1B;AAIO,MAAA,QAAQ,MAJf;AAKO,MAAA,KAAK,EAAE,KAAKP,KAAL,CAAW4B,KALzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AAMH;;AArBsC;;AAuB3C,MAAMC,WAAN,SAA0BlC,KAAK,CAACiB,SAAhC,CAA0C;AACtCC,EAAAA,WAAW,CAACb,KAAD,EAAO;AACd,UAAMA,KAAN;AACA,SAAK8B,KAAL,GAAa,EAAb;AAGH;;AAEDpB,EAAAA,MAAM,GAAG;AACL,wBACH,oBAAC,SAAD;AAAW,MAAA,EAAE,EAAC,WAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACC,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADD,eAEC,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFD,CADG;AAOH;;AAhBqC;;AAkB1C,eAAemB,WAAf","sourcesContent":["import './InferenceUI.css';\nimport {Container\n    } from 'reactstrap';\n   /* Container, Col, Row,\n    Form, FormGroup, Label, Input,\n    Card, CardImg, CardBody, CardTitle, CardText } from 'reactstrap';*/\nimport React, {useRef, useEffect} from 'react';\nimport io from 'socket.io-client';\n\n\nconst Canvas = props => {\n  const canvasRef = useRef(null)\n  useEffect(() => {\n    const canvas = canvasRef.current\n    const context = canvas.getContext('2d')\n\n\t\tcanvas.width = 640;\n\t\tcanvas.height= 480;\n\t\tcontext.width= 640;\n\t\tcontext.height= 480;\n\n    context.fillStyle = '#000000'\n    context.fillRect(0, 0, context.canvas.width, context.canvas.height)\n\t\n\n\t\tconst render = () => {\n\n\t\t}\n  }, [])\n\n\t\t\t\t\n\n  return <canvas ref={canvasRef} {...props}/>\n}\n\nclass WebcamStream extends React.Component {\n    constructor(props) {\n        super(props);\n        this.videoTag = React.createRef()\n    }\n\n    componentDidMount() {\n        // getting access to webcam\n       navigator.mediaDevices\n            .getUserMedia({video: true})\n            .then(stream => this.videoTag.current.srcObject = stream)\n            .catch(console.log);\n    }\n\n    render() {\n        return <video id={this.props.id}\n                      ref={this.videoTag}\n                      width={this.props.width}\n                      height={this.props.height}\n                      autoPlay\n                      title={this.props.title}></video>\n    }\n}\nclass InferenceUI extends React.Component {\n    constructor(props){\n        super(props);\n        this.state = {\n\n        }\n    }\n\t\n    render() {\n        return (\n\t\t\t\t\t<Container id=\"container\">\n\t\t\t\t\t\t<WebcamStream/>\n\t\t\t\t\t\t<Canvas/>\n\t\t\t\t\t</Container>\n        );\n        \n    }\n}\nexport default InferenceUI;\n"]},"metadata":{},"sourceType":"module"}