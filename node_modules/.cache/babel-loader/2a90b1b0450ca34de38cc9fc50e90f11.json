{"ast":null,"code":"var _jsxFileName = \"/home/paula/Documentos/Simbiotica/git/acq_interface/src/components/InferenceUI/WebcamStream/WebcamStream.js\";\nimport './WebcamStream.css';\nimport React from 'react'; //import {Alert} from 'reactstrap';\n\nimport \"@fortawesome/fontawesome-free/css/all.css\";\nimport JSZipUtils from 'jszip-utils';\nimport JSZip from 'jszip'; //import FileSaver from 'file-saver';\n\nimport { handleDataAvailable, ctrlBtnFunction, countdown, captureScreenshot, mirror, fullScreen, organizeScreen } from './functions.js';\nconst framesPerZip = 20; //tambien se debe configurar en Inference.js\n\nconst packetsSentLimit = 10; // Agregar variable para almacenar la hora en que se apretó el start.\n// Administrar el fullscreen desde acá ahora.\n\nclass WebcamStream extends React.Component {\n  constructor(props) {\n    super();\n    this.state = {};\n    this.videoTag = React.createRef();\n    this.tick = this.tick.bind(this);\n    this.timeStartPressed = null;\n    this.mediaRecorder = null;\n    this.recordedChunks = [];\n    this.videoRecorded = null;\n    this.mirrorScale = [1, 1];\n    this.mirrorTranslate = [0, 0];\n    this.canvasHeight = 0;\n    this.canvasWidth = 0;\n    this.videoSrc = null;\n  }\n\n  setStream() {\n    var selectVideoSrc = document.getElementById(\"videoSelectConf\");\n\n    if (this.videoSrc) {\n      try {\n        selectVideoSrc.value = this.videoSrc;\n      } catch (e) {\n        console.log(e);\n      }\n    } // Falta cerrar el stream anterior antes de abrir uno nuevo.\n\n\n    navigator.mediaDevices.getUserMedia({\n      video: {\n        deviceId: selectVideoSrc ? {\n          exact: selectVideoSrc.value\n        } : undefined,\n        facingMode: \"enviroment\"\n      }\n    }).then(stream => {\n      this.videoTag.current.srcObject = stream;\n      requestAnimationFrame(this.tick);\n      window.stream = stream;\n      return navigator.mediaDevices.enumerateDevices();\n    }).then(gotDevices).catch(function (e) {\n      console.log('guardar esto');\n      console.log(e);\n    });\n  }\n\n  tick() {\n    const video = this.videoTag.current;\n    let countdownCurrent;\n    let countdownNext;\n    const checkVideoState = setInterval(() => {\n      if (video.readyState === video.HAVE_ENOUGH_DATA) {\n        clearInterval(checkVideoState);\n        this.props.setIsVideoLoading(false);\n        var canvasPreviewElement = this.props.canvasPreview.current;\n\n        if (canvasPreviewElement) {\n          var canvasPreview = canvasPreviewElement.getContext(\"2d\");\n          canvasPreviewElement.height = video.videoHeight;\n          canvasPreviewElement.width = video.videoWidth;\n          canvasPreview.translate(this.mirrorTranslate[0], this.mirrorTranslate[1]);\n          canvasPreview.scale(this.mirrorScale[0], this.mirrorScale[1]);\n          canvasPreview.drawImage(video, 0, 0, canvasPreviewElement.width, canvasPreviewElement.height);\n\n          if (this.props.currentState.stateName.localeCompare(\"Countdown\") === 0) {\n            countdown(canvasPreviewElement, this, countdownCurrent, countdownNext);\n          }\n\n          requestAnimationFrame(this.tick);\n        }\n      }\n    }, 50);\n  }\n\n  startRecording() {\n    var options = {\n      mimeType: \"video/webm;codecs=vp8\"\n    };\n    this.mediaRecorder = new MediaRecorder(this.props.canvasPreview.current.captureStream(), options);\n    this.mediaRecorder.ondataavailable = handleDataAvailable(this);\n    this.mediaRecorder.start();\n  }\n\n  stopRecording() {\n    this.mediaRecorder.stop();\n  }\n\n  captureScreenshot() {\n    captureScreenshot(this);\n  }\n\n  mirror(way) {\n    mirror(this, way);\n  }\n\n  fullScreen() {\n    fullScreen(this);\n  }\n\n  organizeScreen() {\n    organizeScreen(this);\n  }\n\n  render() {\n    const isVideoLoading = this.props.currentState.isVideoLoading;\n    const colorScreenshotBtn = this.props.currentState.enableCaptureBtn ? \"white\" : \"grey\";\n\n    if (!isVideoLoading && !this.props.currentState.hideSidePanel && !this.props.currentState.fullScreen) {\n      let btns = document.getElementById(\"buttons\");\n\n      if (btns) {\n        btns.style.top = 50 * 3 / 4 + \"vw\";\n      }\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      id: \"WebcamStream_Wrapper\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"script\", {\n      src: \"adapter.js\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"video\", {\n      ref: this.videoTag,\n      autoPlay: true,\n      id: \"video\",\n      style: {\n        display: \"none\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 9\n      }\n    }), !isVideoLoading && /*#__PURE__*/React.createElement(\"div\", {\n      id: \"canvasDiv\",\n      className: \"canvasRendered\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 11\n      }\n    }, this.props.currentState.canvasAlert && /*#__PURE__*/React.createElement(\"div\", {\n      className: \"w_divAlert\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 15\n      }\n    }, \"Verifique\"), this.props.currentState.stateName.localeCompare(\"GetCon\") === 0 && /*#__PURE__*/React.createElement(\"div\", {\n      className: \"w_divAlert\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 15\n      }\n    }, \"Estableciendo conexi\\xF3n con el servidor.\"), /*#__PURE__*/React.createElement(\"div\", {\n      id: \"alertsFromServer\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 13\n      }\n    }, this.props.currentState.blurAlert && /*#__PURE__*/React.createElement(\"div\", {\n      className: \"w_divAlert\",\n      style: {\n        position: 'relative'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 18\n      }\n    }, \"Blurrrrrrrrrr\"), this.props.currentState.domAlert && /*#__PURE__*/React.createElement(\"div\", {\n      className: \"w_divAlert\",\n      style: {\n        position: 'relative'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 18\n      }\n    }, \"doooooooooooooom\")), this.props.currentState.renderCanvas && /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"canvas\", {\n      ref: this.props.canvasPreview,\n      id: \"canvasPreview\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 17\n      }\n    }), !this.props.currentState.hideSidePanel && !this.props.currentState.fullScreen && /*#__PURE__*/React.createElement(\"div\", {\n      id: \"div_hideSP\",\n      onClick: () => this.props.hideSidePanel(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 19\n      }\n    }, '>')), this.props.currentState.stateName.localeCompare(\"Countdown\") === 0 && /*#__PURE__*/React.createElement(\"canvas\", {\n      id: \"canvasCountdown\",\n      width: \"1000\",\n      height: \"750\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 15\n      }\n    }), this.props.currentState.renderCanvas && /*#__PURE__*/React.createElement(\"div\", {\n      id: \"buttons\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      id: \"screenshotBtn\",\n      onClick: () => {\n        if (this.props.currentState.enableCaptureBtn) {\n          this.captureScreenshot();\n        }\n      },\n      style: {\n        color: colorScreenshotBtn\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      className: \"fas fa-camera\",\n      style: {\n        margin: \"0px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 25\n      }\n    })), this.props.currentState.enableCtrlBtn && /*#__PURE__*/React.createElement(\"div\", {\n      id: \"ctrlBtn\",\n      onClick: () => {\n        ctrlBtnFunction(this);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 19\n      }\n    }, this.props.currentState.textCtrlBtn), !this.props.currentState.enableCtrlBtn && /*#__PURE__*/React.createElement(\"div\", {\n      id: \"ctrlBtnDisabled\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 19\n      }\n    }, this.props.currentState.textCtrlBtn), /*#__PURE__*/React.createElement(\"span\", {\n      id: \"fullScreenBtn\",\n      onClick: () => fullScreen(this),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 17\n      }\n    }, !this.props.currentState.fullScreen && /*#__PURE__*/React.createElement(\"i\", {\n      className: \"fas fa-expand\",\n      style: {\n        margin: \"0px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 27\n      }\n    }), this.props.currentState.fullScreen && /*#__PURE__*/React.createElement(\"i\", {\n      className: \"fas fa-compress\",\n      style: {\n        margin: \"0px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 27\n      }\n    })))), isVideoLoading && /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"canvas\", {\n      id: \"canvasMessage\",\n      className: \"canvasRendered\",\n      width: \"1000\",\n      height: \"750\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 13\n      }\n    })), !this.props.currentState.renderCanvas && /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        width: '100%'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"video\", {\n      id: \"recordedVideoElement\",\n      controls: true,\n      src: null,\n      className: \"canvasRendered\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      id: \"ctrlStartOver\",\n      onClick: () => {\n        ctrlBtnFunction(this);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 13\n      }\n    }, this.props.currentState.textCtrlBtn)));\n  }\n\n}\n\nfunction urlToPromise(url) {\n  return new Promise(function (resolve, reject) {\n    JSZipUtils.getBinaryContent(url, function (err, data) {\n      if (err) {\n        reject(err);\n      } else {\n        resolve(data);\n      }\n    });\n  });\n}\n\nfunction gotDevices(deviceInfos) {\n  const videoSelect = document.getElementById(\"videoSelectConf\");\n  const selectors = [videoSelect]; // Handles being called several times to update labels. Preserve values.\n\n  const values = selectors.map(select => select.value);\n  selectors.forEach(select => {\n    while (select.firstChild) {\n      select.removeChild(select.firstChild);\n    }\n  });\n\n  for (let i = 0; i !== deviceInfos.length; ++i) {\n    const deviceInfo = deviceInfos[i];\n    const option = document.createElement('option');\n    option.value = deviceInfo.deviceId;\n\n    if (deviceInfo.kind === 'videoinput') {\n      option.text = deviceInfo.label || `camera ${videoSelect.length + 1}`;\n      videoSelect.appendChild(option);\n    }\n  }\n\n  selectors.forEach((select, selectorIndex) => {\n    if (Array.prototype.slice.call(select.childNodes).some(n => n.value === values[selectorIndex])) {\n      select.value = values[selectorIndex];\n    }\n  });\n}\n\nexport default WebcamStream;","map":{"version":3,"sources":["/home/paula/Documentos/Simbiotica/git/acq_interface/src/components/InferenceUI/WebcamStream/WebcamStream.js"],"names":["React","JSZipUtils","JSZip","handleDataAvailable","ctrlBtnFunction","countdown","captureScreenshot","mirror","fullScreen","organizeScreen","framesPerZip","packetsSentLimit","WebcamStream","Component","constructor","props","state","videoTag","createRef","tick","bind","timeStartPressed","mediaRecorder","recordedChunks","videoRecorded","mirrorScale","mirrorTranslate","canvasHeight","canvasWidth","videoSrc","setStream","selectVideoSrc","document","getElementById","value","e","console","log","navigator","mediaDevices","getUserMedia","video","deviceId","exact","undefined","facingMode","then","stream","current","srcObject","requestAnimationFrame","window","enumerateDevices","gotDevices","catch","countdownCurrent","countdownNext","checkVideoState","setInterval","readyState","HAVE_ENOUGH_DATA","clearInterval","setIsVideoLoading","canvasPreviewElement","canvasPreview","getContext","height","videoHeight","width","videoWidth","translate","scale","drawImage","currentState","stateName","localeCompare","startRecording","options","mimeType","MediaRecorder","captureStream","ondataavailable","start","stopRecording","stop","way","render","isVideoLoading","colorScreenshotBtn","enableCaptureBtn","hideSidePanel","btns","style","top","display","canvasAlert","blurAlert","position","domAlert","renderCanvas","color","margin","enableCtrlBtn","textCtrlBtn","urlToPromise","url","Promise","resolve","reject","getBinaryContent","err","data","deviceInfos","videoSelect","selectors","values","map","select","forEach","firstChild","removeChild","i","length","deviceInfo","option","createElement","kind","text","label","appendChild","selectorIndex","Array","prototype","slice","call","childNodes","some","n"],"mappings":"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","sourcesContent":["import './WebcamStream.css'\nimport React from 'react';\n//import {Alert} from 'reactstrap';\n\nimport \"@fortawesome/fontawesome-free/css/all.css\"\n\nimport JSZipUtils from 'jszip-utils';\nimport JSZip from 'jszip';\n//import FileSaver from 'file-saver';\nimport {handleDataAvailable, ctrlBtnFunction, countdown, \n        captureScreenshot, mirror,\n        fullScreen, organizeScreen} from './functions.js';\n        \nconst framesPerZip = 20;\n//tambien se debe configurar en Inference.js\nconst packetsSentLimit = 10;\n\n\n// Agregar variable para almacenar la hora en que se apretó el start.\n// Administrar el fullscreen desde acá ahora.\nclass WebcamStream extends React.Component {\n  constructor(props) {\n    super();\n    this.state = {\n    };\n\n    this.videoTag = React.createRef();\n    this.tick = this.tick.bind(this);\n\n    this.timeStartPressed = null;\n\n    this.mediaRecorder = null;\n    this.recordedChunks= [];\n\t  this.videoRecorded = null;\n\n    this.mirrorScale = [1,1];\n    this.mirrorTranslate = [0,0];\n\n    this.canvasHeight = 0;\n    this.canvasWidth = 0;\n    \n    this.videoSrc = null;\n    \n\n  }\n\n  setStream(){\n    var selectVideoSrc = document.getElementById(\"videoSelectConf\");\n    if(this.videoSrc){\n      try{\n        selectVideoSrc.value = this.videoSrc;\n        }\n      catch(e){console.log(e)}\n    }\n    \n    // Falta cerrar el stream anterior antes de abrir uno nuevo.\n    navigator.mediaDevices.getUserMedia({\n      video: {\n        deviceId: selectVideoSrc? {exact: selectVideoSrc.value}:undefined,\n        facingMode: \"enviroment\"\n      }\n    }).then(stream => {\n      this.videoTag.current.srcObject = stream;\n      requestAnimationFrame(this.tick);\n      window.stream = stream;\n      \n      return navigator.mediaDevices.enumerateDevices();\n    }).then(gotDevices)\n    .catch(function(e){\n        console.log('guardar esto');\n        console.log(e);\n    });\n  }\n\n  tick() {\n    const video = this.videoTag.current;\n    let countdownCurrent;\n    let countdownNext;\n    const checkVideoState = setInterval(() => {\n      if (video.readyState === video.HAVE_ENOUGH_DATA) {\n        clearInterval(checkVideoState);\n        this.props.setIsVideoLoading(false);\n        var canvasPreviewElement = this.props.canvasPreview.current;\n        if(canvasPreviewElement){\n          var canvasPreview = canvasPreviewElement.getContext(\"2d\");\n          canvasPreviewElement.height = video.videoHeight;\n          canvasPreviewElement.width = video.videoWidth;\n          canvasPreview.translate(this.mirrorTranslate[0],this.mirrorTranslate[1]);\n          canvasPreview.scale(this.mirrorScale[0],this.mirrorScale[1]);\n\n          canvasPreview.drawImage(\n              video,\n              0,\n              0,\n              canvasPreviewElement.width,\n              canvasPreviewElement.height\n          );\n          if(this.props.currentState.stateName.localeCompare(\"Countdown\")===0){\n            countdown(canvasPreviewElement,this,countdownCurrent, countdownNext);\n          }\n          requestAnimationFrame(this.tick);\n        }\n      }\n    }, 50);\n  }\n  startRecording(){\n      var options = { mimeType: \"video/webm;codecs=vp8\" };\n      this.mediaRecorder = new MediaRecorder(this.props.canvasPreview.current.captureStream(), options);\n      this.mediaRecorder.ondataavailable = handleDataAvailable(this);\n      this.mediaRecorder.start();\n  }\n\n\tstopRecording(){\n    this.mediaRecorder.stop();\n\t}\n\n  \n  captureScreenshot(){\n    captureScreenshot(this);\n    }\n  mirror(way){\n    mirror(this,way);\n  }\n  fullScreen(){\n    fullScreen(this);\n  }\n  organizeScreen(){\n    organizeScreen(this);\n  }\n  render() {\n    const isVideoLoading = this.props.currentState.isVideoLoading;\n    const colorScreenshotBtn = (this.props.currentState.enableCaptureBtn)? \"white\" : \"grey\";\n\n    if(!isVideoLoading && !this.props.currentState.hideSidePanel && !this.props.currentState.fullScreen){\n      let btns= document.getElementById(\"buttons\");\n      if(btns){\n        btns.style.top = 50*3/4+\"vw\";}\n    }\n    return (\n      <div id=\"WebcamStream_Wrapper\">\n\n        <script src=\"adapter.js\"></script>\n\n        {/* Dummy video tag to recieve UserMedia stream.*/}\n        <video\n          ref={this.videoTag}\n          autoPlay\n          id = \"video\"\n          style={{ display: \"none\"}}\n        />\n\n        {!isVideoLoading &&\n          <div id=\"canvasDiv\" className=\"canvasRendered\">\n            {this.props.currentState.canvasAlert &&\n              <div className=\"w_divAlert\" >\n                Verifique\n              </div>\n            }\n\n           {this.props.currentState.stateName.localeCompare(\"GetCon\") === 0 &&\n              <div className=\"w_divAlert\" >\n                Estableciendo conexión con el servidor.\n              </div>\n            }\n            <div id='alertsFromServer'>\n              {this.props.currentState.blurAlert &&\n                 <div className=\"w_divAlert\" style={{position: 'relative' }}>\n                   Blurrrrrrrrrr\n                 </div>\n               }\n              {this.props.currentState.domAlert &&\n                 <div className=\"w_divAlert\" style={{position: 'relative'}}>\n                   doooooooooooooom\n                 </div>\n               }\n            </div>\n            \n            {this.props.currentState.renderCanvas &&\n              <div>\n                <canvas ref={this.props.canvasPreview}\n                        id=\"canvasPreview\"/>\n                {!this.props.currentState.hideSidePanel && !this.props.currentState.fullScreen &&\n                  <div id='div_hideSP' onClick={()=>this.props.hideSidePanel()}>{'>'}</div>\n                }\n              </div>\n\n            }\n            {(this.props.currentState.stateName.localeCompare(\"Countdown\") === 0) &&\n              <canvas id=\"canvasCountdown\" width=\"1000\" height=\"750\"/>\n            }\n            {this.props.currentState.renderCanvas &&\n\t\t\t\t      <div id=\"buttons\">\n                <span  id = \"screenshotBtn\"\n                       onClick={() => {if(this.props.currentState.enableCaptureBtn){this.captureScreenshot()}}}\n                       style={{color: colorScreenshotBtn}}>\n                        <i className=\"fas fa-camera\" style={{margin: \"0px\" }}></i>\n                </span>\n                {this.props.currentState.enableCtrlBtn &&\n                  <div id=\"ctrlBtn\"\n                       onClick={()=>{ctrlBtnFunction(this);}}>\n                       {this.props.currentState.textCtrlBtn}\n                  </div>\n                }\n                {!this.props.currentState.enableCtrlBtn &&\n                  <div id=\"ctrlBtnDisabled\">\n                       {this.props.currentState.textCtrlBtn}\n                  </div>\n                }\n                <span  id = \"fullScreenBtn\" \n                       onClick={()=>fullScreen(this)}>\n                       {!this.props.currentState.fullScreen &&\n                          <i className=\"fas fa-expand\" style={{margin: \"0px\"}}></i>}\n                       {this.props.currentState.fullScreen && \n                          <i className=\"fas fa-compress\" style={{margin: \"0px\"}}></i>}\n                </span>\n              </div>\n            }\n          </div>\n        }\n        \n        {isVideoLoading &&\n          <div>\n            <canvas id=\"canvasMessage\"\n                    className=\"canvasRendered\" width=\"1000\" height=\"750\"/>\n          </div>\n        }\n        {!this.props.currentState.renderCanvas &&\n          <div style={{width: '100%'}}>\n            <video id = \"recordedVideoElement\"\n                   controls\n                   src={null}\n                   className=\"canvasRendered\"/>\n            <div id= \"ctrlStartOver\" \n                    onClick={()=>{ctrlBtnFunction(this);}}\n                    >\n                    {this.props.currentState.textCtrlBtn}\n                    </div>\n          </div>\n        }\n      </div>\n    );\n  }\n}\nfunction urlToPromise(url) {\n    return new Promise(function(resolve, reject) {\n      JSZipUtils.getBinaryContent(url, function (err, data) {\n        if(err) {\n          reject(err);\n        }\n        else {\n          resolve(data);\n        }\n      });\n    });\n  }\n\nfunction gotDevices(deviceInfos) {\n  const videoSelect = document.getElementById(\"videoSelectConf\");\n  const selectors = [videoSelect];\n  // Handles being called several times to update labels. Preserve values.\n  const values = selectors.map(select => select.value);\n  selectors.forEach(select => {\n    while (select.firstChild) {\n      select.removeChild(select.firstChild);\n    }\n  });\n  for (let i = 0; i !== deviceInfos.length; ++i) {\n    const deviceInfo = deviceInfos[i];\n    const option = document.createElement('option');\n    option.value = deviceInfo.deviceId;\n    if (deviceInfo.kind === 'videoinput') {\n      option.text = deviceInfo.label || `camera ${videoSelect.length + 1}`;\n      videoSelect.appendChild(option);\n    }   \n  }\n  selectors.forEach((select, selectorIndex) => {\n    if (Array.prototype.slice.call(select.childNodes).some(n => n.value === values[selectorIndex])) {\n      select.value = values[selectorIndex];\n    }\n  });\n}\nexport default WebcamStream;\n"]},"metadata":{},"sourceType":"module"}